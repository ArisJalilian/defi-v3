{"version":3,"sources":["components/NumericalInput/index.tsx","hooks/useTokenToBalance.js","components/hoc/withBalance.js","pages/Borrow/ModalProvider/modals/UnlockToken.js","pages/Borrow/Provider/index.js","pages/Borrow/GlobalOverall/index.js","services/aave/gql.js","components/BorrowInputPanel/index.js","pages/Borrow/LendingBalance/LendingModalContainer.js","pages/Borrow/LendingBalance/index.js","pages/Borrow/BorrowBalance/BorrowTokenModal.js","pages/Borrow/BorrowBalance/RepayTokenModal.js","pages/Borrow/BorrowBalance/index.js","pages/Borrow/Common/index.js","pages/Borrow/ModalProvider/index.js","pages/Borrow/ModalProvider/modals/WrapEth.js","pages/Borrow/ModalProvider/modals/LendingToken.js","state/defi/actions.js","pages/Borrow/ModalProvider/modals/BorrowToken.js","pages/Borrow/index.js"],"names":["StyledInput","styled","input","error","theme","red1","text1","align","size","reverse","noBorder","modalBG","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","title","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","useSpotBalances","useActiveWeb3React","account","library","baseToken","useSelector","getBaseToken","quoteToken","getQuoteToken","knownTokens","useMemo","getKnownTokens","tokens","getTokens","wethToken","getWethToken","allBalances","address","useState","balances","setBalances","fetchBalances","a","tokensToTokenBalances","res","useEffect","length","useTokenToBalance","window","ethereum","ethBalance","useETHBalances","wethBalance","find","b","token","symbol","tokensBalance","filter","ethereumBalance","ETH","toExact","bn","BigNumber","currency","undefined","balance","totalEthBalance","total","plus","baseTokenBalance","searchToken","tokenBalances","wethTokenBalance","tokenToFind","quoteTokenBalance","withBalance","Component","props","console","log","UnlockToken","unlocking","setUnlocking","currentStep","getStepsModalCurrentStep","web3","dispatch","useDispatch","unlockToken","getContractWrappers","getProvider","contractWrappers","approveAddress","contractAddresses","erc20Proxy","erc20Token","ERC20TokenContract","amount","UNLIMITED_ALLOWANCE_IN_BASE_UNITS","approve","sendTransactionAsync","from","tx","awaitTransactionSuccessAsync","stepsModalAdvanceStep","onDismiss","pendingText","GraphQlProvider","client","getAaveGraphClient","children","StyledCard","Card","Text","span","variant","GlobalOverall","isNative","getAaveCurrency","userAccountData","getAaveUserAccountData","ethUsd","getEthInUsd","fetchAaveGlobal","getAaveOverall","userAcc","setAaveUserAccountData","loadingLendingPoolData","useInterval","formatETHField","field","dividedBy","toFixed","multipliedBy","totalLiquidity","totalCollateralETH","totalBorrowsETH","availableBorrowsETH","currentLiquidationThreshold","ltv","healthFactor","gt","columns","dataField","text","formatter","cellContent","row","rowIndex","wrapperClasses","bordered","classes","bootstrap4","keyField","remote","data","ResponsiveTable","breakpoint","direction","withoutBorder","GET_AAVE_RESERVES","gql","InputRow","div","flexRowNoWrap","Container","Label","InputContainer","LabelRow","Aligner","InputPanel","flexColumnNoWrap","StyledTokenName","CurrencySelect","button","bg1","BalanceRow","BorrowInputPanel","state","valueStr","tokenAmountInUnits","decimals","valueFixedDecimals","_updateValue","newValue","unitsInTokenAmount","min","isLessThan","setState","this","label","disable","selected","hideInput","id","showBalance","balanceText","Token","name","style","padding","borderRadius","className","CurrencyLogo","active","Boolean","slice","toUpperCase","NumericalInput","getDerivedStateFromProps","eq","Title","h4","SummaryRow","CustomTypeBlack","TYPE","black","StyledButton","LendingModalContainer","btnMsg","cardMsg","componentDidMount","TX_DEFAULTS_TRANSFER","gasTransferToken","toast","submit","tokenBalance","isEth","aToken","isLending","onSubmit","_reset","_closeModal","setMax","maxBalance","updateAmount","coinSymbol","displayDecimals","closeModal","show","liquidityRate","tokenSymbolToDisplayString","btnPrefix","balanceInUnits","btnText","isSubmitAllowed","isGreaterThan","Modal","onHide","centered","Body","Row","Col","xs","max","pow","toString","marginBottom","fontWeight","color","disabled","onClick","LogoContainer","Symbol","Name","CellText","isEthState","setIsEthState","isHideZeroBalance","isStableCoin","isModalOpenState","setIsModalOpenState","isSubmittingState","setIsSubmittingState","aTokenDataState","setATokenDataState","isLendingState","setIsLendingState","tokenBalanceState","setTokenBalanceState","order","sort","setSort","aTokensData","getATokensData","tokensPrice","getTokensPrice","ethTotalBalance","currencySelector","getAaveLoadingState","tokensRow","map","tokenD","isEthToken","isWethToken","tb","isEqualTo","displayBalance","displayDepositBalance","tokB","formattedLendBalance","formattedBalance","tokenPrice","t","c_id","formatTokenSymbol","price_usd","apy","tokenName","tokenSymbol","sortedData","handleSubmit","startLendingTokenSteps","Protocol","Aave","startUnLendingTokenSteps","wethPlusEthBalance","openLendingModal","openUnLendingModal","bind","isAction","formatExtraData","onTableChange","context","sortField","sortOrder","isSubmitting","BorrowTokenModal","availableForBorrow","setError","setAmount","variableBorrowRate","RepayTokenModal","borrowedBalance","setIsNotEnoughBalance","isLessThanOrEqualTo","balanceInShort","minus","balanceBorrowedInUnits","amountSubmit","isModalBorrowOpenState","setIsModalBorrowOpenState","isModalRepayOpenState","setIsModalRepayOpenState","isBorrowState","setIsBorrowState","availableForBorrowState","setAvailableForBorrowState","borrowBalanceState","setBorrowBalanceState","reserves","getAaveReservesGQLResponse","borrowBalance","reserve","r","displayAvailableForBorrowBalance","displayBorrowedBalance","availableBalanceForBorrowToken","priceInEth","price","totalAvailableForBorrowETH","integerValue","ROUND_DOWN","formattedBorrowedBalance","formattedAvailableForBorrowBalance","closeBorrowModal","closeRepayModal","startBorrowTokenSteps","startRepayTokenSteps","openBorrowModal","openRepayModal","modals","web3Wrapper","HeaderCol","CustomNav","Nav","CustomNavItem","Item","CustomNavLink","Link","primary","BorrowCommon","useQuery","pollInterval","loading","aaveLoadingState","setAaveReservesGQLResponse","AaveLoadingState","NotLoaded","initAave","fetchAave","Tab","defaultActiveKey","fill","eventKey","Content","Pane","wrapping","setWrapping","currentWethBalance","newWethBalance","convertingFrom","wrapEthereum","updateWethBalance","convertTxHash","connect","step","gasInfo","getGasInfo","onSubmitLendingToken","defiToken","getState","protocol","getDefiProtocol","txHash","lendingAToken","lendingDefiToken","onSubmitUnLendingToken","unLendingAToken","unLendingDefiToken","setLoading","amountOfTokenString","Lending","onDone","onSubmitBorrowToken","borrowAToken","borrowDefiToken","onSubmitRepayToken","repayAToken","repayDefiToken","isBorrow","Borrowing","ModalProvider","submitted","setSubmitted","setTxHash","isOpen","Web3","givenProvider","Web3Wrapper","hideModal","setStepsModalCurrentStep","chainId","CHAIN_ID","hash","kind","StepKind","ToggleTokenLock","WrapEth","LendingToken","UnLendingToken","RepayToken","BorrowToken","StyledRow","Borrow","Page"],"mappings":"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","file":"static/js/28.a4f2119f.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string, noBorder?: boolean, reverse?: boolean, size?: string }>`\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  font-family: inherit;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: rgba(33, 36, 41, 0.5);\n  font-size: 1rem;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  height: ${({ size}) => size === 'sm' ? '48px' : '56px'};\n  border-bottom-right-radius: ${({ reverse }) => reverse ? '0' :  `1.125rem`};\n  border-top-right-radius: ${({ reverse }) => reverse ? '0' :  `1.125rem`};\n  border-bottom-left-radius: ${({ reverse }) => reverse ? '1.125rem' :  `0`};\n  border-top-left-radius: ${({ reverse }) => reverse ? '1.125rem' :  `0`};\n  padding-right: 0.625rem;\n  padding-left: ${({ noBorder, reverse }) => reverse ? '1.375rem' : noBorder ? '0.625rem' : `1.5rem`};\n  -webkit-appearance: textfield;\n  border-left: ${({ theme, noBorder }) => noBorder ? 'none' :  `3px solid ${theme.modalBG}`};\n  \n  @media (min-width: 768px) {\n    \n    padding-right: 4.5625rem;\n  }\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: rgba(255, 255, 255, .5);\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  size,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  size?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={event => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      size={size}\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import { useMemo, useState, useEffect } from 'react';\nimport {tokensToTokenBalances} from \"../utils/spot/tokens\";\nimport {useActiveWeb3React} from \"./index\";\nimport {useSelector} from \"react-redux\";\nimport {getBaseToken, getQuoteToken, searchToken} from \"../state/selectors\";\nimport {getKnownTokens} from \"../utils/known_tokens\";\nimport {useETHBalances} from \"../state/wallet/hooks\";\nimport {BigNumber} from \"@0x/utils\";\n\nexport const useTokenToBalance = (tokens, address, library) => {\n    const [balances, setBalances] = useState([]);\n\n    const fetchBalances = async () => {\n        if(address) {\n            const res = await tokensToTokenBalances(tokens, address, library)\n            setBalances(res);\n        }\n    }\n    useEffect(() => {\n        fetchBalances()\n    }, [address, tokens])\n\n    return useMemo(() => {\n        if(balances.length > 0) {\n            return balances;\n        } else {\n            return []\n        }\n    }, [address, balances, tokens])\n}\n\n\nexport const useSpotBalances = () => {\n    const { account, library } = useActiveWeb3React()\n\n    const baseToken = useSelector(getBaseToken);\n    const quoteToken = useSelector(getQuoteToken);\n\n    const knownTokens = useMemo(() => {\n        return getKnownTokens();\n    }, [])\n    const tokens = useMemo(() => {\n        return knownTokens.getTokens()\n    }, [])\n\n    const wethToken = useMemo(() => {\n        return knownTokens.getWethToken()\n    }, []);\n\n    const t = useMemo(() => {\n        return [...tokens, wethToken]\n    }, [wethToken, tokens])\n    const allBalances = useTokenToBalance(t, account, window.ethereum || library);\n\n    const ethBalance = useETHBalances([account])\n\n    const wethBalance = useMemo(() => {\n        return allBalances.find(b => b.token.symbol === wethToken.symbol);\n    }, [allBalances])\n\n    const tokensBalance = useMemo(() => {\n        return allBalances.filter(b => b.token.symbol !== wethToken.symbol);\n    }, [allBalances])\n\n    const ethereumBalance = useMemo(() => {\n        const ETH = ethBalance[account] ? ethBalance[account].toExact() : null\n        const bn = new BigNumber(ETH * (10 ** 18))\n\n        return {\n            token: ethBalance[account] ? ethBalance[account].currency : undefined,\n            balance: bn\n        }\n    }, [ethBalance]);\n\n    const totalEthBalance = useMemo(() => {\n        if(wethBalance && ethereumBalance) {\n            let total = wethBalance.balance;\n            if(ethereumBalance.token !== undefined) {\n                total = ethereumBalance.balance.plus(wethBalance.balance);\n            }\n\n            return total;\n        } else {\n            return undefined;\n        }\n    }, [ethereumBalance, wethBalance])\n\n    const baseTokenBalance = useMemo(() => {\n\n        return searchToken({ tokenBalances: tokensBalance, wethTokenBalance: wethBalance, tokenToFind: baseToken });\n    }, [baseToken, tokensBalance, wethBalance])\n\n    const quoteTokenBalance = useMemo(() => {\n\n        return searchToken({ tokenBalances: tokensBalance, wethTokenBalance: wethBalance, tokenToFind: quoteToken });\n    }, [quoteToken, tokensBalance, wethBalance])\n\n    return useMemo(() => {\n        return {\n            quoteTokenBalance,\n            baseTokenBalance,\n            totalEthBalance,\n            ethBalance: ethereumBalance,\n            wethBalance,\n            tokensBalance,\n        }\n    }, [account, baseToken, quoteToken, allBalances, baseTokenBalance, quoteTokenBalance])\n}\n","import {useSpotBalances} from \"../../hooks/useTokenToBalance\";\n\n\nconst withBalance = Component => {\n    return props => {\n        const balances = useSpotBalances();\n        console.log(balances);\n        return (\n            <Component\n                {...props}\n                {...balances}\n            />\n        )\n    }\n\n}\n\nexport default withBalance;\n","import {ConfirmationPendingContent} from \"../../../../components/TransactionConfirmationModal\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {getStepsModalCurrentStep} from \"../../../../state/selectors\";\nimport {UNLIMITED_ALLOWANCE_IN_BASE_UNITS} from \"../../../../constants\";\nimport {useActiveWeb3React} from \"../../../../hooks\";\nimport {getContractWrappers} from \"../../../../utils/spot/contractWrapper\";\nimport {ERC20TokenContract} from \"@0x/contract-wrappers\";\nimport {stepsModalAdvanceStep} from \"../../../../state/spotUI/actions\";\n\nconst UnlockToken = props => {\n    const [unlocking, setUnlocking] = useState(false);\n    const { account, library } = useActiveWeb3React();\n    const currentStep = useSelector(getStepsModalCurrentStep);\n    const { address, token } = currentStep;\n    const web3 = props.web3;\n    const dispatch = useDispatch();\n\n    const unlockToken = async () => {\n        try {\n\n            const contractWrappers = await getContractWrappers(web3.getProvider());\n            const approveAddress = address ? address : contractWrappers.contractAddresses.erc20Proxy;\n\n            const erc20Token = new ERC20TokenContract(token.address, contractWrappers.getProvider());\n            const amount = UNLIMITED_ALLOWANCE_IN_BASE_UNITS;\n\n            const tx = await erc20Token.approve(approveAddress, amount).sendTransactionAsync({\n                from: account,\n            });\n            setUnlocking(true)\n            await web3.awaitTransactionSuccessAsync(tx);\n\n            if(tx) {\n                setUnlocking(false)\n                dispatch(stepsModalAdvanceStep());\n            }\n\n        } catch(e) {\n            setUnlocking(false)\n            props.onDismiss();\n        }\n    }\n\n    useEffect(() => {\n        unlockToken();\n    }, [currentStep])\n\n    return (\n        <ConfirmationPendingContent onDismiss={unlocking ? () => null : props.onDismiss} pendingText={unlocking ? 'Unlocking' : 'Waiting for confirmation'} />\n    )\n}\n\nexport default UnlockToken;\n","import { ApolloProvider } from '@apollo/react-hooks';\n\nimport {getAaveGraphClient} from \"../../../services/aave/aave\";\n\nconst GraphQlProvider = props => {\n    return (\n        <ApolloProvider client={getAaveGraphClient()}>\n            {props.children}\n        </ApolloProvider>\n    )\n}\n\nexport default GraphQlProvider;\n","import { BigNumber } from '@0x/utils';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport './styles.scss';\nimport {useActiveWeb3React} from \"../../../hooks\";\nimport {getAaveCurrency, getAaveUserAccountData, getEthInUsd} from \"../../../state/selectors\";\nimport {getAaveOverall} from \"../../../services/aave/aave\";\nimport {setAaveUserAccountData} from \"../../../state/aave/actions\";\nimport React, {useEffect} from \"react\";\nimport useInterval from \"../../../hooks/useInterval\";\nimport Card from '../../../components/Card';\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ResponsiveTable from \"../../../components/ResponsiveTable\";\nimport styled from \"styled-components\";\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  \n  & .card-body {\n    padding: 24px 20px 20px;\n  }\n  \n  @media (min-width: 1400px) {  \n    & .card-body {\n      padding: 24px;\n    }\n  }\n`\n\nconst Text = styled.span`\n  color: ${({theme, variant}) => variant ? theme[variant] : theme.text1};\n  font-size: 1rem;\n  font-weight: 700;\n`\n\nconst GlobalOverall = props => {\n    const { account } = useActiveWeb3React();\n    const currencySelector = useSelector(getAaveCurrency);\n    const isNative = currencySelector === 'NATIVE'\n    const dispatch = useDispatch();\n    const userAccountData = useSelector(getAaveUserAccountData);\n    const ethUsd = useSelector(getEthInUsd);\n\n    const fetchAaveGlobal = async () => {\n        const userAcc = await getAaveOverall(account);\n        dispatch(setAaveUserAccountData(userAcc));\n    };\n\n\n    // initial loading\n    useEffect(() => {\n        const loadingLendingPoolData = async () => {\n            if (account) {\n                await fetchAaveGlobal();\n            }\n        };\n\n        loadingLendingPoolData();\n    }, [account]);\n\n\n    // Update global state\n    useInterval(async () => {\n        if (account) {\n            await fetchAaveGlobal();\n        }\n    }, 30 * 1000);\n\n    const formatETHField = (field = undefined) => {\n        if (field) {\n            return isNative\n                ? `${field.dividedBy('1e18').toFixed(3)} ETH`\n                : ethUsd\n                    ? `${field\n                        .dividedBy('1e18')\n                        .multipliedBy(ethUsd)\n                        .toFixed(3)} USD`\n                    : '- USD';\n        } else {\n            return '-';\n        }\n    };\n\n\n    const totalLiquidity = formatETHField(userAccountData && userAccountData.totalLiquidity);\n    const totalCollateralETH = formatETHField(userAccountData && userAccountData.totalCollateralETH);\n    const totalBorrowsETH = formatETHField(userAccountData && userAccountData.totalBorrowsETH);\n    const availableBorrowsETH = formatETHField(userAccountData && userAccountData.availableBorrowsETH);\n    const currentLiquidationThreshold =\n        (userAccountData && `${userAccountData.currentLiquidationThreshold.toFixed(0)} %`) || '-';\n    const ltv = (userAccountData && `${userAccountData.ltv.toFixed(0)} %`) || '-';\n    let healthFactor = '-';\n    let healtFactorValue;\n    // const healthFactor = (userAccountData && userAccountData.healthFactor.toFixed(3)) || '-';;\n    if (userAccountData && userAccountData.totalBorrowsETH.gt(0)) {\n        healthFactor = userAccountData && userAccountData.healthFactor.dividedBy('1e18').toFixed(3);\n        healtFactorValue = new BigNumber(healthFactor);\n    }\n\n    const columns = [\n        {\n            dataField: \"total_liquidity\",\n            text: \"Total Liquidity\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <Text>{row.totalLiquidity}</Text>\n                )\n            },\n        },\n        {\n            dataField: \"total_collateral\",\n            text: \"Total Collateral\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <Text>{row.totalCollateralETH}</Text>\n                )\n            },\n        },\n        {\n            dataField: \"total_borrows\",\n            text: \"Total Borrows\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <Text>{row.totalBorrowsETH}</Text>\n                )\n            },\n        },\n        {\n            dataField: \"available\",\n            text: \"Available For Borrow\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <Text>{row.availableBorrowsETH}</Text>\n                )\n            },\n        },\n        {\n            dataField: \"liquidation_threshold\",\n            text: \"Liquidation Threshold\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <Text>{row.currentLiquidationThreshold}</Text>\n                )\n            },\n        },\n        {\n            dataField: \"ltv\",\n            text: \"LTV\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <Text>{row.ltv}</Text>\n                )\n            },\n        },\n        {\n            dataField: \"health_factor\",\n            text: \"Health Factor\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <Text>{row.healthFactor}</Text>\n                )\n            },\n        },\n    ]\n\n    return (\n        <StyledCard>\n            <BootstrapTable\n                wrapperClasses=\"d-none d-lg-block\"\n                bordered={false}\n                classes=\"table table-head-custom table-borderless table-vertical-center overflow-hidden global-overall__table mb-0\"\n                bootstrap4\n                keyField={'id'}\n                remote\n                data={[{totalLiquidity, totalCollateralETH, totalBorrowsETH, availableBorrowsETH, currentLiquidationThreshold, ltv, healthFactor}]}\n                columns={columns}\n            />\n            <ResponsiveTable breakpoint={'lg'} columns={columns} data={[{totalLiquidity, totalCollateralETH, totalBorrowsETH, availableBorrowsETH, currentLiquidationThreshold, ltv, healthFactor}]} direction={'rtl'} withoutBorder/>\n        </StyledCard>\n    )\n}\n\nexport default GlobalOverall;\n","/**\n * GraphQl Queries\n *\n */\nimport { gql } from 'apollo-boost';\n\nexport const GET_AAVE_RESERVES = gql`\n    {\n        reserves {\n            id\n            name\n            symbol\n            decimals\n            liquidityRate\n            variableBorrowRate\n            price {\n                priceInEth\n            }\n            stableBorrowRate\n            averageStableBorrowRate\n            aToken {\n                id\n            }\n        }\n    }\n`;\n\n/*export const GET_USER_AAVE_DATA = gql`\n{\n    query UserData($userAddress: String! ){\n        user(id: $userAddress){\n           id,\n           reserves{\n            id,\n            userBalanceIndex,\n            principalATokenBalance,\n            redirectedBalance,\n            principalBorrows,\n            borrowRateMode,\n            borrowRate,\n            usageAsCollateralEnabledOnUser,\n           }\n     }\n   }\n`;*/\n","import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\n\nimport { RowBetween } from '../Row'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport {tokenAmountInUnits, unitsInTokenAmount} from \"../../utils/spot/tokens\";\nimport {ZERO} from \"../../constants\";\nimport {ETHER, Token} from \"@uniswap/sdk\";\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\nimport {useActiveWeb3React} from \"../../hooks\";\nimport CurrencyLogo from \"../CurrencyLogo\";\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  \n  padding: 0.625rem 0 0;\n  \n  \n  @media (min-width: 768px) {\n    padding-top: 0.75rem;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 34px;\n  \n  @media (min-width: 768px) {\n    margin-bottom: 36px;\n  }\n`\n\nconst Label = styled.span`\n  color: white;\n  font-size: .875rem;\n  font-weight: 400;\n  padding: 0 ;\n  \n  @media (min-width: 768px) {\n    padding: 0 1rem;\n  font-weight: 700;\n  }\n`\n\nconst InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  flex: 1;\n  \n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0;\n`\n\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  @media (min-width: 768px) {\n  justify-content: space-between;\n  }\n`\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  position: relative;\n  border-radius: 0.42rem;\n`\n\n\nconst StyledTokenName = styled.span`\n  font-size:  0.875rem;\n  font-weight: 500;\n  margin-left: 15px;\n  \n  @media (min-width: 768px) {\n    font-size:  1rem;\n    margin-right: auto;\n  }\n\n`\n\n\nconst CurrencySelect = styled.button`\n  align-items: center;\n  height: 56px;\n  font-size: 0.875rem;\n  font-weight: 500;\n  background-color: rgba(33, 36, 41, 0.5);\n  color: white;\n  border-bottom-left-radius: 18px;\n  border-top-left-radius: 18px;\n  box-shadow: none;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0.875rem 0.625rem;\n  min-width: 116px;\n  width: 116px;\n  text-align: center;\n  \n  \n  @media (min-width: 768px) {\n  min-width: 116px;\n  width: 116px;\n  padding: .625rem 1rem;\n  font-size: 1rem;\n  font-weight: 700;\n  text-align: left;\n  }\n\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => theme.bg1};\n    outline: none;\n  }\n`\n\nlet BalanceRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  margin-top: 10px;\n  color: ${({ theme }) => theme.text1};\n  opacity: 0.5;\n  font-size: 0.75rem;\n  font-weight: 400;\n  line-height: 1rem;\n  padding: 0;\n  \n  \n  @media (min-width: 768px) {\n    padding: 0 1rem;\n  }\n`\n\nexport default class BorrowInputPanel extends React.Component {\n    state = {\n        valueStr: this.props.value\n            ? tokenAmountInUnits(this.props.value, this.props.decimals, this.props.valueFixedDecimals)\n            : '',\n    }\n\n\n    _updateValue = value => {\n\n        const newValue = unitsInTokenAmount(value || '0', this.props.decimals);\n        const invalidValue = this.props.min && newValue.isLessThan(this.props.min);\n        if (invalidValue) {\n            return;\n        }\n\n        this.props.onUserInput(newValue);\n        this.setState({\n            valueStr: value,\n        })\n    };\n\n\n    static getDerivedStateFromProps = (props, state) => {\n        const { decimals, value, valueFixedDecimals } = props;\n        const { valueStr } = state;\n\n        if (!value) {\n            return {\n                valueStr: '',\n            };\n        } else if (value && !unitsInTokenAmount(valueStr || '0', decimals).eq(value)) {\n            return {\n                valueStr: tokenAmountInUnits(value, decimals, valueFixedDecimals),\n            };\n        } else {\n            return null;\n        }\n    };\n\n\n    render() {\n        const {\n            label = 'Input',\n            disable = false,\n            selected,\n            hideInput = false,\n            id,\n            showBalance = true,\n            balanceText,\n            token = undefined\n        } = this.props;\n        const { valueStr } = this.state;\n\n        const currency = token ? new Token(1, token.address, token.decimals, token.symbol, token.name) : undefined\n\n        return (\n            <InputPanel id={id}>\n                <Container>\n                    {!hideInput && (\n                        <LabelRow>\n                            <RowBetween>\n                                <Label>\n                                    {label}\n                                </Label>\n                            </RowBetween>\n                        </LabelRow>\n                    )}\n                    <InputRow style={hideInput ? { padding: '0', borderRadius: '0.42rem' } : {}} selected={disable}>\n                        <CurrencySelect\n                            selected={!!selected}\n                            className=\"open-currency-select-button\"\n                        >\n                            <Aligner>\n                                {token && (\n                                    <CurrencyLogo currency={currency} size={'24px'} />\n                                )}\n                                <StyledTokenName className=\"token-symbol-container\" active={Boolean(selected)}>\n                                    {(selected && selected?.length > 20\n                                        ? (selected?.slice(0, 4) +\n                                            '...' +\n                                            selected?.slice(selected?.length - 5, selected?.length)).toUpperCase()\n                                        : selected.toUpperCase()) || `Select`}\n                                </StyledTokenName>\n                            </Aligner>\n                        </CurrencySelect>\n\n                        {!hideInput && (\n                            <InputContainer>\n                                <NumericalInput\n                                    className=\"token-amount-input pl-3 \"\n                                    value={valueStr}\n                                    onUserInput={this._updateValue}\n                                />\n                            </InputContainer>\n                        )}\n                    </InputRow>\n                    {selected && showBalance && (\n                        <BalanceRow>\n                            {balanceText()}\n                        </BalanceRow>\n                    )}\n                </Container>\n            </InputPanel>\n        )\n    }\n\n}\n","import React from 'react';\nimport {Modal, Row, Col} from \"react-bootstrap\";\nimport {BigNumber} from \"@0x/utils\";\nimport styled from 'styled-components';\n\nimport {TX_DEFAULTS_TRANSFER} from \"../../../constants\";\nimport {tokenAmountInUnits, tokenSymbolToDisplayString} from \"../../../utils/spot/tokens\";\nimport BorrowInputPanel from \"../../../components/BorrowInputPanel\";\nimport {AutoColumn} from \"../../../components/Column\";\nimport {RowFixed} from \"../../../components/Row\";\nimport {Field} from \"../../../state/swap/actions\";\nimport {TYPE} from \"../../../theme\";\nimport {toast} from \"react-hot-toast\";\n\nconst Title = styled.h4`\n  font-size: 1.25rem;\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 2.25rem;\n`\n\nexport const SummaryRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n  font-size: 1rem;\n  font-weight: 500;\n`\n\nconst CustomTypeBlack = styled(TYPE.black)`\n  font-size: 0.75rem;\n  \n  @media (min-width: 768px) {\n    font-size: 1rem;\n  }\n`\n\nconst StyledButton = styled.button`\n  height: 56px;\n  min-height: 56px;\n  min-width: 250px;\n`\n\nclass LendingModalContainer extends React.Component {\n    state = {\n        amount: null,\n        error: {\n            btnMsg: null,\n            cardMsg: null,\n        },\n    };\n\n    componentDidMount = () => {\n        const { ethBalance } = this.props;\n        if (ethBalance.isLessThan(TX_DEFAULTS_TRANSFER.gasTransferToken)) {\n            toast.error('Not enough ETH for the gas')\n            this.setState({\n                error: {\n                    btnMsg: 'Error',\n                    cardMsg: `Not enough ETH for the gas`,\n                },\n            });\n        }\n    };\n\n    render() {\n        const { tokenBalance, closeModal, ethBalance, isEth, wethToken, aToken, isLending, show, ...restProps } = this.props;\n        const { error, amount } = this.state;\n        const { liquidityRate } = aToken;\n        let coinSymbol;\n        let maxBalance;\n        let decimals;\n        let displayDecimals;\n\n        if (isEth) {\n            displayDecimals = wethToken.displayDecimals;\n            decimals = 18;\n            maxBalance = isLending ? ethBalance : aToken.balance || new BigNumber(0);\n            coinSymbol = tokenSymbolToDisplayString('ETH');\n        } else if (tokenBalance) {\n            const { token, balance } = tokenBalance;\n            displayDecimals = token.displayDecimals;\n            decimals = token.decimals;\n            maxBalance = isLending ? balance : aToken.balance || new BigNumber(0);\n            coinSymbol = tokenSymbolToDisplayString(token.symbol);\n        } else {\n            return null;\n        }\n\n        const { token } = tokenBalance;\n        const btnPrefix = isLending ? 'Deposit ' : 'Withdraw ';\n        const balanceInUnits = tokenAmountInUnits(maxBalance, decimals, displayDecimals);\n        const btnText = error && error.btnMsg ? 'Error' : btnPrefix + coinSymbol;\n        const isSubmitAllowed = amount === null || (amount && amount.isGreaterThan(maxBalance));\n\n        return (\n           <Modal show={show} onHide={closeModal} centered>\n               <Modal.Body style={{ padding: 30 }}>\n                   <Row>\n                       <Col xs={12}>\n                           <Title>{isLending ? 'Deposit' : 'Withdraw'} {coinSymbol}</Title>\n                       </Col>\n                       <Col xs={12}>\n                           <BorrowInputPanel\n                               decimals={decimals}\n                               min={0}\n                               max={maxBalance}\n                               onUserInput={this.updateAmount}\n                               value={amount}\n                               token={token}\n                               selected={coinSymbol}\n                               showBalance={false}\n                               label={`I want to ${isLending ? 'Deposit' : 'Withdraw'}`}\n                               placeholder={new BigNumber(1).div(new BigNumber(10).pow(displayDecimals)).toString()}\n                               valueFixedDecimals={displayDecimals}\n                           />\n                       </Col>\n                       <Col xs={12} style={{ marginBottom: 56 }}>\n                           <AutoColumn>\n                               <SummaryRow>\n                                   <RowFixed>\n                                       <CustomTypeBlack fontWeight={500} color={'white'}>\n                                           Interest APR\n                                       </CustomTypeBlack>\n                                   </RowFixed>\n                                   <RowFixed>\n                                       <CustomTypeBlack color={'white'} fontWeight={500}>\n                                           {liquidityRate\n                                               .div('1e27')\n                                               .multipliedBy(100)\n                                               .toFixed(5)}{' '}\n                                           %\n                                       </CustomTypeBlack>\n                                   </RowFixed>\n                               </SummaryRow>\n                               <SummaryRow>\n                                   <RowFixed>\n                                       <CustomTypeBlack fontWeight={500} color={'white'}>\n                                           Amount\n                                       </CustomTypeBlack>\n                                   </RowFixed>\n                                   <RowFixed>\n                                       <CustomTypeBlack color={'white'} fontWeight={500}>\n                                           {balanceInUnits}\n                                       </CustomTypeBlack>\n                                   </RowFixed>\n                               </SummaryRow>\n                           </AutoColumn>\n                       </Col>\n                       <Col xs={12} className={'d-flex align-items-stretch align-items-lg-center justify-content-center flex-column'}>\n                           <StyledButton\n                               className={`btn btn-${isLending ? 'primary' : \"warning\"}`}\n                               disabled={isSubmitAllowed}\n                               onClick={this.submit}\n                           >\n\n                               {btnText}\n                           </StyledButton>\n                       </Col>\n                   </Row>\n\n               </Modal.Body>\n           </Modal>\n        )\n    }\n\n    submit = async () => {\n        const { tokenBalance, isEth, wethToken, aToken, isLending } = this.props;\n        let token;\n        if (isEth) {\n            token = {\n                ...wethToken,\n                symbol: 'ETH',\n            };\n        } else if (tokenBalance) {\n            token = tokenBalance.token;\n        } else {\n            return null;\n        }\n        const amount = this.state.amount || new BigNumber(0);\n        this.props.onSubmit(amount, token, aToken, isEth, isLending);\n    };\n\n    _reset = () => {\n        this.setState({\n            amount: null,\n        });\n    };\n\n    _closeModal = () => {\n        this._reset();\n    };\n\n    setMax = () => {\n        const { tokenBalance, isEth, ethBalance, isLending, aToken } = this.props;\n        if (isEth) {\n            const maxBalance = isLending ? ethBalance : aToken.balance || new BigNumber(0);\n            this.setState({\n                amount: maxBalance,\n            });\n        } else if (tokenBalance) {\n            this.setState({\n                amount: isLending ? tokenBalance.balance : aToken.balance || new BigNumber(0),\n            });\n        }\n    };\n\n    updateAmount = (newValue) => {\n        this.setState({\n            amount: newValue,\n        });\n    };\n}\n\nexport default LendingModalContainer;\n","import React, {useMemo, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { BigNumber } from \"@0x/utils\";\nimport styled from \"styled-components\";\nimport { Token } from \"@uniswap/sdk\";\n\nimport {getAaveCurrency, getAaveLoadingState, getATokensData, getTokensPrice} from \"../../../state/selectors\";\nimport withBalance from \"../../../components/hoc/withBalance\";\nimport {useActiveWeb3React} from \"../../../hooks\";\nimport {setAaveCurrency} from \"../../../state/aave/actions\";\nimport {getKnownTokens, isWethToken} from \"../../../utils/known_tokens\";\nimport {formatTokenSymbol, tokenAmountInUnits} from \"../../../utils/spot/tokens\";\nimport {Protocol} from \"../../../utils/aave/types\";\nimport {startLendingTokenSteps, startUnLendingTokenSteps} from \"../../../state/spotUI/actions\";\nimport CurrencyLogo from \"../../../components/CurrencyLogo\";\nimport Skeleton from \"react-loading-skeleton\";\nimport {StyledLink, TradeButton} from \"../../Wallet\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ResponsiveTable from \"../../../components/ResponsiveTable\";\nimport LendingModalContainer from \"./LendingModalContainer\";\nimport {sortedData} from \"../../../lib/helper\";\n\n\nconst LogoContainer = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 32px;\n  background-color: white;  \n  \n  @media (max-width: 991px) {\n    width: 24px;\n    height: 24px;\n    border-radius: 24px;\n  }\n`\n\nconst Symbol = styled.span`\n  color: white;\n  font-size: 1rem;\n  margin-right: 10px;\n  font-weight: 700;\n`\n\n\nconst Name = styled.span`\n  font-weight: 400;\n  font-size: 0.875rem;\n  \n  @media (max-width: 991px) {\n    font-size: 0.875rem;\n    font-weight: 400;\n  }\n`\n\nconst CellText = styled.span`\n  font-weight: 500;\n  font-size: .875rem;\n  \n  &.font-size-base {\n    font-size: 1rem;\n  }\n  \n  @media (max-width: 991px) {\n    font-weight: 700;\n    \n    &.label {\n    font-weight: 500;\n    }\n  }\n`\n\nconst LendingBalance = props => {\n    const [isEthState, setIsEthState] = useState(false);\n    const [isHideZeroBalance, setIsHideZeroBalance] = useState(false);\n    const [isStableCoin, setIsStableCoin] = useState(false);\n    const [isModalOpenState, setIsModalOpenState] = useState(false);\n    const [isSubmittingState, setIsSubmittingState] = useState(false);\n    const [aTokenDataState, setATokenDataState] = useState();\n    const [isLendingState, setIsLendingState] = useState(true);\n    const [tokenBalanceState, setTokenBalanceState] = useState();\n    const [sort, setSort] = useState({\n        field: false,\n        order: 'desc',\n    });\n\n    const { account } = useActiveWeb3React();\n    const dispatch = useDispatch();\n    const aTokensData = useSelector(getATokensData);\n    const tokensPrice = useSelector(getTokensPrice);\n    const tokenBalances = props.tokensBalance;\n    const ethBalance = props.ethBalance;\n    const ethTotalBalance = props.totalEthBalance;\n    const wethTokenBalance = props.wethBalance;\n    const aaveLoadingState = useSelector(getAaveLoadingState);\n    const currencySelector = useSelector(getAaveCurrency);\n\n    const innerTabs = [\n        {\n            active: currencySelector === 'NATIVE',\n            onClick: () => dispatch(setAaveCurrency('NATIVE')),\n            text: 'Native',\n        },\n        {\n            active: currencySelector === 'USD',\n            onClick: () => dispatch(setAaveCurrency('USD')),\n            text: 'USD',\n        },\n    ];\n\n\n    const openLendingModal = (...rest) => {\n        const [tokenD, isEthToken, tokB, token] = rest;\n        setATokenDataState(tokenD);\n        setIsModalOpenState(true);\n        if (isEthToken) {\n            setIsEthState(true);\n            setTokenBalanceState({ ...wethTokenBalance, balance: tokB });\n        } else {\n            setIsEthState(false);\n            setTokenBalanceState(tokenBalances.find(tb => tb.token === token));\n        }\n        setIsLendingState(true);\n    };\n\n    const openUnLendingModal = (...rest) => {\n        const [tokenD, isEthToken, tokB, token] = rest;\n        setATokenDataState(tokenD);\n        if (isEthToken) {\n            setIsEthState(true);\n            setTokenBalanceState({ ...wethTokenBalance, balance: tokB });\n        } else {\n            setIsEthState(false);\n            setTokenBalanceState(tokenBalances.find(tb => tb.token === token));\n        }\n        setIsModalOpenState(true);\n        setIsLendingState(false);\n    };\n\n    const tokensRow = useMemo(() => {\n        const data = aTokensData.map(tokenD => {\n            const { token, balance } = tokenD;\n\n            const { symbol } = token;\n            const isEthToken = isWethToken(token);\n            const tokenBalance = tokenBalances.find(tb => tb.token.symbol === symbol);\n            if (isHideZeroBalance) {\n                if (isEthToken && ethTotalBalance.isEqualTo(0) && balance && balance.isEqualTo(0)) {\n                    return null;\n                }\n\n                if (tokenBalance && tokenBalance.balance.isEqualTo(0) && balance && balance.isEqualTo(0)) {\n                    return null;\n                }\n            }\n            if (isStableCoin) {\n                if (!token.isStableCoin) {\n                    return null;\n                }\n            }\n\n            const tokB = isEthToken\n                ? ethTotalBalance || new BigNumber(0)\n                : (tokenBalance && tokenBalance.balance) || new BigNumber(0);\n            let displayBalance;\n            let displayDepositBalance;\n\n            if (account && balance) {\n                const formattedLendBalance = tokenAmountInUnits(balance, token.decimals, token.displayDecimals);\n                const formattedBalance = tokenAmountInUnits(tokB, token.decimals, token.displayDecimals);\n                const tokenPrice = tokensPrice && tokensPrice.find(t => t.c_id === token.c_id);\n                if (currencySelector === 'NATIVE') {\n                    displayBalance = `${formattedBalance} ${formatTokenSymbol(symbol)}`;\n                    displayDepositBalance = `${formattedLendBalance} ${formatTokenSymbol(symbol)}`;\n                } else {\n                    displayBalance = tokenPrice\n                        ? `${tokenPrice.price_usd.multipliedBy(new BigNumber(formattedBalance)).toFixed(3)}$`\n                        : '-';\n                    displayDepositBalance = tokenPrice\n                        ? `${tokenPrice.price_usd.multipliedBy(new BigNumber(formattedLendBalance)).toFixed(3)}$`\n                        : '-';\n                }\n            } else {\n                displayBalance = '-';\n                displayDepositBalance = '-';\n            }\n\n            const apy = `${tokenD.liquidityRate\n                .dividedBy('1e27')\n                .multipliedBy(100)\n                .toFixed(5)} %`;\n\n            const tokenName = isEthToken ? 'Ethereum' : token.name;\n            const tokenSymbol = isEthToken ? 'ETH' : token.symbol.toUpperCase();\n\n            return {\n                token,\n                symbol,\n                tokenSymbol,\n                tokenName,\n                displayBalance,\n                displayDepositBalance,\n                apy,\n                balance,\n                tokB,\n                isEthToken,\n                tokenD\n            }\n\n        })\n\n        return sortedData(data, sort);\n    }, [aTokensData, sort])\n\n    const closeModal = () => {\n        setIsModalOpenState(false);\n    };\n\n\n    const handleSubmit = async (\n        amount,\n        token,\n        aToken,\n        isEth,\n        isLending,\n    ) => {\n        setIsSubmittingState(true);\n\n        try {\n            if (isLending) {\n                await dispatch(startLendingTokenSteps(amount, token, aToken, isEth, Protocol.Aave, ethBalance, wethTokenBalance, ethTotalBalance));\n            } else {\n                await dispatch(startUnLendingTokenSteps(amount, token, aToken, isEth));\n            }\n        } finally {\n            setIsSubmittingState(false);\n            closeModal();\n        }\n    };\n\n    const wethToken = getKnownTokens().getWethToken();\n    const onHideZeroBalance = () => {\n        setIsHideZeroBalance(!isHideZeroBalance);\n    };\n    const onIsStableCoin = () => {\n        setIsStableCoin(!isStableCoin);\n    };\n\n    const wethPlusEthBalance = wethTokenBalance ? wethTokenBalance.balance.plus(ethBalance) : new BigNumber(0);\n\n    const onTableChange = (type, context) => {\n        if(type === 'sort') {\n            setSort({\n                field: context.sortField,\n                order: context.sortOrder,\n            });\n        }\n    }\n\n    const columns = [\n        {\n            dataField: \"tokenName\",\n            text: \"Token\",\n            formatter: (cellContent, row, rowIndex) => {\n                const currency = new Token(1, row.token.address, row.token.decimals, row.token.symbol, row.token.name);\n                return (\n                    <div key={rowIndex} className=\"d-flex flex-row-reverse flex-lg-row align-items-start align-items-lg-center py-lg-2 pr-lg-4\">\n                        <LogoContainer><CurrencyLogo currency={currency}/></LogoContainer>\n                        <div className=\"d-flex flex-column justify-content-center ml-lg-3 mr-3 mr-lg-0\">\n                            <Symbol>{row.tokenSymbol}</Symbol>\n                            <Name>{row.tokenName}</Name>\n                        </div>\n                    </div>\n                )\n            },\n            sort: true,\n        },\n        {\n            dataField: \"displayBalance\",\n            text: \"Balance\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <CellText>{row.displayBalance}</CellText>\n                )\n            },\n            sort: true,\n        },\n        {\n            dataField: \"displayDepositBalance\",\n            text: \"Deposit Balance\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <CellText>{row.displayDepositBalance}</CellText>\n                )\n            },\n            sort: true,\n        },\n        {\n            dataField: \"apy\",\n            text: \"APY\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <CellText>{row.apy}</CellText>\n                )\n            },\n            sort: true,\n        },\n        {\n            dataField: \"actions\",\n            text: \"Actions\",\n            formatter: (cellContent, row, rowIndex, { openLendingModal, openUnLendingModal }) => {\n                const { balance, tokB, tokenD, isEthToken, token } = row;\n                return (\n                    <div className={'d-flex align-items-stretch justify-content-center flex-column flex-lg-row align-items-lg-center justify-content-lg-start w-100'}>\n                        <StyledLink>\n                            <TradeButton\n                                onClick={openLendingModal.bind(this, tokenD, isEthToken, tokB, token)}\n                                disabled={tokB.isEqualTo(0)}\n                            >\n                                Deposit\n                            </TradeButton>\n                        </StyledLink>\n\n                        <StyledLink>\n                            <TradeButton\n                                variant={'warning'}\n                                onClick={openUnLendingModal.bind(this, tokenD, isEthToken, tokB, token)}\n                                disabled={balance && balance.isEqualTo(0)}\n                            >\n                                Withdraw\n                            </TradeButton>\n                        </StyledLink>\n                    </div>\n                )\n            },\n            isAction: true,\n            formatExtraData: {\n                openLendingModal,\n                openUnLendingModal\n            }\n        },\n\n    ]\n\n    return (\n        <div className=\"d-flex flex-column\">\n            <BootstrapTable\n                wrapperClasses=\"table-responsive d-none d-lg-block\"\n                bordered={false}\n                classes=\"table table-head-custom table-borderless table-vertical-center overflow-hidden borrow__table\"\n                bootstrap4\n                remote\n                keyField=\"id\"\n                data={tokensRow}\n                columns={columns}\n                onTableChange={onTableChange}\n            >\n            </BootstrapTable>\n            <ResponsiveTable breakpoint={'lg'} columns={columns} data={tokensRow} direction={'rtl'}/>\n\n            {isModalOpenState && aTokenDataState && (\n                <LendingModalContainer\n                    show={isModalOpenState}\n                    tokenBalance={tokenBalanceState}\n                    isSubmitting={isSubmittingState}\n                    onSubmit={handleSubmit}\n                    aToken={aTokenDataState}\n                    closeModal={closeModal}\n                    ethBalance={wethPlusEthBalance}\n                    isEth={isEthState}\n                    wethToken={wethToken}\n                    isLending={isLendingState}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default withBalance(LendingBalance);\n","import {Modal, Row, Col} from 'react-bootstrap';\nimport React, {useEffect, useState} from \"react\";\nimport {BigNumber} from \"@0x/utils\";\n\nimport {TX_DEFAULTS_TRANSFER} from \"../../../constants\";\nimport {tokenAmountInUnits, tokenSymbolToDisplayString} from \"../../../utils/spot/tokens\";\nimport styled from \"styled-components\";\nimport BorrowInputPanel from \"../../../components/BorrowInputPanel\";\nimport {AutoColumn} from \"../../../components/Column\";\nimport {RowFixed} from \"../../../components/Row\";\nimport {TYPE} from \"../../../theme\";\nimport {toast} from \"react-hot-toast\";\n\nconst Title = styled.h4`\n  font-size: 1.25rem;\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 2.25rem;\n`\n\nexport const SummaryRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n  font-size: 1rem;\n  font-weight: 500;\n`\n\nconst CustomTypeBlack = styled(TYPE.black)`\n  font-size: 0.75rem;\n  \n  @media (min-width: 768px) {\n    font-size: 1rem;\n  }\n`\n\nconst StyledButton = styled.button`\n  height: 56px;\n  min-height: 56px;\n  min-width: 250px;\n`\n\nconst BorrowTokenModal = props => {\n    const { tokenBalance, closeModal, ethBalance, isEth, wethToken, aToken, availableForBorrow, show, ...restProps } = props;\n    const [error, setError] = useState({\n        btnMsg: null,\n        cardMsg: null,\n    });\n    const [amount, setAmount] = useState(new BigNumber(0));\n\n    useEffect(() => {\n        if (ethBalance.isLessThan(TX_DEFAULTS_TRANSFER.gasTransferToken)) {\n            toast.error('Not enough ETH for the gas')\n            setError({\n                btnMsg: 'Error',\n                cardMsg: `Not enough ETH for the gas`,\n            });\n        }\n    }, [ethBalance]);\n\n    const { variableBorrowRate } = aToken;\n    const { token } = tokenBalance;\n    let coinSymbol;\n    let maxBalance = availableForBorrow;\n    let decimals;\n    let displayDecimals;\n\n    if (isEth) {\n        displayDecimals = wethToken.displayDecimals;\n        decimals = 18;\n        coinSymbol = tokenSymbolToDisplayString('ETH');\n    } else if (tokenBalance) {\n        displayDecimals = token.displayDecimals;\n        decimals = token.decimals;\n        maxBalance = availableForBorrow;\n        coinSymbol = tokenSymbolToDisplayString(token.symbol);\n    } else {\n        return null;\n    }\n\n    const btnPrefix = 'Borrow ';\n    const balanceInUnits = tokenAmountInUnits(maxBalance, decimals, displayDecimals);\n    const btnText = error && error.btnMsg ? 'Error' : btnPrefix + coinSymbol;\n    const isSubmitAllowed = amount === null || (amount && amount.isGreaterThan(maxBalance));\n    const onUpdateAmount = (newValue) => {\n        setAmount(newValue);\n    };\n    const onSetMax = () => {\n        setAmount(availableForBorrow);\n    };\n    const onSubmit = () => {\n        let token;\n        if (isEth) {\n            token = {\n                ...wethToken,\n                symbol: 'ETH',\n            };\n        } else if (tokenBalance) {\n            token = tokenBalance.token;\n        } else {\n            return null;\n        }\n\n        props.onSubmit(amount, token, aToken, isEth);\n    };\n\n    return (\n        <Modal show={show} onHide={closeModal} centered>\n            <Modal.Body style={{ padding: 30 }}>\n                <Row>\n                    <Col xs={12}>\n                        <Title>{'Borrow'} {coinSymbol}</Title>\n                    </Col>\n                    <Col xs={12}>\n                        <BorrowInputPanel\n                            decimals={decimals}\n                            min={0}\n                            max={maxBalance}\n                            onUserInput={onUpdateAmount}\n                            value={amount}\n                            token={token}\n                            selected={coinSymbol}\n                            showBalance={false}\n                            label={`I want to Borrow`}\n                            placeholder={new BigNumber(1).div(new BigNumber(10).pow(displayDecimals)).toString()}\n                            valueFixedDecimals={displayDecimals}\n                        />\n                    </Col>\n                    <Col xs={12} style={{ marginBottom: 56 }}>\n                        <AutoColumn>\n                            <SummaryRow>\n                                <RowFixed>\n                                    <CustomTypeBlack fontWeight={500} color={'white'}>\n                                        Borrow APR\n                                    </CustomTypeBlack>\n                                </RowFixed>\n                                <RowFixed>\n                                    <CustomTypeBlack color={'white'} fontWeight={500}>\n                                        {variableBorrowRate\n                                            .div('1e27')\n                                            .multipliedBy(100)\n                                            .toFixed(5)}{' '}\n                                        %\n                                    </CustomTypeBlack>\n                                </RowFixed>\n                            </SummaryRow>\n                            <SummaryRow>\n                                <RowFixed>\n                                    <CustomTypeBlack fontWeight={500} color={'white'}>\n                                        Available for Borrow\n                                    </CustomTypeBlack>\n                                </RowFixed>\n                                <RowFixed>\n                                    <CustomTypeBlack color={'white'} fontWeight={500}>\n                                        {balanceInUnits}\n                                    </CustomTypeBlack>\n                                </RowFixed>\n                            </SummaryRow>\n                        </AutoColumn>\n                    </Col>\n\n                    <Col xs={12} className={'d-flex align-items-stretch align-items-lg-center justify-content-center flex-column'}>\n                        <StyledButton\n                            className={`btn btn-${error && error.btnMsg ? 'danger' : \"primary\"}`}\n                            disabled={isSubmitAllowed}\n                            onClick={onSubmit}\n                        >\n                            {btnText}\n                        </StyledButton>\n                    </Col>\n                </Row>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default BorrowTokenModal;\n","import { Modal, Row, Col } from 'react-bootstrap';\nimport React, {useEffect, useState} from \"react\";\nimport {BigNumber} from \"@0x/utils\";\nimport {useDispatch} from \"react-redux\";\n\nimport {TX_DEFAULTS_TRANSFER} from \"../../../constants\";\nimport {tokenAmountInUnits, tokenSymbolToDisplayString} from \"../../../utils/spot/tokens\";\nimport styled from \"styled-components\";\nimport {TYPE} from \"../../../theme\";\nimport BorrowInputPanel from \"../../../components/BorrowInputPanel\";\nimport {AutoColumn} from \"../../../components/Column\";\nimport {RowFixed} from \"../../../components/Row\";\nimport {toast} from \"react-hot-toast\";\n\nconst Title = styled.h4`\n  font-size: 1.25rem;\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 2.25rem;\n`\n\nexport const SummaryRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n  font-size: 1rem;\n  font-weight: 500;\n`\n\nconst CustomTypeBlack = styled(TYPE.black)`\n  font-size: 0.75rem;\n  \n  @media (min-width: 768px) {\n    font-size: 1rem;\n  }\n`\n\nconst StyledButton = styled.button`\n  height: 56px;\n  min-height: 56px;\n  min-width: 250px;\n`\n\nconst RepayTokenModal = props => {\n    const { tokenBalance, closeModal, ethBalance, isEth, wethToken, aToken, borrowedBalance, show, ...restProps } = props;\n    const [error, setError] = useState({\n        btnMsg: null,\n        cardMsg: null,\n    });\n    const [amount, setAmount] = useState(null);\n    const [isNotEnoughBalance, setIsNotEnoughBalance] = useState(false);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (ethBalance.isLessThan(TX_DEFAULTS_TRANSFER.gasTransferToken)) {\n            toast.error('Not enough ETH for the gas')\n            setError({\n                btnMsg: 'Error',\n                cardMsg: `Not enough ETH for the gas`,\n            });\n        }\n        if (isEth) {\n            setIsNotEnoughBalance(ethBalance.isLessThanOrEqualTo(borrowedBalance));\n        } else {\n            setIsNotEnoughBalance(tokenBalance.balance.isLessThanOrEqualTo(borrowedBalance));\n        }\n    }, [ethBalance, tokenBalance]);\n\n\n    let coinSymbol;\n    let maxBalance = new BigNumber(0);\n    let balance = new BigNumber(0);\n    let decimals;\n    let displayDecimals;\n    let balanceInShort;\n\n    const { token } = tokenBalance;\n    if (isEth) {\n        displayDecimals = wethToken.displayDecimals;\n        decimals = 18;\n        maxBalance = borrowedBalance || new BigNumber(0);\n        coinSymbol = tokenSymbolToDisplayString('ETH');\n        balance = ethBalance;\n        balanceInShort = maxBalance.minus(ethBalance);\n    } else if (tokenBalance) {\n        displayDecimals = token.displayDecimals;\n        decimals = token.decimals;\n        maxBalance = borrowedBalance || new BigNumber(0);\n        coinSymbol = tokenSymbolToDisplayString(token.symbol);\n        balanceInShort = maxBalance.minus(tokenBalance.balance);\n        balance = tokenBalance.balance;\n    } else {\n        return null;\n    }\n\n\n    const btnPrefix = 'Repay ';\n    const balanceBorrowedInUnits = tokenAmountInUnits(maxBalance, decimals, displayDecimals);\n    const balanceInUnits = tokenAmountInUnits(balance, decimals, displayDecimals);\n    const displayBalanceInShort = tokenAmountInUnits(balanceInShort, decimals, displayDecimals + 1);\n    const btnText = error && error.btnMsg ? 'Error' : btnPrefix + coinSymbol;\n    const isSubmitAllowed =\n        amount === null || (amount && amount.isGreaterThan(maxBalance)) || (amount && amount.isEqualTo(0));\n    const onUpdateAmount = (newValue) => {\n        setAmount(newValue);\n    };\n    const onSetMax = () => {\n        if (isEth) {\n            const bal = ethBalance.isLessThanOrEqualTo(maxBalance) ? ethBalance : maxBalance;\n            setAmount(bal);\n        } else if (tokenBalance) {\n            const bal = tokenBalance.balance.isLessThanOrEqualTo(maxBalance) ? tokenBalance.balance : maxBalance;\n            setAmount(bal);\n        }\n    };\n\n    const onSubmit = () => {\n        let token;\n        if (isEth) {\n            token = {\n                ...wethToken,\n                symbol: 'ETH',\n            };\n        } else if (tokenBalance) {\n            token = tokenBalance.token;\n        } else {\n            return null;\n        }\n        const amountSubmit = amount || new BigNumber(0);\n        props.onSubmit(amountSubmit, token, aToken, isEth);\n    };\n\n    return (\n        <Modal show={show} onHide={closeModal} centered>\n            <Modal.Body style={{ padding: 30 }}>\n                <Row>\n                    <Col xs={12}>\n                        <Title>{'Repay'} {coinSymbol}</Title>\n                    </Col>\n                    <Col xs={12}>\n                        <BorrowInputPanel\n                            decimals={decimals}\n                            min={0}\n                            max={maxBalance}\n                            onUserInput={onUpdateAmount}\n                            value={amount}\n                            token={token}\n                            selected={coinSymbol}\n                            showBalance={false}\n                            label={`I want to Repay`}\n                            placeholder={new BigNumber(1).div(new BigNumber(10).pow(displayDecimals)).toString()}\n                            valueFixedDecimals={displayDecimals}\n                        />\n                    </Col>\n\n                    <Col xs={12} style={{ marginBottom: 56 }}>\n                        <AutoColumn>\n                            <SummaryRow>\n                                <RowFixed>\n                                    <CustomTypeBlack fontWeight={500} color={'white'}>\n                                        Amount Borrowed\n                                    </CustomTypeBlack>\n                                </RowFixed>\n                                <RowFixed>\n                                    <CustomTypeBlack color={'white'} fontWeight={500}>\n                                        {balanceBorrowedInUnits}\n                                    </CustomTypeBlack>\n                                </RowFixed>\n                            </SummaryRow>\n                            <SummaryRow>\n                                <RowFixed>\n                                    <CustomTypeBlack fontWeight={500} color={'white'}>\n                                        Amount Available\n                                    </CustomTypeBlack>\n                                </RowFixed>\n                                <RowFixed>\n                                    <CustomTypeBlack color={'white'} fontWeight={500}>\n                                        {balanceInUnits}\n                                    </CustomTypeBlack>\n                                </RowFixed>\n                            </SummaryRow>\n                        </AutoColumn>\n                    </Col>\n\n                    <Col xs={12} className={'d-flex align-items-stretch align-items-lg-center justify-content-center flex-column'}>\n                        <StyledButton\n                            className={`btn btn-${error && error.btnMsg ? 'danger' : \"primary\"}`}\n                            disabled={isSubmitAllowed}\n                            onClick={onSubmit}\n                        >\n                            {btnText}\n                        </StyledButton>\n                    </Col>\n                </Row>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default RepayTokenModal;\n","import React, {useMemo, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { BigNumber } from \"@0x/utils\";\nimport styled from \"styled-components\";\n\nimport {\n    getAaveCurrency,\n    getAaveLoadingState,\n    getAaveReservesGQLResponse, getAaveUserAccountData,\n    getATokensData,\n    getTokensPrice\n} from \"../../../state/selectors\";\nimport withBalance from \"../../../components/hoc/withBalance\";\nimport {useActiveWeb3React} from \"../../../hooks\";\nimport {setAaveCurrency} from \"../../../state/aave/actions\";\nimport {getKnownTokens, isWethToken} from \"../../../utils/known_tokens\";\nimport {formatTokenSymbol, tokenAmountInUnits} from \"../../../utils/spot/tokens\";\nimport {Protocol} from \"../../../utils/aave/types\";\nimport {\n    startBorrowTokenSteps,\n    startLendingTokenSteps,\n    startRepayTokenSteps,\n    startUnLendingTokenSteps\n} from \"../../../state/spotUI/actions\";\nimport CurrencyLogo from \"../../../components/CurrencyLogo\";\nimport Skeleton from \"react-loading-skeleton\";\nimport {StyledLink, TradeButton} from \"../../Wallet\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ResponsiveTable from \"../../../components/ResponsiveTable\";\nimport BorrowTokenModal from \"./BorrowTokenModal\";\nimport RepayTokenModal from \"./RepayTokenModal\";\nimport {Token} from \"@uniswap/sdk\";\nimport {sortedData} from \"../../../lib/helper\";\n\n\nconst LogoContainer = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 32px;\n  background-color: white;\n  \n  @media (max-width: 991px) {\n    width: 24px;\n    height: 24px;\n    border-radius: 24px;\n  }\n`\n\nconst Symbol = styled.span`\n  color: white;\n  font-size: 1rem;\n  margin-right: 10px;\n  font-weight: 500;\n`\n\n\nconst Name = styled.span`\n  font-weight: 400;\n  font-size: 0.875rem;\n  \n  @media (max-width: 991px) {\n    font-size: 0.875rem;\n    font-weight: 400;\n  }\n`\n\nconst CellText = styled.span`\n  font-weight: 500;\n  font-size: .875rem;\n  \n  &.font-size-base {\n    font-size: 1rem;\n  }\n  \n  @media (max-width: 991px) {\n    font-weight: 700;\n    \n    &.label {\n    font-weight: 500;\n    }\n  }\n`\n\nconst BorrowBalance = props => {\n    const [isEthState, setIsEthState] = useState(false);\n    const [isHideZeroBalance, setIsHideZeroBalance] = useState(false);\n    const [isStableCoin, setIsStableCoin] = useState(false);\n\n    const [isModalBorrowOpenState, setIsModalBorrowOpenState] = useState(false);\n    const [isModalRepayOpenState, setIsModalRepayOpenState] = useState(false);\n    const [isSubmittingState, setIsSubmittingState] = useState(false);\n    const [aTokenDataState, setATokenDataState] = useState();\n    const [isBorrowState, setIsBorrowState] = useState(true);\n    const [tokenBalanceState, setTokenBalanceState] = useState();\n    const [availableForBorrowState, setAvailableForBorrowState] = useState(new BigNumber(0));\n    const [borrowBalanceState, setBorrowBalanceState] = useState(new BigNumber(0));\n    const [sort, setSort] = useState({\n        field: false,\n        order: 'desc',\n    });\n\n    const { account } = useActiveWeb3React();\n    const reserves = useSelector(getAaveReservesGQLResponse);\n    const userAccountData = useSelector(getAaveUserAccountData);\n    const dispatch = useDispatch();\n    const aTokensData = useSelector(getATokensData);\n    const tokensPrice = useSelector(getTokensPrice);\n    const tokenBalances = props.tokensBalance;\n    const ethBalance = props.ethBalance;\n    const ethTotalBalance = props.totalEthBalance;\n    const wethTokenBalance = props.wethBalance;\n    const aaveLoadingState = useSelector(getAaveLoadingState);\n    const currencySelector = useSelector(getAaveCurrency);\n\n    const innerTabs = [\n        {\n            active: currencySelector === 'NATIVE',\n            onClick: () => dispatch(setAaveCurrency('NATIVE')),\n            text: 'Native',\n        },\n        {\n            active: currencySelector === 'USD',\n            onClick: () => dispatch(setAaveCurrency('USD')),\n            text: 'USD',\n        },\n    ];\n\n    const openBorrowModal = (...rest) => {\n        const [tokenD, isEthToken, tokB, token, availableBalanceForBorrowToken] = rest;\n        setATokenDataState(tokenD);\n        setIsModalBorrowOpenState(true);\n        if (isEthToken) {\n            setIsEthState(true);\n            setTokenBalanceState({ ...wethTokenBalance, balance: tokB });\n        } else {\n            setIsEthState(false);\n            setTokenBalanceState(tokenBalances.find(tb => tb.token === token));\n        }\n        setAvailableForBorrowState(availableBalanceForBorrowToken);\n        setIsBorrowState(true);\n    };\n\n    const openRepayModal = (...rest) => {\n        const [tokenD, isEthToken, tokB, token, borrowBalance] = rest;\n        setATokenDataState(tokenD);\n        if (isEthToken) {\n            setIsEthState(true);\n            setTokenBalanceState({ ...wethTokenBalance, balance: tokB });\n        } else {\n            setIsEthState(false);\n            setTokenBalanceState(tokenBalances.find(tb => tb.token === token));\n        }\n        setBorrowBalanceState(borrowBalance || new BigNumber(0));\n        setIsModalRepayOpenState(true);\n        setIsBorrowState(false);\n    };\n\n    const tokensRow = useMemo(() => {\n        const data = aTokensData.map(tokenD => {\n            const { token, balance, borrowBalance } = tokenD;\n\n            const { symbol } = token;\n            const reserve = reserves.find(r => r.aToken.id === tokenD.address);\n            const isEthToken = isWethToken(token);\n            const tokenBalance = tokenBalances.find(tb => tb.token.symbol === symbol);\n            if (isHideZeroBalance) {\n                /* if ((isEthToken && ethTotalBalance.isEqualTo(0)) && (balance && balance.isEqualTo(0))) {\n                     return null;\n                 }*/\n\n                if (borrowBalance && borrowBalance.isEqualTo(0)) {\n                    return null;\n                }\n            }\n            if (isStableCoin) {\n                if (!token.isStableCoin) {\n                    return null;\n                }\n            }\n\n            const tokB = isEthToken\n                ? ethTotalBalance || new BigNumber(0)\n                : (tokenBalance && tokenBalance.balance) || new BigNumber(0);\n            let displayAvailableForBorrowBalance;\n            let displayBorrowedBalance;\n            let availableForBorrow = new BigNumber(0);\n            let availableBalanceForBorrowToken = new BigNumber(0);\n\n            if (account && borrowBalance && reserve && userAccountData) {\n                const priceInEth = reserve.price.priceInEth;\n                const totalAvailableForBorrowETH = userAccountData.availableBorrowsETH;\n                availableForBorrow = userAccountData.availableBorrowsETH;\n                availableBalanceForBorrowToken = totalAvailableForBorrowETH\n                    .dividedBy(new BigNumber(priceInEth).div(new BigNumber(10).pow(token.decimals)))\n                    .integerValue(BigNumber.ROUND_DOWN);\n                const formattedBorrowedBalance = tokenAmountInUnits(\n                    borrowBalance,\n                    token.decimals,\n                    token.displayDecimals,\n                );\n                const formattedAvailableForBorrowBalance = tokenAmountInUnits(\n                    availableBalanceForBorrowToken,\n                    token.decimals,\n                    token.displayDecimals,\n                );\n                const tokenPrice = tokensPrice && tokensPrice.find(t => t.c_id === token.c_id);\n                if (currencySelector === 'NATIVE') {\n                    displayAvailableForBorrowBalance = `${formattedAvailableForBorrowBalance} ${formatTokenSymbol(\n                        symbol,\n                    )}`;\n                    displayBorrowedBalance = `${formattedBorrowedBalance} ${formatTokenSymbol(symbol)}`;\n                } else {\n                    displayAvailableForBorrowBalance = tokenPrice\n                        ? `${tokenPrice.price_usd\n                            .multipliedBy(new BigNumber(formattedAvailableForBorrowBalance))\n                            .toFixed(3)}$`\n                        : '-';\n                    displayBorrowedBalance = tokenPrice\n                        ? `${tokenPrice.price_usd.multipliedBy(new BigNumber(formattedBorrowedBalance)).toFixed(3)}$`\n                        : '-';\n                }\n            } else {\n                displayAvailableForBorrowBalance = '-';\n                displayBorrowedBalance = '-';\n            }\n\n            const apy = `${tokenD.variableBorrowRate\n                .dividedBy('1e27')\n                .multipliedBy(100)\n                .toFixed(5)} %`;\n\n            const tokenName = isEthToken ? 'Ethereum' : token.name;\n            const tokenSymbol = isEthToken ? 'ETH' : token.symbol.toUpperCase();\n\n            return {\n                token,\n                symbol,\n                tokenSymbol,\n                tokenName,\n                displayAvailableForBorrowBalance,\n                availableBalanceForBorrowToken,\n                displayBorrowedBalance,\n                availableForBorrow,\n                borrowBalance,\n                apy,\n                balance,\n                tokB,\n                isEthToken,\n                tokenD\n            }\n\n        })\n\n        return sortedData(data, sort)\n    }, [aTokensData, sort])\n\n    const closeBorrowModal = () => {\n        setIsModalBorrowOpenState(false);\n    };\n    const closeRepayModal = () => {\n        setIsModalRepayOpenState(false);\n    };\n\n\n    const handleSubmit = async (amount, token, aToken, isEth) => {\n        setIsSubmittingState(true);\n\n        try {\n            if (isBorrowState) {\n                await dispatch(startBorrowTokenSteps(amount, token, aToken, isEth, Protocol.Aave, ethBalance, wethTokenBalance, ethTotalBalance));\n            } else {\n                await dispatch(startRepayTokenSteps(amount, token, aToken, isEth, Protocol.Aave, ethBalance, wethTokenBalance, ethTotalBalance));\n            }\n        } finally {\n            setIsSubmittingState(false);\n            if (isBorrowState) {\n                closeBorrowModal();\n            } else {\n                closeRepayModal();\n            }\n        }\n    };\n    const wethToken = getKnownTokens().getWethToken();\n    const onHideZeroBalance = () => {\n        setIsHideZeroBalance(!isHideZeroBalance);\n    };\n    const onIsStableCoin = () => {\n        setIsStableCoin(!isStableCoin);\n    };\n\n    const wethPlusEthBalance = wethTokenBalance ? wethTokenBalance.balance.plus(ethBalance) : new BigNumber(0);\n\n\n    const onTableChange = (type, context) => {\n        if(type === 'sort') {\n            setSort({\n                field: context.sortField,\n                order: context.sortOrder,\n            });\n        }\n    }\n\n    const columns = [\n        {\n            dataField: \"tokenName\",\n            text: \"Token\",\n            formatter: (cellContent, row, rowIndex) => {\n                const currency = new Token(1, row.token.address, row.token.decimals, row.token.symbol, row.token.name);\n                return (\n                    <div key={rowIndex} className=\"d-flex flex-row-reverse flex-lg-row align-items-start align-items-lg-center py-lg-2 pr-lg-4\">\n                        <LogoContainer><CurrencyLogo currency={currency}/></LogoContainer>\n                        <div className=\"d-flex flex-column justify-content-center ml-lg-3 mr-3 mr-lg-0\">\n                            <Symbol className={'font-weight-bold'}>{row.tokenSymbol}</Symbol>\n                            <Name className={'font-weight-bold'}>{row.tokenName}</Name>\n                        </div>\n                    </div>\n                )\n            },\n            sort: true,\n        },\n        {\n            dataField: \"displayAvailableForBorrowBalance\",\n            text: \"Available for Borrow\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <CellText>{row.displayAvailableForBorrowBalance}</CellText>\n                )\n            },\n            sort: true,\n        },\n        {\n            dataField: \"displayBorrowedBalance\",\n            text: \"Borrow Balance\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <CellText>{row.displayBorrowedBalance}</CellText>\n                )\n            },\n            sort: true,\n        },\n        {\n            dataField: \"apy\",\n            text: \"Borrow Rate\",\n            formatter: (cellContent, row, rowIndex) => {\n                return (\n                    <CellText>{row.apy}</CellText>\n                )\n            },\n            sort: true,\n        },\n        {\n            dataField: \"actions\",\n            text: \"Actions\",\n            formatter: (cellContent, row, rowIndex, { openBorrowModal, openRepayModal }) => {\n                const { tokB, tokenD, isEthToken, token, borrowBalance, availableBalanceForBorrowToken, availableForBorrow } = row;\n                return (\n                    <div className={'d-flex align-items-stretch justify-content-center flex-column flex-lg-row align-items-lg-center justify-content-lg-start w-100'}>\n                        <StyledLink>\n                            <TradeButton\n                                onClick={openBorrowModal.bind(this, tokenD, isEthToken, tokB, token, availableBalanceForBorrowToken)}\n                                disabled={availableForBorrow.isEqualTo(0) || !account}\n                            >\n                                Borrow\n                            </TradeButton>\n                        </StyledLink>\n\n                        <StyledLink>\n                            <TradeButton\n                                variant={'warning'}\n                                onClick={openRepayModal.bind(this, tokenD, isEthToken, tokB, token, borrowBalance)}\n                                disabled={(borrowBalance && borrowBalance.isEqualTo(0)) || !account}\n                            >\n                                Repay\n                            </TradeButton>\n                        </StyledLink>\n                    </div>\n                )\n            },\n            isAction: true,\n            formatExtraData: {\n                openBorrowModal,\n                openRepayModal\n            }\n        },\n\n    ]\n\n    const modals = (\n        <>\n            {isModalBorrowOpenState && aTokenDataState && (\n                <BorrowTokenModal\n                    show={isModalBorrowOpenState}\n                    tokenBalance={tokenBalanceState}\n                    isSubmitting={isSubmittingState}\n                    availableForBorrow={availableForBorrowState}\n                    onSubmit={handleSubmit}\n                    aToken={aTokenDataState}\n                    closeModal={closeBorrowModal}\n                    ethBalance={wethPlusEthBalance}\n                    isEth={isEthState}\n                    wethToken={wethToken}\n                />\n            )}\n            {isModalRepayOpenState && aTokenDataState && (\n                <RepayTokenModal\n                    show={isModalRepayOpenState}\n                    tokenBalance={tokenBalanceState}\n                    isSubmitting={isSubmittingState}\n                    onSubmit={handleSubmit}\n                    borrowedBalance={borrowBalanceState}\n                    aToken={aTokenDataState}\n                    closeModal={closeRepayModal}\n                    ethBalance={wethPlusEthBalance}\n                    isEth={isEthState}\n                    wethToken={wethToken}\n                />\n            )}\n        </>\n    );\n\n    return (\n        <div className=\"d-flex flex-column\">\n\n            <BootstrapTable\n                wrapperClasses=\"table-responsive d-none d-lg-block\"\n                bordered={false}\n                classes=\"table table-head-custom table-borderless table-vertical-center overflow-hidden borrow__table\"\n                bootstrap4\n                remote\n                keyField=\"id\"\n                data={tokensRow}\n                columns={columns}\n                onTableChange={onTableChange}\n            >\n            </BootstrapTable>\n            <ResponsiveTable breakpoint={'lg'} columns={columns} data={tokensRow} direction={'rtl'}/>\n\n            {modals}\n        </div>\n    )\n}\n\nexport default withBalance(BorrowBalance);\n","import {Col, Nav, Row, Tab} from 'react-bootstrap';\nimport styled from \"styled-components\";\n\nimport {ResponsiveCard} from '../../../components/Card';\nimport React, {useEffect} from \"react\";\nimport {GET_AAVE_RESERVES} from \"../../../services/aave/gql\";\nimport {useQuery} from \"@apollo/client\";\nimport {getAaveGraphClient} from \"../../../services/aave/aave\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useActiveWeb3React} from \"../../../hooks\";\nimport {getAaveLoadingState} from \"../../../state/selectors\";\nimport {fetchAave, initAave, setAaveReservesGQLResponse} from \"../../../state/aave/actions\";\nimport {AaveLoadingState} from \"../../../utils/aave/types\";\nimport useInterval from \"../../../hooks/useInterval\";\nimport LendingBalance from \"../LendingBalance\";\nimport BorrowBalance from \"../BorrowBalance\";\n\n\nconst HeaderCol = styled(Col)`\n  margin: -10px 0 20px;\n  \n  @media (min-width: 768px) {\n    margin-bottom: 25px;\n  }\n`\n\nconst CustomNav = styled(Nav)`\n  margin-left: -30px !important;\n  margin-right: -30px !important;\n  overflow: auto;\n  \n  @media (min-width: 768px) {\n    margin-left: -10px !important;\n    margin-right: -10px !important;\n  }\n`\n\nconst CustomNavItem = styled(Nav.Item)`\n  flex-grow: initial !important;\n  \n  padding: 0 10px 10px;\n  \n  \n    @media (max-width: 767px) {\n      padding: 0 5px 10px;\n    }\n  \n  &:first-child {\n    @media (max-width: 767px) {\n      padding-left: 30px;\n    }\n  }\n  &:last-child {\n    @media (max-width: 767px) {\n      padding-right: 30px;\n    }\n  }\n`\nconst CustomNavLink = styled(Nav.Link)`\n  border-radius: 18px !important;\n  color: ${({ theme }) => theme.primary};\n  background-color: rgba(135, 220, 225, 0.15);\n  white-space: nowrap;\n  padding: 14px 24px;\n  min-height: 56px;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  \n    @media (max-width: 767px) {\n      padding: 6px 15px;\n      font-size: 1rem;\n      min-height: 32px;\n      border-radius: 12px !important;\n    }\n  \n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n  \n  &.active {\n    color: white;\n    background-color: ${({ theme }) => theme.primary};\n  }\n`\n\nconst BorrowCommon = props => {\n    const { account } = useActiveWeb3React();\n    const { loading, error, data } = useQuery(GET_AAVE_RESERVES, {\n        client: getAaveGraphClient(),\n        pollInterval: 1000,\n    });\n    const dispatch = useDispatch();\n    const aaveLoadingState = useSelector(getAaveLoadingState);\n\n\n    useEffect(() => {\n        if (!loading && !error && data) {\n            dispatch(setAaveReservesGQLResponse(data.reserves));\n            if (aaveLoadingState === AaveLoadingState.NotLoaded) {\n                dispatch(initAave(account));\n            } else {\n                dispatch(fetchAave(account));\n            }\n        }\n    }, [loading, data, account]);\n\n    // Update Aaave state each 60 seconds\n    useInterval(async () => {\n        if (account && data && !loading && !error) {\n            dispatch(fetchAave(account));\n        }\n    }, 60 * 1000);\n\n    return (\n        <ResponsiveCard>\n            <Tab.Container defaultActiveKey=\"deposit\">\n                <Row>\n                    <HeaderCol xs={12} className={'d-flex flex-column-reverse flex-lg-row align-items-stretch align-items-lg-start justify-content-start justify-content-lg-between'}>\n                        <CustomNav fill variant=\"pills\" className={'d-flex flex-row align-items-center flex-nowrap'}>\n                            <CustomNavItem>\n                                <CustomNavLink eventKey=\"deposit\">Deposit</CustomNavLink>\n                            </CustomNavItem>\n                            <CustomNavItem>\n                                <CustomNavLink eventKey=\"borrow\">Borrow</CustomNavLink>\n                            </CustomNavItem>\n                        </CustomNav>\n                    </HeaderCol>\n\n                    <Col xs={12}>\n                        <Tab.Content className={'bg-transparent'}>\n                            <Tab.Pane eventKey=\"deposit\">\n                                <LendingBalance/>\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"borrow\">\n                                <BorrowBalance/>\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Col>\n                </Row>\n            </Tab.Container>\n        </ResponsiveCard>\n    )\n}\n\nexport default BorrowCommon;\n","import { Modal } from 'react-bootstrap';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Web3 from \"web3\";\nimport {Web3Wrapper} from \"@0x/web3-wrapper\";\n\nimport {getStepsModalCurrentStep} from \"../../../state/selectors\";\nimport {setStepsModalCurrentStep} from \"../../../state/spotUI/actions\";\nimport {CHAIN_ID, StepKind} from \"../../../constants\";\n\nimport UnlockToken from \"./modals/UnlockToken\";\nimport React, {useEffect, useState} from \"react\";\nimport {TransactionSubmittedContent} from \"../../../components/TransactionConfirmationModal\";\nimport WrapEth from \"./modals/WrapEth\";\nimport LendingToken from \"./modals/LendingToken\";\nimport BorrowToken from \"./modals/BorrowToken\";\n\nlet web3;\nlet web3Wrapper;\n\nconst ModalProvider = props => {\n    const [submitted, setSubmitted] = useState(false);\n    const [txHash, setTxHash] = useState(null)\n    const currentStep = useSelector(getStepsModalCurrentStep);\n    const dispatch = useDispatch();\n    const isOpen = currentStep !== null;\n\n    useEffect(() => {\n        web3 = new Web3(Web3.givenProvider);\n        web3Wrapper = new Web3Wrapper(web3.givenProvider);\n    }, [])\n\n    const hideModal = () => {\n        setSubmitted(false);\n        setTxHash(null);\n        dispatch(setStepsModalCurrentStep(null))\n    }\n\n    const onDone = (tx) => {\n        setSubmitted(true);\n        setTxHash(tx);\n    }\n\n    return (\n        <>\n            {props.children}\n            <Modal show={isOpen} centered onHide={hideModal}>\n                <Modal.Body className={'px-0 py-0'}>\n                    {!submitted ? (\n                        <>\n                            {currentStep && currentStep.kind === StepKind.ToggleTokenLock && (\n                                (<UnlockToken onDismiss={hideModal} web3={web3Wrapper}/>)\n                            )}\n                            {currentStep && currentStep.kind === StepKind.WrapEth && (\n                                (<WrapEth onDismiss={hideModal} web3={web3Wrapper}/>)\n                            )}\n                            {currentStep && currentStep.kind === StepKind.LendingToken && (\n                                (<LendingToken onDismiss={hideModal} onDone={onDone} web3={web3Wrapper}/>)\n                            )}\n                            {currentStep && currentStep.kind === StepKind.UnLendingToken && (\n                                (<LendingToken onDismiss={hideModal} onDone={onDone} web3={web3Wrapper}/>)\n                            )}\n                            {currentStep && currentStep.kind === StepKind.RepayToken && (\n                                (<BorrowToken onDismiss={hideModal} onDone={onDone} web3={web3Wrapper}/>)\n                            )}\n                            {currentStep && currentStep.kind === StepKind.BorrowToken && (\n                                (<BorrowToken onDismiss={hideModal} onDone={onDone} web3={web3Wrapper}/>)\n                            )}\n                        </>\n                    ) : (\n                        <TransactionSubmittedContent chainId={CHAIN_ID} hash={txHash} onDismiss={hideModal}/>\n                    )}\n                </Modal.Body>\n            </Modal>\n        </>\n\n    )\n}\n\nexport default ModalProvider;\n","import {ConfirmationPendingContent} from \"../../../../components/TransactionConfirmationModal\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {getStepsModalCurrentStep} from \"../../../../state/selectors\";\nimport {UNLIMITED_ALLOWANCE_IN_BASE_UNITS} from \"../../../../constants\";\nimport {useActiveWeb3React} from \"../../../../hooks\";\nimport {getContractWrappers} from \"../../../../utils/spot/contractWrapper\";\nimport {ERC20TokenContract} from \"@0x/contract-wrappers\";\nimport {stepsModalAdvanceStep, updateWethBalance} from \"../../../../state/spotUI/actions\";\nimport withBalance from \"../../../../components/hoc/withBalance\";\nimport {\n    INSUFFICIENT_ETH_BALANCE_FOR_DEPOSIT,\n    UNEXPECTED_ERROR,\n    USER_DENIED_TRANSACTION_SIGNATURE_ERR\n} from \"../../../../lib/exceptions/common\";\nimport {tokenAmountInUnits} from \"../../../../utils/spot/tokens\";\nimport {ConvertBalanceMustNotBeEqualException} from \"../../../../lib/exceptions/convertBalance\";\n\nconst WrapEth = props => {\n    const [wrapping, setWrapping] = useState(false);\n    const { account } = useActiveWeb3React();\n    const currentStep = useSelector(getStepsModalCurrentStep);\n    const { wethBalance } = props;\n    const { currentWethBalance, newWethBalance } = currentStep;\n    const web3 = props.web3;\n    const dispatch = useDispatch();\n\n    const amount = newWethBalance.minus(currentWethBalance);\n    const isEthToWeth = amount.isGreaterThan(0);\n    const convertingFrom = isEthToWeth ? 'ETH' : 'wETH';\n\n\n    const wrapEthereum = async () => {\n        try {\n\n            const convertTxHash = await dispatch(updateWethBalance(wethBalance, newWethBalance, account, web3.getProvider()));\n            setWrapping(true);\n            const tx = await web3.awaitTransactionSuccessAsync(convertTxHash);\n\n            if(tx) {\n                setWrapping(false)\n                dispatch(stepsModalAdvanceStep());\n            }\n\n        } catch(err) {\n            setWrapping(false)\n            props.onDismiss();\n        }\n    }\n\n    useEffect(() => {\n        wrapEthereum();\n    }, [currentStep])\n\n    return (\n        <ConfirmationPendingContent onDismiss={wrapping ? () => null : props.onDismiss} pendingText={wrapping ? 'Wrapping...' : `Convert ${convertingFrom}`} />\n    )\n}\n\nexport default withBalance(WrapEth);\n","import {ConfirmationPendingContent} from \"../../../../components/TransactionConfirmationModal\";\nimport React, {useEffect, useState} from \"react\";\nimport { connect  } from \"react-redux\";\n\nimport {useActiveWeb3React} from \"../../../../hooks\";\nimport {tokenAmountInUnits, tokenSymbolToDisplayString} from \"../../../../utils/spot/tokens\";\nimport {getGasInfo, getStepsModalCurrentStep} from \"../../../../state/selectors\";\nimport {lendingDefiToken, unLendingDefiToken} from \"../../../../state/defi/actions\";\n\nconst LendingToken = props => {\n    const [loading, setLoading] = useState(false);\n    const { account } = useActiveWeb3React();\n\n    const { step, onSubmitLendingToken, onSubmitUnLendingToken } = props;\n    const { amount, token, isEth, defiToken, isLending } = step;\n\n    const coinSymbol = isEth ? tokenSymbolToDisplayString('ETH') : tokenSymbolToDisplayString(token.symbol);\n    const decimals = isEth ? 18 : step.token.decimals;\n    const amountOfTokenString = `${tokenAmountInUnits(\n        step.amount,\n        decimals,\n        step.token.displayDecimals,\n    ).toString()} ${coinSymbol}`;\n\n    const web3 = props.web3;\n\n    const Lending = async () => {\n        try {\n\n            const txHash = isLending\n                ? await onSubmitLendingToken(token, defiToken, amount, isEth, account)\n                : await onSubmitUnLendingToken(token, defiToken, amount, isEth, account);\n            setLoading(true);\n            const tx = await web3.awaitTransactionSuccessAsync(txHash);\n            if(tx) {\n                setLoading(false)\n                props.onDone(txHash)\n            }\n\n        } catch(err) {\n            setLoading(false)\n            props.onDismiss();\n        }\n    }\n\n    useEffect(() => {\n        Lending();\n    }, [step])\n\n    return (\n        <ConfirmationPendingContent onDismiss={loading ? () => null : props.onDismiss} pendingText={loading ? `Pending Transaction...` : `Confirm on ${account} to ${isLending ? 'deposit' : 'withdraw'} ${amountOfTokenString}.`} />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        step: getStepsModalCurrentStep(state),\n        gasInfo: getGasInfo(state)\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSubmitLendingToken: (token, defiToken, amount, isEth, account) =>\n            dispatch(lendingDefiToken(token, defiToken, amount, isEth, account)),\n        onSubmitUnLendingToken: (token, defiToken, amount, isEth, account) =>\n            dispatch(unLendingDefiToken(token, defiToken, amount, isEth, account)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LendingToken);\n","import { getUpdateAToken } from '../../services/aave/aave';\nimport { Protocol } from '../../utils/aave/types';\nimport { borrowAToken, lendingAToken, repayAToken, setATokenBalance, unLendingAToken } from '../aave/actions';\nimport { getDefiProtocol } from '../selectors';\n\nexport const lendingDefiToken = (\n    token,\n    defiToken,\n    amount,\n    isEth,\n    account,\n) => {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const protocol = getDefiProtocol(state);\n        switch (protocol) {\n            case Protocol.Aave:\n                const txHash = dispatch(lendingAToken(token, defiToken, amount, isEth, account));\n                return txHash;\n            default:\n                break;\n        }\n    };\n};\n\nexport const borrowDefiToken = (\n    token,\n    defiToken,\n    amount,\n    isEth,\n    account,\n) => {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const protocol = getDefiProtocol(state);\n        switch (protocol) {\n            case Protocol.Aave:\n                const txHash = dispatch(borrowAToken(token, defiToken, amount, isEth, account));\n                return txHash;\n            default:\n                break;\n        }\n    };\n};\n\nexport const repayDefiToken = (\n    token,\n    defiToken,\n    amount,\n    isEth,\n    account\n) => {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const protocol = getDefiProtocol(state);\n        switch (protocol) {\n            case Protocol.Aave:\n                const txHash = dispatch(repayAToken(token, defiToken, amount, isEth, account));\n                return txHash;\n            default:\n                break;\n        }\n    };\n};\n\nexport const unLendingDefiToken = (\n    token,\n    defiToken,\n    amount,\n    isEth,\n    account\n) => {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const protocol = getDefiProtocol(state);\n        switch (protocol) {\n            case Protocol.Aave:\n                const txHash = dispatch(unLendingAToken(token, defiToken, amount, isEth, account));\n                return txHash;\n            default:\n                break;\n        }\n    };\n};\n\nexport const updateDefiTokenBalance = (defiToken, ethAccount) => {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const protocol = getDefiProtocol(state);\n        switch (protocol) {\n            case Protocol.Aave:\n                const token = await getUpdateAToken(ethAccount, defiToken);\n                dispatch(setATokenBalance(token));\n                break;\n\n            default:\n                break;\n        }\n    };\n};\n","import {ConfirmationPendingContent} from \"../../../../components/TransactionConfirmationModal\";\nimport React, {useEffect, useState} from \"react\";\nimport { connect  } from \"react-redux\";\n\nimport {useActiveWeb3React} from \"../../../../hooks\";\nimport {tokenAmountInUnits, tokenSymbolToDisplayString} from \"../../../../utils/spot/tokens\";\nimport {getGasInfo, getStepsModalCurrentStep} from \"../../../../state/selectors\";\nimport {borrowDefiToken, lendingDefiToken, repayDefiToken, unLendingDefiToken} from \"../../../../state/defi/actions\";\n\nconst LendingToken = props => {\n    const [loading, setLoading] = useState(false);\n    const { account } = useActiveWeb3React();\n\n    const { step, onSubmitBorrowToken, onSubmitRepayToken } = props;\n    const { amount, token, isEth, defiToken, isBorrow } = step;\n\n    const coinSymbol = isEth ? tokenSymbolToDisplayString('ETH') : tokenSymbolToDisplayString(token.symbol);\n    const decimals = isEth ? 18 : step.token.decimals;\n\n    const amountOfTokenString = `${tokenAmountInUnits(\n        step.amount,\n        decimals,\n        step.token.displayDecimals,\n    ).toString()} ${coinSymbol}`;\n\n    const web3 = props.web3;\n\n    const Borrowing = async () => {\n        try {\n            const txHash = isBorrow\n                ? await onSubmitBorrowToken(token, defiToken, amount, isEth, account)\n                : await onSubmitRepayToken(token, defiToken, amount, isEth, account);\n\n            setLoading(true);\n            const tx = await web3.awaitTransactionSuccessAsync(txHash);\n            if(tx) {\n                setLoading(false)\n                props.onDone(txHash)\n            }\n\n        } catch(err) {\n            setLoading(false)\n            props.onDismiss();\n        }\n    }\n\n    useEffect(() => {\n        Borrowing();\n    }, [step])\n\n    return (\n        <ConfirmationPendingContent onDismiss={loading ? () => null : props.onDismiss} pendingText={loading ? `Pending Transaction...` : `Confirm on ${account} to ${isBorrow ? 'Borrow' : 'Repay'} ${amountOfTokenString}.`} />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        step: getStepsModalCurrentStep(state),\n        gasInfo: getGasInfo(state)\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSubmitBorrowToken: (token, defiToken, amount, isEth, account) =>\n            dispatch(borrowDefiToken(token, defiToken, amount, isEth, account)),\n        onSubmitRepayToken: (token, defiToken, amount, isEth, account) =>\n            dispatch(repayDefiToken(token, defiToken, amount, isEth, account)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LendingToken);\n","import { Row, Col } from 'react-bootstrap';\n\nimport GraphQlProvider from \"./Provider\";\nimport Page from \"../../components/Page\";\nimport GlobalOverall from \"./GlobalOverall\";\nimport BorrowCommon from \"./Common\";\nimport './style.scss';\nimport ModalProvider from \"./ModalProvider\";\nimport styled from \"styled-components\";\n\nconst StyledRow = styled(Row)`\n  margin-top: 40px;\n  \n  @media (max-width: 767px) {\n    margin-top: 20px;\n  }\n`\n\nconst Borrow = props => {\n    return (\n        <Page>\n            <GraphQlProvider>\n                <ModalProvider />\n                <StyledRow>\n                    <Col xs={12}>\n                        <GlobalOverall/>\n                    </Col>\n                    <Col xs={12}>\n                        <BorrowCommon/>\n                    </Col>\n                </StyledRow>\n            </GraphQlProvider>\n        </Page>\n    )\n}\n\nexport default Borrow;\n"],"sourceRoot":""}