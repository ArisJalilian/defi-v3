{"version":3,"sources":["components/Card/index.js","components/Row/index.tsx","components/Column/index.tsx","components/hoc/withWeb3Account.tsx","components/NumericalInput/index.tsx","components/swap/styleds.tsx","components/Modal/index.tsx","assets/images/dropdown.svg","components/AddressInputPanel/index.js","http/instantSwap/OneInch.js","http/instantSwap/Godex.js","http/instantSwap/dexAg.js","http/instantSwap/SimpleSwap.js","http/instantSwap/Stealthex.js","http/instantSwap/index.js","components/SwapSelectModal/CurrencyList.js","components/SwapSelectModal/index.js","components/SwapInputPanel/index.js","pages/InstantSwap/index.js"],"names":["Header","Card","Body","CustomCard","styled","theme","modalBG","text1","margin","marginBottom","marginTop","text4","RCard","CustomHeader","text3","isTable","CustomBody","CustomTitle","h4","ResponsiveCard","props","header","title","children","body","Comp","Row","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Column","ColumnCenter","AutoColumn","withWeb3Account","Component","context","useActiveWeb3React","toggleWalletModal","useWalletModalToggle","web3","StyledInput","input","error","red1","bg3","size","reverse","noBorder","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","Wrapper","ArrowWrapper","clickable","css","SectionBreak","bg2","ErrorText","Text","severity","yellow1","green1","StyledBalanceMaxMini","button","text2","TruncatedText","SwapCallbackErrorInner","span","transparentize","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","primary1","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","backdrop","AnimatedDialogContent","DialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","maxWidth","attrs","shadow1","mediaWidth","upToMedium","upToSmall","Modal","onDismiss","initialFocusRef","fadeTransition","useTransition","config","duration","from","opacity","enter","leave","useEffect","PaddingWidth","scrollDiv","document","createElement","className","appendChild","scrollbarWidth","getBoundingClientRect","clientWidth","removeChild","_getScrollbarWidth","style","paddingRight","useSpring","y","mass","tension","friction","set","bind","useGesture","onDrag","state","down","movement","velocity","direction","map","item","key","setTimeout","isMobile","aria-label","tabIndex","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","stroke","SvgDropdown","_ref","svgRef","titleId","height","viewBox","fill","xmlns","ref","id","ForwardRef","InputPanel","flexColumnNoWrap","ContainerRow","bg1","InputContainer","Label","PATTERN","AddressInputPanel","chainId","useContext","ThemeContext","useENS","address","name","loading","handleInput","useCallback","withoutSpaces","Boolean","href","getEtherscanLink","fontSize","autoCapitalize","OneInchApi","instance","axios","create","baseURL","payload","getTokens","getProtocols","getHealthcheck","getQuote","getSwap","getSpender","getApprove","get","params","referrerAddress","ONE_INCH_REFERRER_ACCOUNT","fee","ONE_INCH_FEE_PERCENTAGE","GodexApi","getRate","createTransaction","getTransaction","getTransactionStatus","post","DexAgApi","getTrade","recipient","res","data","SimpleSwapApi","apiKey","process","interceptors","response","use","fetchAllCurrencies","fetchAllPairs","fetchCurrencyInfo","getExchange","getRange","getMarkets","Promise","resolve","reject","postNewExchange","obj","stringify","result","queryString","query","injectApiKey","amount","rate","range","min","max","JSON","headers","StealthexApi","PROXY_URL","symbol","currency_from","currency_to","estimated_amount","min_amount","max_amount","paraswap","ParaSwap","oneInch","godex","dexag","api","sdk","DEXAG","fromProvider","window","ethereum","simpleSwap","stealthex","MenuItem","disabled","selected","Logo","img","StyledBalanceText","StyledText","Symbol","CurrencyRow","currency","onSelect","isSelected","onClick","src","logoURI","alt","fontWeight","justifySelf","CurrencyList","currencies","selectedCurrency","onCurrencySelect","fixedListRef","index","itemKey","itemData","itemCount","itemSize","StyledColumn","HeaderContainer","SwapSelectModal","useState","searchQuery","setSearchQuery","fixedList","useRef","inputRef","filteredTokens","useMemo","filter","token","toLowerCase","includes","current","scrollTo","handleCurrencySelect","flex","bg","SearchIcon","Form","disableWidth","InputRow","flexRowNoWrap","Balance","LabelRow","StyledDropDown","DropDown","Aligner","StyledTokenName","active","CurrencySelect","bg4","SwapInputPanel","label","disable","hideInput","disableCurrencySelect","onChangeBalance","balance","undefined","t","useTranslation","Token","decimals","modalOpen","setModalOpen","account","selectedCurrencyBalance","useCurrencyBalance","ETHER","handleDismissSearch","balanceInput","toSignificant","slice","NumericalInput","val","HEX_REGEX","SwapButton","Button","StyledRow","RateText","ProgressContainer","PlatformCard","primary","SwitchCol","Col","btc","eth","usdt","global","InstantSwap","getBuyStates","setState","promiseHandler","callback","then","catch","getParaswapSortedRates","rates","_","orderBy","others","getDexagSortedRates","getSortedRates","transformRates","apiRates","toTokenAmount","push","pair","destination","platform","forEach","supportedDEXes","exchange","unit","dex","Number","price","getSortedResult","sortedParts","transformedRates","sortBy","o","fetchPrices","a","deposit","loadingState","all","loaded","fromAmount","dexagParams","to","fromTokenAddress","toTokenAddress","getPrice","fixed","SIMPLE_SWAP_FIXED","toFixed","toast","showMore","hasEnoughBalance","onSwapTokens","prevState","onUserInputHandler","selectRate","setBuyState","buyState","setDefaultBuyState","oneInchBuyHandler","canExchange","allowance","ZERO","spenderRes","spender","BigNumber","times","toUpperCase","contract","getContract","ERC20_ABI","library","functions","isGreaterThan","maxAllowance","pow","minus","approve","awaitTransactionSuccessAsync","hash","txn","fromAddress","slippage","destReceiver","tx","sendTransaction","err","transactionHash","code","isExchangeInProgress","success","open","status","errors","msg","paraSwapBuyHandler","setWeb3Provider","currentProvider","toAmount","getAllowance","allowanceRes","approveToken","selectedRoute","find","txRoute","bestRoute","buildTx","PARASWAP_REFERRER_ACCOUNT","txParams","message","dexagBuyHandler","valid","registerStatusHandler","validate","console","log","metadata","details","base","quote","isBuying","sendTrade","simpleSwapBuyHandler","address_to","showQrModal","orderType","order","stealthexBuyHandler","amount_from","buyHandler","godexBuyHandler","toggleShowMore","onChangeRecipient","Web3","givenProvider","InstantSwapApi","typeTimeout","abiDecoder","AbiDecoder","tokens","str","Error","txHash","pollingIntervalMs","timeoutMs","isHexString","assert","isNumber","getTransactionReceipt","transactionReceipt","logsWithDecodedArgs","logs","tryToDecodeLogOrNoop","transactionReceiptWithDecodedLogArgs","wasTimeoutExceeded","txReceiptPromise","intervalId","intervalUtils","setAsyncExcludingInterval","clearAsyncExcludingInterval","txReceipt","awaitTransactionMinedAsync","receipt","Page","xs","md","offset","color","concat","BTC","ProgressBar","now","variant","toAbsoluteUrl","DEXesImages","DEXesName","display","flexBasis","minWidth","show","centered","onHide","paddingTop","paddingBottom","address_from","fgColor","darkMode","bgColor","crypto","contextType","connect","user","userSlippageTolerance","userDarkMode","withTranslation"],"mappings":"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","file":"static/js/23.5748b9cd.chunk.js","sourcesContent":["import { Card } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst { Header, Body } = Card;\n\nexport const CustomCard = styled(Card)`\n  background-color: ${({ theme }) => theme.modalBG };\n  color: ${({ theme }) => theme.text1};\n  margin-bottom: ${({margin, marginBottom}) => marginBottom ? `${marginBottom}px` : margin ? `${margin}px` : '20px'};\n  margin-top:  ${({margin, marginTop}) => marginTop ? `${marginTop}px` : margin ? `${margin}px` : '0'};;\n  border-radius: 18px;\n  border: 1px solid ${({ theme }) => theme.text4};\n`\n\nexport const RCard = styled(CustomCard)`\n  @media (max-width: 767px) {\n      margin-left: -30px;\n      margin-right: -30px;\n      border-radius: 0;\n      \n      .card-body {\n        padding-left: 30px;\n        padding-right: 30px;\n      }\n  }\n \n`\n\nexport const CustomHeader = styled(Header)`\n  border-bottom-color: ${({ theme }) => theme.text3};\n  background-color: transparent;\n  padding: 20px;\n  \n  \n  @media (min-width: 768px) {\n  padding: ${({ isTable }) => isTable ? '30px 60px' : '30px'};\n  }\n`\n\nexport const CustomBody = styled(Body)`\n  padding: 20px;\n  background-color: transparent;\n  \n  \n  @media (min-width: 768px) {\n  padding: ${({ isTable }) => isTable ? '18px 48px' : '30px'};\n  }\n`\n\nexport const CustomTitle = styled.h4`\n    margin: 0;\n    font-weight: bold;\n    color: ${({ theme }) => theme.text1};\n    font-size: 1.25rem;\n`\n\nconst Comp = props => {\n    return (\n        <CustomCard {...props}>\n            {props.header && (\n                <CustomHeader isTable={props.isTable}>\n                    {props.title && (\n                        <CustomTitle>{props.title}</CustomTitle>\n                    )}\n                    {props.header}\n                </CustomHeader>\n            )}\n            <CustomBody isTable={props.isTable}>\n                {props.children || props.body}\n            </CustomBody>\n        </CustomCard>\n    )\n}\nexport const ResponsiveCard = props => {\n    return (\n        <RCard {...props}>\n            {props.header && (\n                <CustomHeader isTable={props.isTable}>\n                    {props.title && (\n                        <CustomTitle>{props.title}</CustomTitle>\n                    )}\n                    {props.header}\n                </CustomHeader>\n            )}\n            <CustomBody isTable={props.isTable}>\n                {props.children || props.body}\n            </CustomBody>\n        </RCard>\n    )\n}\n\nexport default Comp;\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{\n    width?: string\n    align?: string\n    justify?: string\n    padding?: string\n    border?: string\n    borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import {useActiveWeb3React} from \"../../hooks\";\nimport {useWalletModalToggle} from \"../../state/application/hooks\";\n\nconst withWeb3Account = (Component: any) => {\n    return (props: any) => {\n        const context = useActiveWeb3React();\n        const toggleWalletModal = useWalletModalToggle()\n        return <Component\n            web3={context}\n            toggleWalletModal={toggleWalletModal}\n            { ...props }/>\n    }\n}\n\nexport default withWeb3Account;","import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string, noBorder?: boolean, reverse?: boolean, size?: string }>`\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  font-family: inherit;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.bg3};\n  font-size: 1rem;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  height: ${({ size}) => size === 'sm' ? '48px' : '56px'};\n  border-bottom-right-radius: ${({ reverse }) => reverse ? '0' :  `1.125rem`};\n  border-top-right-radius: ${({ reverse }) => reverse ? '0' :  `1.125rem`};\n  border-bottom-left-radius: ${({ reverse }) => reverse ? '1.125rem' :  `0`};\n  border-top-left-radius: ${({ reverse }) => reverse ? '1.125rem' :  `0`};\n  padding-right: 0.625rem;\n  padding-left: ${({ noBorder, reverse }) => reverse ? '1.375rem' : noBorder ? '0.625rem' : `1.5rem`};\n  -webkit-appearance: textfield;\n  border-left: ${({ theme, noBorder }) => noBorder ? 'none' :  `3px solid ${theme.modalBG}`};\n  \n  @media (min-width: 768px) {\n    \n    padding-right: 4.5625rem;\n  }\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  size,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  size?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={event => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      size={size}\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import { transparentize } from 'polished'\nimport React from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport styled, { css } from 'styled-components'\nimport { Text } from 'rebass'\nimport { AutoColumn } from '../Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const SectionBreak = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.bg2};\n`\n\nexport const BottomGrouping = styled.div`\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.red1\n      : severity === 2\n      ? theme.yellow1\n      : severity === 1\n      ? theme.text1\n      : theme.green1};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.bg2};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.text2};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.bg2};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.bg2};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text)`\n  text-overflow: ellipsis;\n  width: 220px;\n  overflow: hidden;\n`\n\n// styles\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => transparentize(0.9, theme.red1)};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.red1};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => transparentize(0.9, theme.red1)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <AlertTriangle size={24} />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => transparentize(0.9, theme.primary1)};\n  color: ${({ theme }) => theme.primary1};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import React, {useEffect} from 'react'\nimport styled, { css } from 'styled-components'\nimport { animated, useTransition, useSpring } from 'react-spring'\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\nimport { isMobile } from 'react-device-detect'\nimport '@reach/dialog/styles.css'\nimport { transparentize } from 'polished'\nimport { useGesture } from 'react-use-gesture'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 1100;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: ${({ theme }) => theme.backdrop};\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, maxWidth, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog'\n})`\n  overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    background-color: ${({ theme }) => theme.modalBG};\n    box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadow1)};\n    padding: 0;\n    width: 50vw;\n    overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n    overflow-x: hidden;\n\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    ${({ maxWidth }) =>\n    maxWidth &&\n    css`\n        max-width: ${maxWidth}px;\n      `}\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 18px\n    ;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      margin: 0;\n    `}\n    ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      ${mobile &&\n        css`\n          width: 100vw;\n          border-radius: 20px;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        `}\n    `}\n  }\n`\n\ninterface ModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  maxWidth?: number\n  initialFocusRef?: React.RefObject<any>\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 90,\n  maxWidth = 420,\n  initialFocusRef,\n  children\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 }\n  })\n\n  const _getScrollbarWidth = () => {\n    const scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    document.body.appendChild(scrollDiv)\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth\n    document.body.removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n  useEffect(() => {\n      if(isOpen){\n        const PaddingWidth = _getScrollbarWidth();\n        document.body.style.paddingRight = `${PaddingWidth}px`\n      }\n  }, [isOpen])\n\n  const [, set] = useSpring(() => ({ y: 0, config: { mass: 1, tension: 210, friction: 20 } }))\n  const bind = useGesture({\n    onDrag: state => {\n      set({\n        y: state.down ? state.movement[1] : 0\n      })\n      if (state.movement[1] > 300 || (state.velocity > 3 && state.direction[1] > 0)) {\n        onDismiss()\n      }\n    }\n  })\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogOverlay key={key} style={props} onDismiss={() => {\n              onDismiss()\n              setTimeout(() => {\n                document.body.style.paddingRight = `0`\n              }, 200)\n            }} initialFocusRef={initialFocusRef}>\n              <StyledDialogContent\n                {...(isMobile\n                  ? {\n                      ...bind(),\n                    }\n                  : {})}\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                maxWidth={maxWidth}\n                mobile={isMobile}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {children}\n              </StyledDialogContent>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.97168 1L6.20532 6L11.439 1\",\n  stroke: \"#AEAEAE\"\n});\n\nfunction SvgDropdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdown);\nexport default __webpack_public_path__ + \"static/media/dropdown.fef18eeb.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useContext, useCallback } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport useENS from '../../hooks/useENS'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ExternalLink, TYPE } from '../../theme'\nimport { AutoColumn } from '../Column'\nimport { RowBetween } from '../Row'\nimport { getEtherscanLink } from '../../utils'\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  margin-bottom: 2.75rem;\n  \n  @media (max-width: 767px) {\n    margin-bottom: 1.5rem;\n  }\n`\n\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.red1 : theme.bg2)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.bg1};\n  padding: 1rem;\n  height: 56px;\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n`\n\nconst Input = styled.input`\n  font-size: 1rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.bg1};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.text1};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text1};\n  }\n`\n\n\nconst Label = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-weight: 400;\n  font-size: .875rem;\n  padding: 0 ;\n  \n  @media (min-width: 768px) {\n    padding: 0 1.5rem;\n  }\n`\n\nconst PATTERN = /^[13][a-km-zA-HJ-NP-Z1-9]{25,80}$|^(bc1)[0-9A-Za-z]{25,80}$|^(0x[a-fA-F0-9]{40})$|^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$/\n\nexport default function AddressInputPanel({\n    id,\n    value,\n    onChange\n}) {\n    const { chainId } = useActiveWeb3React()\n    const theme = useContext(ThemeContext)\n\n    const { address, loading, name } = useENS(value)\n\n    const handleInput = useCallback(\n        event => {\n            const input = event.target.value\n            const withoutSpaces = input.replace(/\\s+/g, '')\n            onChange(withoutSpaces)\n        },\n        [onChange]\n    )\n\n    const error = Boolean(value.length > 0 && !PATTERN.test(value))\n\n    return (\n        <InputPanel id={id}>\n            <InputContainer>\n                <AutoColumn gap=\"md\">\n                    <RowBetween>\n                        <Label>\n                            Recipient\n                        </Label>\n                        {address && chainId && (\n                            <ExternalLink href={getEtherscanLink(chainId, name ?? address, 'address')} style={{ fontSize: '14px' }}>\n                                (View on Etherscan)\n                            </ExternalLink>\n                        )}\n                    </RowBetween>\n                    <ContainerRow error={error}>\n                        <Input\n                            className=\"recipient-address-input\"\n                            type=\"text\"\n                            autoComplete=\"off\"\n                            autoCorrect=\"off\"\n                            autoCapitalize=\"off\"\n                            spellCheck=\"false\"\n                            placeholder=\"Wallet Address or ENS name\"\n                            error={error}\n                            pattern={PATTERN}\n                            onChange={handleInput}\n                            value={value}\n                        />\n                    </ContainerRow>\n                </AutoColumn>\n            </InputContainer>\n        </InputPanel>\n    )\n}\n","import axios from 'axios';\nimport {ONE_INCH_FEE_PERCENTAGE, ONE_INCH_REFERRER_ACCOUNT} from \"../../constants\";\n\nexport default class OneInchApi {\n    constructor() {\n        this.instance = axios.create({\n            baseURL: 'https://api.1inch.exchange/v2.0/'\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'tokens': {\n                return this.getTokens();\n            }\n            case 'protocols': {\n                return this.getProtocols();\n            }\n            case 'healthcheck': {\n                return this.getHealthcheck();\n            }\n            case 'quote': {\n                return this.getQuote(payload);\n            }\n            case 'swap': {\n                return this.getSwap(payload);\n            }\n            case 'spender': {\n                return this.getSpender();\n            }\n            case 'approve': {\n                return this.getApprove(payload);\n            }\n        }\n    }\n\n    getTokens() {\n        return this.instance.get('tokens');\n    }\n\n    getProtocols() {\n        return this.instance.get('protocols');\n    }\n    getHealthcheck() {\n        return this.instance.get('healthcheck');\n    }\n    getQuote(payload) {\n        return this.instance.get(`quote`, {\n            params: payload\n        });\n    }\n\n    getSwap(payload) {\n        return this.instance.get(`swap`, {\n            params: {\n                ...payload,\n                referrerAddress: ONE_INCH_REFERRER_ACCOUNT,\n                fee: ONE_INCH_FEE_PERCENTAGE\n            }\n        });\n    }\n\n    getSpender() {\n        return this.instance.get('approve/spender')\n    }\n\n    getApprove(payload) {\n        return this.instance.get(`approve/calldata`, {\n            params: payload\n        });\n    }\n}\n","import axios from 'axios';\nimport {encodeQuery} from \"../../lib/helper\";\n\nexport default class GodexApi {\n    constructor() {\n        this.instance = axios.create({\n            baseURL: 'https://api.godex.io/api/v1/'\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'tokens': {\n                return this.getTokens();\n            }\n            case 'rate': {\n                return this.getRate(payload);\n            }\n            case 'transaction': {\n                return this.createTransaction(payload);\n            }\n            case 'getTransaction': {\n                return this.getTransaction(payload);\n            }\n            case 'getTransactionStatus': {\n                return this.getTransactionStatus(payload);\n            }\n        }\n    }\n\n    getTokens() {\n        return this.instance.get('coins');\n    }\n\n    getRate(payload) {\n        return this.instance.post('info', payload);\n    }\n    createTransaction(payload) {\n        return this.instance.post('transaction', payload);\n    }\n    getTransaction({ id }) {\n        return this.instance.get(`transaction/${id}`);\n    }\n    getTransactionStatus({ id }) {\n        return this.instance.get(`transaction/${id}/status`);\n    }\n}","import axios from 'axios';\nimport {encodeQuery} from \"../../lib/helper\";\n\nexport default class DexAgApi {\n    constructor() {\n        this.instance = axios.create({\n            baseURL: 'https://api-v2.dex.ag/'\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'tokens': {\n                return this.getTokens();\n            }\n            case 'trade': {\n                return this.getTrade(payload)\n            }\n        }\n    }\n\n    getTokens() {\n        return this.instance.get('token-list-full');\n    }\n\n\n    async getTrade(payload) {\n        let res;\n        if(payload.params.recipient) {\n            res = await this.instance.get('tradeAndSend', {\n                params: payload.params\n            })\n        } else {\n            res = await this.instance.get('trade', {\n                params: payload.params\n            })\n        }\n        const data = res.data;\n        return data;\n    }\n\n}","import axios from 'axios';\nimport queryString from \"query-string\";\n\nexport default class SimpleSwapApi {\n    constructor(apiKey = process.env.REACT_APP_SIMPLESWAP_API_KEY) {\n        this.baseURL = 'https://api.simpleswap.io/v1/'\n        this.instance = axios.create({\n            baseURL: this.baseURL,\n        })\n        this.apiKey = apiKey;\n\n        this.instance.interceptors.response.use(response => {\n            if(response.hasOwnProperty('data')) {\n                return response.data;\n            }\n            return response;\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'currencies': {\n                return this.fetchAllCurrencies();\n            }\n            case 'pairs': {\n                return this.fetchAllPairs(payload);\n            }\n            case 'currencyInfo': {\n                return this.fetchCurrencyInfo(payload);\n            }\n            case 'rate': {\n                return this.getRate(payload);\n            }\n            case 'exchange': {\n                return this.getExchange(payload);\n            }\n            case 'range': {\n                return this.getRange(payload);\n            }\n            case 'markets': {\n                return this.getMarkets();\n            }\n            default: {\n                return new Promise((resolve, reject) => {\n                    reject('Unresolvable method called');\n                })\n            }\n        }\n    }\n\n    set(type, payload = {}) {\n        switch(type) {\n            case 'exchange': {\n                return this.postNewExchange(payload);\n            }\n            default: {\n                return new Promise((resolve, reject) => {\n                    reject('Unresolvable method called');\n                })\n            }\n        }\n    }\n\n    injectApiKey(obj, stringify = false) {\n        let result = {\n            ...obj,\n            'api_key': this.apiKey,\n        }\n\n        if(stringify) {\n            return queryString.stringify(result);\n        }\n\n        return result;\n    }\n\n    fetchAllCurrencies() {\n        let query = this.injectApiKey({}, true);\n\n        return this.instance.get(`get_all_currencies?${query}`)\n    }\n\n    fetchAllPairs(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`get_all_pairs?${query}`)\n    }\n\n    fetchCurrencyInfo(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`get_currency?${query}`)\n    }\n\n    getRate(payload) {\n        let query = this.injectApiKey(\n            payload.query ? {\n                ...payload.query,\n                amount: 1,\n            } : {},\n            true\n        );\n\n        return this.instance.get(`get_estimated?${query}`)\n    }\n\n    async getExchange(payload) {\n        try {\n            const rate = await this.getRate(payload);\n            const range = await this.getRange(payload);\n\n            return {\n                rate,\n                ...range,\n            }\n        } catch(e) {\n\n            return {\n                rate: null,\n                min: null,\n                max: null\n            }\n        }\n    }\n\n    getRange(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`get_ranges?${query}`)\n    }\n\n    getMarkets() {\n        let query = this.injectApiKey({}, true);\n\n        return this.instance.get(`get_market_info?${query}`)\n    }\n\n    postNewExchange(payload) {\n        let query = this.injectApiKey({}, true);\n        return this.instance.post(`create_exchange?${query}`, JSON.stringify(payload.data), {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'accept': 'application/json',\n            }\n        })\n    }\n}\n","import axios from 'axios';\nimport queryString from \"query-string\";\nimport {PROXY_URL} from \"../../constants\";\n\nexport default class StealthexApi {\n    constructor(apiKey = process.env.REACT_APP_STEALTHEX_API_KEY) {\n        this.baseURL = `${PROXY_URL}/stealthex/api/v2`\n        this.instance = axios.create({\n            baseURL: this.baseURL,\n        })\n        this.apiKey = apiKey;\n\n        this.instance.interceptors.response.use(response => {\n            if(response.hasOwnProperty('data')) {\n                return response.data;\n            }\n            return response;\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'currencies': {\n                return this.fetchAllCurrencies();\n            }\n            case 'pairs': {\n                return this.fetchAllPairs(payload);\n            }\n            case 'currencyInfo': {\n                return this.fetchCurrencyInfo(payload);\n            }\n            case 'rate': {\n                return this.getRate(payload);\n            }\n            case 'exchange': {\n                return this.getExchange(payload);\n            }\n            case 'range': {\n                return this.getRange(payload);\n            }\n            default: {\n                return new Promise((resolve, reject) => {\n                    reject('Unresolvable method called');\n                })\n            }\n        }\n    }\n\n    set(type, payload = {}) {\n        switch(type) {\n            case 'exchange': {\n                return this.postNewExchange(payload);\n            }\n            default: {\n                return new Promise((resolve, reject) => {\n                    reject('Unresolvable method called');\n                })\n            }\n        }\n    }\n\n    injectApiKey(obj, stringify = false) {\n        let result = {\n            ...obj,\n            'api_key': this.apiKey,\n            'fixed': process.env.REACT_APP_STEALTHEX_FIXED_RATE\n        }\n\n        if(stringify) {\n            return queryString.stringify(result);\n        }\n\n        return result;\n    }\n\n    fetchAllCurrencies() {\n        let query = this.injectApiKey({}, true);\n\n        return this.instance.get(`currency?${query}`)\n    }\n\n    fetchAllPairs(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`pairs?${query}`)\n    }\n\n    fetchCurrencyInfo(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`currency/${payload.symbol}?${query}`)\n    }\n\n    getRate(payload) {\n        let query = this.injectApiKey(\n            payload.query ? {\n                ...payload.query,\n                amount: 1,\n            } : {},\n            true\n        );\n\n        return this.instance.get(`estimate/${payload.currency_from}/${payload.currency_to}?${query}`, {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'accept': 'application/json',\n            }\n        })\n    }\n\n    async getExchange(payload) {\n        try {\n            const rate = await this.getRate(payload);\n            const range = await this.getRange(payload);\n            return {\n                ...rate,\n                ...range,\n            }\n        } catch(e) {\n\n            return {\n                estimated_amount: null,\n                min_amount: null,\n                max_amount: null\n            }\n        }\n    }\n\n    getRange(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`range/${payload.currency_from}/${payload.currency_to}?${query}`, {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'accept': 'application/json',\n            }\n        })\n    }\n\n\n    postNewExchange(payload) {\n        let query = this.injectApiKey({}, true);\n        return this.instance.post(`exchange?${query}`, JSON.stringify(payload.data), {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'accept': 'application/json',\n            }\n        })\n    }\n}\n","import {ParaSwap} from \"paraswap\";\nimport DEXAG from 'dexag-sdk'\n\nimport OneInchApi from \"./OneInch\";\nimport GodexApi from './Godex';\nimport DexAgApi from \"./dexAg\";\nimport SimpleSwapApi from \"./SimpleSwap\";\nimport StealthexApi from \"./Stealthex\";\n\nexport default {\n    paraswap: new ParaSwap(),\n    oneInch: new OneInchApi(),\n    godex: new GodexApi(),\n    dexag: {\n        api: new DexAgApi(),\n        sdk: DEXAG.fromProvider(window.ethereum),\n    },\n    simpleSwap: new SimpleSwapApi(),\n    stealthex: new StealthexApi()\n}","import React, {useCallback} from 'react'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport Column from '../Column'\nimport {RowBetween} from '../Row'\n\nexport const MenuItem = styled(RowBetween)`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto ;\n  grid-gap: 16px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.bg2};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\n\nconst Logo = styled.img`\n  width: ${({size}) => size ? `${size}px` : '24px'};\n  height: ${({size}) => size ? `${size}px` : '24px'};\n  border-radius: ${({size}) => size ? `${size}px` : '24px'};\n  border: 2px solid ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.text1};\n  margin-right: ${({ margin }) => margin ? '8px' : 0};\n  \n  @media (max-width: 1199px) {\n  \n      width: 24px;\n      height: 24px;\n  }\n`\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n  \n  \n  @media (max-width: 1199px) {\n    font-size: .875rem;\n    font-weight: 400;\n  }\n`\n\nconst StyledText = styled(Text)`\n  @media (max-width: 1199px) {\n    font-size: .875rem;\n    font-weight: 400;\n  }\n`\n\nfunction Symbol({ symbol }) {\n    return <StyledBalanceText>{symbol}</StyledBalanceText>\n}\n\n\nfunction CurrencyRow({\n    currency,\n    onSelect,\n    isSelected,\n    style,\n}) {\n    return (\n        <MenuItem\n            style={style}\n            className={`token-item-${currency.symbol}`}\n            onClick={() => (isSelected ? null : onSelect())}\n            disabled={isSelected}\n        >\n            <Logo src={currency.logoURI} size={24} alt={currency.symbol}/>\n            <Column>\n                <StyledText title={currency.name} fontWeight={500}>\n                    {currency.symbol}\n                </StyledText>\n            </Column>\n\n            <Column style={{ justifySelf: 'flex-end' }}>\n                <Symbol symbol={currency.name} />\n            </Column>\n        </MenuItem>\n    )\n\n}\n\nexport default function CurrencyList({\n    height,\n    currencies,\n    selectedCurrency,\n    onCurrencySelect,\n    fixedListRef,\n}) {\n\n    const Row = useCallback(\n        ({ data, index, style }) => {\n            const currency = data[index]\n            const handleSelect = () => onCurrencySelect(data[index])\n            const isSelected =  selectedCurrency ? (selectedCurrency.address === currency.address && selectedCurrency.symbol === currency.symbol) : false;\n            return (\n                <CurrencyRow\n                    style={style}\n                    currency={currency}\n                    onSelect={handleSelect}\n                    isSelected={isSelected}\n                />\n            )\n        },\n        [onCurrencySelect, selectedCurrency]\n    )\n\n    const itemKey = useCallback((index, data) => {\n        return data[index].address\n    }, [])\n\n    return (\n        <FixedSizeList\n            height={height}\n            ref={fixedListRef}\n            width=\"100%\"\n            itemData={currencies}\n            itemCount={currencies.length}\n            itemSize={56}\n            itemKey={itemKey}\n        >\n            {Row}\n        </FixedSizeList>\n    )\n}\n","import React, {useCallback, useContext, useEffect, useMemo, useRef, useState} from 'react'\nimport Modal from '../Modal'\nimport Column from \"../Column\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport CurrencyList from \"./CurrencyList\";\nimport styled, {ThemeContext} from \"styled-components\";\nimport SearchIcon from \"../../assets/images/search.svg\";\nimport { InputGroupFormControl as FormControl, InputGroup, InputGroupPrepend, InputGroupText } from \"../Form\";\nimport SVG from \"react-inlinesvg\";\n\nconst StyledColumn = styled(Column)`\n  padding: 15px;\n  @media (min-width: 991px) {\n  padding: 67px 90px 10px;\n  }\n`\n\nconst HeaderContainer = styled.div`\n  margin-bottom: 51px;\n  \n  @media (max-width: 1199px) {\n  margin-bottom: 14px;\n  }\n`\n\nexport default function SwapSelectModal({\n    isOpen,\n    onDismiss,\n    onCurrencySelect,\n    selectedCurrency,\n    currencies,\n    type\n}) {\n    const theme = useContext(ThemeContext);\n    const [searchQuery, setSearchQuery] = useState('')\n    const fixedList = useRef()\n    const inputRef = useRef();\n\n    const filteredTokens = useMemo(() => {\n        return currencies.filter(token => JSON.stringify(token).toLowerCase().includes(searchQuery) || !searchQuery);\n    }, [currencies, searchQuery])\n\n    const titles = useMemo(() => {\n        return currencies.map((token, index) => {\n            return {\n                ...token, index\n            }\n        }).filter(token => token.type === 'title');\n    }, [currencies])\n\n    useEffect(() => {\n        if (isOpen) {\n            setSearchQuery('')\n        }\n    }, [isOpen])\n\n    const handleInput = useCallback(event => {\n        const input = event.target.value\n        setSearchQuery(input.toLowerCase())\n        fixedList.current.scrollTo(0)\n    }, [])\n\n    const handleCurrencySelect = useCallback(\n        (currency) => {\n            onCurrencySelect(currency, type)\n            onDismiss()\n        },\n        [onDismiss, onCurrencySelect]\n    )\n\n\n    return (\n        <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={80} minHeight={80} maxWidth={530}>\n\n\n            <StyledColumn style={{ width: '100%', flex: '1 1', minHeight: '100px' }}>\n                <HeaderContainer>\n                    <InputGroup className={'w-auto'} bg={'darker'}>\n                        <InputGroupPrepend>\n                            <InputGroupText>\n                                <SVG src={SearchIcon}/>\n                            </InputGroupText>\n                        </InputGroupPrepend>\n                        <FormControl\n                             id=\"token-search-input\"\n                             placeholder={'Search'}\n                             value={searchQuery}\n                             ref={inputRef}\n                             onChange={handleInput}/>\n                    </InputGroup>\n\n                </HeaderContainer>\n\n\n                <div style={{ flex: '1' }}>\n                    <AutoSizer disableWidth>\n                        {({ height }) => (\n                            <CurrencyList\n                                height={height}\n                                currencies={filteredTokens}\n                                onCurrencySelect={handleCurrencySelect}\n                                selectedCurrency={selectedCurrency}\n                                fixedListRef={fixedList}\n                            />\n                        )}\n                    </AutoSizer>\n                </div>\n\n            </StyledColumn>\n        </Modal>\n    )\n}\n","import React, {useCallback, useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\n\nimport { RowBetween } from '../Row'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport {ReactComponent as DropDown} from \"../../assets/images/dropdown.svg\";\nimport SwapSelectModal from \"../SwapSelectModal\";\nimport {ETHER, Token} from \"@uniswap/sdk\";\nimport {useActiveWeb3React} from \"../../hooks\";\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\nimport {useTranslation} from \"react-i18next\";\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  \n  padding: 1rem 0 1.25rem;\n  \n  \n  @media (min-width: 768px) {\n    padding-top: 0.75rem;\n  }\n`\n\nconst Label = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-weight: 400;\n  font-size: .875rem;\n  padding: 0 ;\n  \n  @media (min-width: 768px) {\n    padding: 0 1.5rem;\n  }\n`\n\nconst Balance = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-weight: 400;\n  font-size: .75rem;\n  padding: 0 ;\n  margin-bottom: -6px;\n  \n  \n  @media (min-width: 768px) {\n  font-size: .875rem;\n  font-weight: 500;\n  margin-bottom: 0;\n  }\n  \n`\n\n\nconst InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  flex: 1;\n  \n`\n\nconst Logo = styled.img`\n  width: ${({ size }) => size || '100%'};\n  height: ${({ size }) => size || '100%'};\n  border-radius: ${({ size }) => size || '100%'};\n  border: 2px solid ${({ theme }) => theme.text1};\n  color: ${({ theme }) => theme.text1};\n  margin-right: ${({ margin }) => margin ? '8px' : 0};\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0;\n`\n\nconst StyledDropDown = styled(DropDown)`\n  margin: 0 0.25rem 0 0.5rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => theme.text1};\n    stroke-width: 1.5px;\n  }\n`\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  position: relative;\n  border-radius: 0.42rem;\n`\n\n\nconst StyledTokenName = styled.span`\n  margin-right: auto;\n  padding-left: ${({ active }) => active ? '0.625rem' : '0'};\n  font-size:  1rem;\n  \n  \n  @media (min-width: 768px) {\n  padding-left: ${({ active }) => active ? '0.75rem' : '0'};\n  }\n\n`\n\n\nconst CurrencySelect = styled.button`\n  align-items: center;\n  height: 56px;\n  font-size: 0.875rem;\n  font-weight: 500;\n  background-color: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.text1};\n  border-bottom-left-radius: 18px;\n  border-top-left-radius: 18px;\n  box-shadow: none;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0.875rem 0.625rem;\n  min-width: 116px;\n  width: 116px;\n  \n  \n  @media (min-width: 768px) {\n  min-width: 178px;\n  width: 178px;\n  padding: .625rem 1.5rem;\n  font-size: 1rem;\n  font-weight: 700;\n  }\n\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => theme.bg4};\n    outline: none;\n  }\n`\n\nexport default function SwapInputPanel({\n    value,\n    onUserInput,\n    label = 'Input',\n    onSelect,\n    disable = false,\n    selected,\n    hideInput = false,\n    id,\n    currencies,\n    type,\n    disableCurrencySelect = false,\n    onChangeBalance = (balance) => balance\n}) {\n    let currency = undefined;\n    const { t } = useTranslation();\n    if(selected) {\n        currency = new Token(selected.chainId, selected.address, selected.decimals, selected.symbol, selected.name);\n    }\n    const [modalOpen, setModalOpen] = useState(false)\n    const { account } = useActiveWeb3React()\n    const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, selected && selected.symbol === 'ETH' ? ETHER : currency)\n\n    useEffect(() => {\n        onChangeBalance(selectedCurrencyBalance)\n    }, [selected])\n\n    const handleDismissSearch = useCallback(() => {\n        setModalOpen(false)\n    }, [setModalOpen])\n\n    return (\n        <InputPanel id={id}>\n            <div>\n                {!hideInput && (\n                    <LabelRow>\n                        <RowBetween>\n                            <Label>\n                                {label}\n                            </Label>\n\n                            {account && (\n                                <Balance\n                                >\n                                  {!!currency && selectedCurrencyBalance\n                                      ? t('balance', { balanceInput: selectedCurrencyBalance?.toSignificant(6) })\n                                      : ' -'}\n                                </Balance>\n                            )}\n                        </RowBetween>\n                    </LabelRow>\n                )}\n                <InputRow style={hideInput ? { padding: '0', borderRadius: '0.42rem' } : {}} selected={disable}>\n\n                    <CurrencySelect\n                        selected={!!selected}\n                        className=\"open-currency-select-button\"\n                        onClick={() => {\n                            if (!disableCurrencySelect) {\n                                setModalOpen(true)\n                            }\n                        }}\n                    >\n                        <Aligner>\n                            {selected ? (\n                                <Logo src={selected.logoURI} size={`24px`} alt={selected.symbol}/>\n                            ) : null}\n                            <StyledTokenName className=\"token-symbol-container\" active={Boolean(selected && selected?.symbol)}>\n                                {(selected && selected?.symbol && selected?.symbol.length > 20\n                                    ? selected?.symbol.slice(0, 4) +\n                                    '...' +\n                                    selected?.symbol.slice(selected?.symbol.length - 5, selected?.symbol.length)\n                                    : selected?.symbol) || t('selectToken')}\n                            </StyledTokenName>\n                            {!disableCurrencySelect && <StyledDropDown selected={!!selected} />}\n                        </Aligner>\n                    </CurrencySelect>\n\n                    {!hideInput && (\n                        <InputContainer>\n                            <NumericalInput\n                                className=\"token-amount-input\"\n                                value={value}\n                                onUserInput={val => {\n                                    onUserInput(val, type, selectedCurrencyBalance)\n                                }}\n                            />\n                        </InputContainer>\n                    )}\n                </InputRow>\n            </div>\n\n\n            {!disableCurrencySelect && onSelect && (\n                <SwapSelectModal\n                    isOpen={modalOpen}\n                    onDismiss={handleDismissSearch}\n                    onCurrencySelect={onSelect}\n                    selectedCurrency={selected}\n                    currencies={currencies}\n                    type={type}\n                />\n            )}\n        </InputPanel>\n    )\n}\n","import React from 'react';\nimport {Row, Col, Button, ProgressBar} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport styled, {ThemeContext} from \"styled-components\";\nimport _ from 'lodash';\nimport { Text } from 'rebass'\nimport { isMobile } from 'react-device-detect';\nimport QRCode from \"react-qr-code\";\n\nimport { Modal } from '../../components/Modal/bootstrap';\nimport {ResponsiveCard} from \"../../components/Card\";\nimport withWeb3Account from \"../../components/hoc/withWeb3Account\";\nimport {\n    BTC,\n    DEXesImages,\n    DEXesName,\n    PARASWAP_REFERRER_ACCOUNT,\n    SIMPLE_SWAP_FIXED,\n    supportedDEXes,\n    ZERO\n} from \"../../constants\";\nimport InstantSwapApi from '../../http/instantSwap';\nimport SwapInputPanel from \"../../components/SwapInputPanel\";\nimport {walletTokens as tokens} from '../../constants/spot-config/mainnet/config.json';\nimport {toAbsoluteUrl} from \"../../lib/helper\";\nimport ERC20_ABI from '../../constants/abis/erc20.json';\nimport {getContract} from \"../../utils\";\nimport Page from \"../../components/Page\";\nimport Web3 from \"web3\";\nimport {RowBetween} from \"../../components/Row\";\nimport {CloseIcon, LinkStyledButton} from \"../../theme\";\nimport {toast} from \"react-hot-toast\";\nimport BigNumber from \"bignumber.js\";\nimport {assert} from \"@0x/assert\";\nimport {AbiDecoder, intervalUtils} from \"@0x/utils\";\nimport {withTranslation} from \"react-i18next\";\nimport {ArrowWrapper} from \"../../components/swap/styleds\";\nimport {ArrowDown} from \"react-feather\";\nimport AddressInputPanel from \"../../components/AddressInputPanel\";\n\nconst HEX_REGEX = /^0x[0-9A-F]*$/i;\n\nconst SwapButton = styled(Button)`\n  height: 56px;\n  min-width: 250px;\n  align-self: center;\n  \n  \n  @media (max-width: 767px) {\n    width: 100%;\n  }\n`\n\n\nconst StyledRow = styled(Row)`\n  margin-top: 86px;\n  \n  @media (max-width: 767px) {\n    margin-top: 20px;\n  }\n`\n\n\nconst CustomCard = styled(ResponsiveCard)`\n  margin-top: 70px;\n  \n  & .card-body {\n  \n    @media (min-width: 768px) {\n    \n      padding: 42px 50px 32px;\n    }\n  }\n`\n\nconst RateText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  \n  @media (max-width: 767px) {\n    font-size: 12px;\n  }\n`\n\nconst Logo = styled.img`\n  width: ${({size}) => size ? `${size}px` : '24px'};\n  height: ${({size}) => size ? `${size}px` : '24px'};\n  border-radius: ${({size}) => size ? `${size}px` : '24px'};\n  background-color: ${({ theme }) => theme.text1};\n  border: 2px solid ${({ theme }) => theme.text1};\n  margin-right: 15px;\n`\n\nconst ProgressContainer = styled.div`\n  background: rgba(135, 220, 225, 0.15);\n  border-radius: 18px;\n  padding: 26px 20px;\n  margin-top: 10px;\n  \n  .progress {\n    height: 5px;\n    background-color: rgba(135, 220, 225, 0.15);\n    border-radius: 15px;\n    \n    &-bar {\n      border-radius: 15px;\n    }\n  }\n`\n\nconst PlatformCard = styled.div`\n  padding: 8px 8px 8px 20px;\n  border-radius: 18px;\n  background-color: ${({ selected, theme }) => selected ? theme.bg2 : 'rgba(135, 220, 225, 0.15)'};\n  margin-bottom: 10px;\n  min-height: 56px;\n  border: 1px solid ${({theme, selected}) => selected ? theme.primary : 'transparent'};\n  transition: all ease 0.4s;\n  cursor: pointer;\n  \n  \n  &:hover {\n    background-color: ${({theme}) => theme.bg2};\n    border-color: ${({theme}) => theme.primary};\n  }\n  \n  @media (max-width: 767px) {\n    padding: 8px 8px 8px 10px;\n  }\n`\n\n\nconst SwitchCol = styled(Col)`\n  margin-bottom: 1.5rem;\n  \n  @media (min-width: 768px) {\n    margin-bottom: 2.5rem;\n  }\n`\n\nconst PATTERN = {\n    btc: /^[13][a-km-zA-HJ-NP-Z1-9]{25,80}$|^(bc1)[0-9A-Za-z]{25,80}$/,\n    eth: /^(0x[a-fA-F0-9]{40})$/,\n    usdt: /^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$/,\n    global: /^[13][a-km-zA-HJ-NP-Z1-9]{25,80}$|^(bc1)[0-9A-Za-z]{25,80}$|^(0x[a-fA-F0-9]{40})$|^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$/\n}\n\nclass InstantSwap extends React.Component {\n    static contextType = ThemeContext\n\n    constructor(props) {\n        super(props);\n        this.web3 = new Web3(Web3.givenProvider || process.env.REACT_APP_WSS_URL)\n        this.api = InstantSwapApi;\n        this.typeTimeout = undefined;\n        this.isExchangeInProgress = false;\n        this.abiDecoder = new AbiDecoder([]);\n\n        this.state = {\n            loading: false,\n            loadingState: {\n                all: 36,\n                loaded: 0,\n            },\n            tokens: [],\n            pair: {\n                deposit: {\n                    token: null,\n                    value: '',\n                },\n                destination: {\n                    token: null,\n                    value: '',\n                },\n            },\n            hasEnoughBalance: true,\n            rates: [],\n            rate: undefined,\n            showMore: false,\n            buyState: 'not_started',\n            max: 0,\n            showQrModal: false,\n            orderType: null,\n            order: {},\n            recipient: null\n        }\n    }\n\n    getBuyStates = () => {\n        const { t } = this.props;\n        return {\n            'not_started': t('instantSwap.not_started'),\n            'initializing': t('instantSwap.initializing'),\n            'allowance': t('instantSwap.allowance'),\n            'approving': t('instantSwap.approving'),\n            'validation': t('instantSwap.validation'),\n            'create_tx': t('instantSwap.create_tx'),\n            'send_tx': t('instantSwap.send_tx'),\n            'submitted': t('instantSwap.submitted'),\n            'pending': t('instantSwap.pending'),\n            'failed': t('instantSwap.failed'),\n        }\n    }\n\n    isHexString(str) {\n        if(HEX_REGEX.test(str)) {\n            return true;\n        } else {\n            throw new Error('Entered value isn\\'t hex string');\n        }\n    }\n\n    async awaitTransactionMinedAsync(\n        txHash,\n        pollingIntervalMs = 1000,\n        timeoutMs = 30000,\n    ) {\n        this.isHexString(txHash);\n        assert.isNumber('pollingIntervalMs', pollingIntervalMs);\n        if (timeoutMs !== undefined) {\n            assert.isNumber('timeoutMs', timeoutMs);\n        }\n        // Immediately check if the transaction has already been mined.\n        let transactionReceipt = await this.props.web3.library.getTransactionReceipt(txHash);\n        if (transactionReceipt !== undefined) {\n            const logsWithDecodedArgs = _.map(\n                transactionReceipt.logs,\n                this.abiDecoder.tryToDecodeLogOrNoop.bind(this.abiDecoder),\n            );\n            const transactionReceiptWithDecodedLogArgs = {\n                ...transactionReceipt,\n                logs: logsWithDecodedArgs,\n            };\n            return transactionReceiptWithDecodedLogArgs;\n        }\n\n        // Otherwise, check again every pollingIntervalMs.\n        let wasTimeoutExceeded = false;\n        if (timeoutMs) {\n            setTimeout(() => (wasTimeoutExceeded = true), timeoutMs);\n        }\n\n        const txReceiptPromise = new Promise(\n            (resolve, reject) => {\n                const intervalId = intervalUtils.setAsyncExcludingInterval(\n                    async () => {\n                        if (wasTimeoutExceeded) {\n                            intervalUtils.clearAsyncExcludingInterval(intervalId);\n                            return reject({\n                                code: 'timeout',\n                                message: 'Timeout'\n                            });\n                        }\n\n                        transactionReceipt = await this.props.web3.library.getTransactionReceipt(txHash);\n                        if (transactionReceipt !== undefined) {\n                            intervalUtils.clearAsyncExcludingInterval(intervalId);\n                            const logsWithDecodedArgs = _.map(\n                                transactionReceipt.logs,\n                                this.abiDecoder.tryToDecodeLogOrNoop.bind(this.abiDecoder),\n                            );\n                            const transactionReceiptWithDecodedLogArgs = {\n                                ...transactionReceipt,\n                                logs: logsWithDecodedArgs,\n                            };\n                            resolve(transactionReceiptWithDecodedLogArgs);\n                        }\n                    },\n                    pollingIntervalMs,\n                    (err) => {\n                        intervalUtils.clearAsyncExcludingInterval(intervalId);\n                        reject(err);\n                    },\n                );\n            },\n        );\n        const txReceipt = await txReceiptPromise;\n        return txReceipt;\n    }\n\n    async awaitTransactionSuccessAsync(\n        txHash,\n        pollingIntervalMs = 1000,\n        timeoutMs,\n    ) {\n        const receipt = await this.awaitTransactionMinedAsync(txHash, pollingIntervalMs, timeoutMs);\n        if (receipt.status !== 1) {\n            throw new Error(this.props.t('errors.invalidHexString'));\n        }\n        return receipt;\n    }\n\n    onChangeBalance = (balance) => {\n        this.setState({\n            max: balance,\n        })\n    }\n\n    promiseHandler = (callback) => {\n        return new Promise((resolve) => {\n            callback()\n                .then(response => resolve(response))\n                .catch(error => resolve(undefined));\n        })\n    }\n\n    getParaswapSortedRates = rates => {\n        return _.orderBy(rates.others, ['rate'], ['desc'])\n    }\n\n    getDexagSortedRates = rates => {\n        return _.orderBy(rates, ['price'], ['desc'])\n    }\n\n    getSortedRates = (response, type) => {\n        if(!response) return [];\n        switch(type) {\n            case 'paraswap': {\n                return this.getParaswapSortedRates(response);\n            }\n            case 'dexag': {\n                return this.getDexagSortedRates(response);\n            }\n            default: {\n                return response.hasOwnProperty('data') ? response.data : response;\n            }\n        }\n    }\n\n    transformRates = (rates) => {\n        let result = [];\n        for(let i in rates) {\n            const key = rates[i][0];\n            const apiRates = rates[i][1];\n            switch(key) {\n                case '1inch': {\n                    if(apiRates && typeof apiRates.toTokenAmount === 'string') {\n                        result.push({\n                            rate: apiRates.toTokenAmount / (10 ** this.state.pair.destination.token.decimals),\n                            platform: 'oneInch',\n                            source: '1inch',\n                        })\n                    }\n                    break;\n                }\n                case 'paraswap': {\n                    if(apiRates) {\n\n                        apiRates.forEach(rate => {\n                            if(supportedDEXes['paraswap'].includes(rate.exchange)) {\n                                result.push({\n                                    rate: rate.unit / (10 ** this.state.pair.destination.token.decimals),\n                                    platform: rate.exchange,\n                                    source: 'paraswap',\n                                })\n                            }\n                        })\n                    }\n                    break;\n                }\n                case 'dexag': {\n                    if(apiRates) {\n\n                        apiRates.forEach(rate => {\n                            if(supportedDEXes['dexag'].includes(rate.dex)) {\n                                result.push({\n                                    rate: Number(rate.price),\n                                    platform: rate.dex,\n                                    source: 'dexag',\n                                })\n                            }\n                        })\n                    }\n                    break;\n                }\n                case 'simpleSwap': {\n                    if(apiRates.rate !== null) {\n                        result.push({\n                            rate: Number(apiRates.rate),\n                            min: Number(apiRates.min || 0),\n                            max: Number(apiRates.max || 0),\n                            platform: 'simpleSwap',\n                            source: 'simpleSwap',\n                        })\n                    }\n                    break;\n                }\n                case 'stealthex': {\n                    if(apiRates.estimated_amount !== null) {\n                        result.push({\n                            rate: Number(apiRates.estimated_amount),\n                            min: Number(apiRates.min_amount || 0),\n                            max: Number(apiRates.max_amount || 0),\n                            platform: 'stealthex',\n                            source: 'stealthex',\n                        })\n                    }\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    getSortedResult = (response) => {\n        let sortedParts = Object.keys(response).map(key => [key, this.getSortedRates(response[key], key)]);\n        let transformedRates = this.transformRates(sortedParts);\n        return _.sortBy(transformedRates, (o) => -o.rate);\n    }\n\n    fetchPrices = async (pair) => {\n        const { t } = this.props;\n        let { deposit, destination } = pair;\n\n        if(deposit.token !== null && destination.token !== null) {\n            this.setState({\n                loading: true,\n                loadingState: {\n                    all: 36,\n                    loaded: 0,\n                }\n            })\n            let fromAmount = (10 ** deposit.token.decimals);\n\n            let dexagParams = {\n                to: destination.token.symbol,\n                from: deposit.token.symbol,\n                dex: 'all',\n                fromAmount: 1\n            }\n\n            let oneInch = await this.promiseHandler(() => this.api.oneInch.get('quote', {\n                fromTokenAddress: deposit.token.address,\n                toTokenAddress: destination.token.address,\n                amount: fromAmount,\n            }))\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 14,\n                }\n            })\n\n            let paraswap = await this.promiseHandler(() => this.api.paraswap.getRate(deposit.token.address, destination.token.address, fromAmount));\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 20,\n                }\n            })\n\n            let dexag = await this.promiseHandler(() => this.api.dexag.sdk.getPrice(dexagParams))\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 28,\n                }\n            })\n            let godex = await this.promiseHandler(() => this.api.godex.get('rate', {\n                to: destination.token.symbol,\n                from: deposit.token.symbol,\n                amount: 1,\n            }))\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 30,\n                }\n            })\n\n            let simpleSwap = await this.promiseHandler(() => this.api.simpleSwap.get('exchange', {\n                query: {\n                    fixed: SIMPLE_SWAP_FIXED,\n                    currency_from: deposit.token.symbol.toLowerCase(),\n                    currency_to: destination.token.symbol.toLowerCase()\n                }\n            }))\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 32,\n                }\n            })\n\n            let stealthex = await this.promiseHandler(() => this.api.stealthex.get('exchange', {\n                query: {},\n                currency_from: deposit.token.symbol.toLowerCase(),\n                currency_to: destination.token.symbol.toLowerCase()\n            }))\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 36,\n                }\n            })\n\n\n            let response = {\n                '1inch': oneInch,\n                'paraswap': paraswap,\n                'dexag': dexag,\n                'godex': godex,\n                'simpleSwap': simpleSwap,\n                'stealthex': stealthex\n            }\n\n            let result = this.getSortedResult(response);\n\n            if(result.length > 0) {\n                if(deposit.value) {\n                    pair.destination.value = (deposit.value * result[0].rate).toFixed(6);\n                } else if(destination.value) {\n                    pair.deposit.value = (destination.value / result[0].rate).toFixed(6);\n                }\n            } else {\n                toast.error(t('errors.unavailablePair'))\n            }\n\n\n            this.setState({\n                pair,\n                rates: result,\n                rate: result.length > 0 ? result[0] : undefined,\n                loading: false,\n                showMore: false,\n                hasEnoughBalance: !this.state.max || Number(pair.deposit.value) <= Number(this.state.max.toSignificant(6))\n            })\n\n        } else {\n            this.setState({\n                pair,\n                showMore: false\n            })\n        }\n    }\n\n    onSelect = async (token, type) => {\n        let pair = this.state.pair;\n\n        pair[type].token = token;\n        this.setState({\n            pair\n        }, this.fetchPrices.bind(this, this.state.pair))\n    }\n\n    onSwapTokens = () => {\n        let pair;\n        this.setState(prevState => {\n            pair = {\n                deposit: {\n                    ...prevState.pair.destination,\n                },\n                destination: {\n                    ...prevState.pair.deposit,\n                }\n            }\n            return {\n                pair\n            }\n        }, () => this.fetchPrices(pair));\n    }\n\n    onUserInputHandler = (value, type, max) => {\n        this.setState(prevState => {\n            const pair = prevState.pair;\n            pair[type].value = value;\n            if(prevState.rate) {\n                if(type === 'deposit') {\n                    pair.destination.value = (value * prevState.rate.rate).toFixed(6);\n                } else if(type === 'destination') {\n                    pair.deposit.value = (value / prevState.rate.rate).toFixed(6);\n                }\n            }\n            return {\n                pair,\n                hasEnoughBalance: !max || Number(value) <= Number(max.toSignificant(6))\n            }\n        })\n    }\n\n    selectRate = (rate) => {\n        this.setState(prevState => {\n            let pair = {\n                ...prevState.pair\n            };\n            if(pair.deposit.value) {\n                pair.destination.value = (pair.deposit.value * rate.rate).toFixed(6);\n            } else if(pair.destination.value) {\n                pair.deposit.value = (pair.destination.value / rate.rate).toFixed(6);\n            }\n\n            return {\n                pair,\n                rate\n            }\n        })\n    }\n\n    setBuyState = (state = 'not_started') => {\n        this.setState({\n            buyState: state,\n        })\n    }\n\n    setDefaultBuyState = () => {\n        setTimeout(this.setBuyState, 4000)\n    }\n\n    oneInchBuyHandler = async (pair, rate) => {\n        const { t } = this.props;\n        try {\n            let canExchange = false;\n            this.setBuyState('initializing')\n            let { deposit, destination } = pair;\n            let allowance = ZERO;\n\n            const spenderRes = await this.api.oneInch.get('spender');\n            const spender = spenderRes.data.address;\n\n            let fromAmount = new BigNumber(deposit.value).times(10 ** deposit.token.decimals);\n\n            if(deposit.token.symbol.toUpperCase() !== 'ETH') {\n                this.setBuyState('allowance')\n\n                let contract = getContract(deposit.token.address, ERC20_ABI, this.props.web3.library, this.props.web3.account);\n\n                allowance = await contract.functions.allowance(this.props.web3.account, spender);\n                allowance = new BigNumber(allowance);\n\n                if(fromAmount.isGreaterThan(allowance)) {\n                    this.setBuyState('approving')\n\n                    const maxAllowance = new BigNumber(2).pow(256).minus(1);\n                    let approve = await contract.functions.approve(spender, maxAllowance.toFixed(0));\n\n                    if(approve) {\n                        let txn;\n                        try {\n                            txn = await this.awaitTransactionSuccessAsync(approve.hash);\n                        } catch(e) {\n                            canExchange = true;\n                        }\n\n                        if(txn) {\n                            canExchange = true;\n                        }\n                    }\n                } else {\n                    canExchange = true;\n                }\n            } else {\n                canExchange = true;\n            }\n\n            if(canExchange) {\n                this.setBuyState('create_tx')\n\n                const res = await this.api.oneInch.get('swap', {\n                    fromTokenAddress: deposit.token.address,\n                    toTokenAddress: destination.token.address,\n                    amount: fromAmount.toFixed(0),\n                    fromAddress: this.props.web3.account,\n                    slippage: this.props.slippage / 100,\n                    destReceiver: this.state.recipient !== null ? this.state.recipient : undefined\n                })\n                const tx = res.data.tx;\n\n                this.setBuyState('send_tx')\n\n                this.web3.eth.sendTransaction(tx, async (err, transactionHash) => {\n                    if (err) {\n                        this.setBuyState('failed')\n\n                        this.setDefaultBuyState()\n\n                        if(err.code === 4001){\n                            toast.error(t('errors.canceled'))\n                        } else {\n                            toast.error(t('errors.default'))\n                        }\n                        this.isExchangeInProgress = false;\n                        return false;\n                    }\n\n                    this.setBuyState('submitted')\n\n                    this.setDefaultBuyState()\n                    this.isExchangeInProgress = false;\n                    toast.success(t('instantSwap.orderSubmitted'));\n                    if(typeof transactionHash === 'string') {\n                        window.open(`https://etherscan.io/tx/${transactionHash}`, '_blank');\n                    }\n\n                });\n            } else {\n                toast.error(t('errors.approvalPending'));\n            }\n            this.isExchangeInProgress = false;\n\n        } catch(e) {\n            this.setBuyState('failed')\n\n            this.setDefaultBuyState()\n\n            this.isExchangeInProgress = false;\n\n            if(e.hasOwnProperty('code')) {\n                if(e.code === 4001) {\n                    toast.error(t('errors.canceled'))\n                } else {\n                    toast.error(t('errors.default'))\n                }\n            } else {\n                if(e.hasOwnProperty('response')) {\n                    if(e.response.status === 500) {\n                        if(e.response.data.hasOwnProperty('errors')) {\n                            e.response.data.errors.map(err => {\n                                toast.error(err.msg);\n                            })\n                        } else {\n                            toast.error(t('errors.unavailablePair'))\n                        }\n                    } else {\n                        toast.error(t('errors.default'))\n                    }\n                } else {\n                    toast.error(t('errors.default'))\n                }\n            }\n        }\n    }\n\n    paraSwapBuyHandler = async (pair, rate) => {\n        const { t } = this.props;\n        const { recipient } = this.state;\n        try {\n            this.setBuyState('initializing')\n\n            let { deposit, destination } = pair;\n            let canExchange = false;\n            const paraswap = this.api.paraswap.setWeb3Provider(this.web3.currentProvider);\n\n            let fromAmount = new BigNumber(deposit.value).times(10 ** deposit.token.decimals);\n            let toAmount = new BigNumber(destination.value).times(10 ** destination.token.decimals);\n\n            this.setBuyState('allowance')\n            const allowanceRes = await paraswap.getAllowance(this.props.web3.account, deposit.token.address);\n            let allowance = new BigNumber(allowanceRes.allowance);\n            if(deposit.token.symbol !== 'ETH' && fromAmount.isGreaterThan(allowance)) {\n                const maxAllowance = new BigNumber(2).pow(256).minus(1);\n                this.setBuyState('approving')\n                try {\n                    const approve = await paraswap.approveToken(maxAllowance.toFixed(), this.props.web3.account, deposit.token.address);\n                    canExchange = true;\n                    let txn;\n\n                    try {\n                        txn = await this.awaitTransactionSuccessAsync(approve);\n                        if(txn) {\n                            if(typeof approve === 'string') {\n                                window.open(`https://etherscan.io/tx/${approve}`, '_blank')\n                            }\n                            canExchange = true;\n                        }\n                    } catch(e) {\n                        canExchange = true;\n                    }\n                } catch(e) {\n                    canExchange = false;\n                }\n            } else {\n                canExchange = true;\n            }\n\n            if(canExchange) {\n                this.setBuyState('create_tx')\n                const rates = await paraswap.getRate(deposit.token.address, destination.token.address, fromAmount.toFixed(0));\n                const selectedRoute = rates.others.find(item => item.exchange === rate.platform);\n                const txRoute = [\n                    {\n                        ...rates.bestRoute[0],\n                        ...selectedRoute\n                    }\n                ]\n                rates.bestRoute = txRoute;\n                const txParams = await paraswap.buildTx(\n                    deposit.token.address,\n                    destination.token.address,\n                    fromAmount.toFixed(0),\n                    toAmount.toFixed(0),\n                    rates,\n                    this.props.web3.account,\n                    PARASWAP_REFERRER_ACCOUNT,\n                    recipient !== null ? recipient : undefined\n                );\n\n\n                this.setBuyState('send_tx')\n\n                if(txParams?.message) {\n                    toast.error(txParams.message);\n\n                    this.setBuyState('failed');\n                    this.setDefaultBuyState();\n\n                    return false;\n                }\n\n                this.web3.eth.sendTransaction(txParams, async (err, transactionHash) => {\n                    if (err) {\n                        this.setBuyState('failed')\n\n                        this.setDefaultBuyState()\n\n                        if(err.code === 4001){\n                            toast.error(t('errors.canceled'))\n                        } else {\n                            toast.error(t('errors.default'))\n                        }\n\n                        this.isExchangeInProgress = false;\n                        return false;\n                    }\n                    this.setBuyState('submitted')\n\n                    this.setDefaultBuyState()\n                    this.isExchangeInProgress = false;\n                    toast.success(t('instantSwap.orderSubmitted'));\n                    if(typeof transactionHash === 'string') {\n                        window.open(`https://etherscan.io/tx/${transactionHash}`, '_blank');\n                    }\n                });\n            } else {\n                this.setBuyState('pending')\n\n                this.setDefaultBuyState()\n            }\n        } catch(e) {\n            this.setBuyState('failed')\n\n            this.setDefaultBuyState()\n\n            if(e.hasOwnProperty('code')) {\n                if(e.code === 4001) {\n                    toast.error(t('errors.canceled'))\n                } else {\n                    toast.error(t('errors.default'))\n                }\n            } else {\n                toast.error(t('errors.default'))\n            }\n            this.isExchangeInProgress = false;\n        }\n    }\n\n    dexagBuyHandler = async (pair, rate) => {\n        let valid = false;\n        const { t } = this.props;\n        try {\n            this.setBuyState('initializing')\n\n            let { deposit, destination } = pair;\n\n            const {sdk, api} = this.api.dexag;\n            sdk.registerStatusHandler((status, data) => {\n                switch(status) {\n                    case 'rejected': {\n                        this.setBuyState('failed')\n                        this.setDefaultBuyState()\n                        toast.error(t('errors.failedTxn'));\n                        break;\n                    }\n                    case 'network': {\n                        toast.error(t('errors.wrongNetwork'))\n                        break;\n                    }\n                    case 'send_trade': {\n                        this.setBuyState('submitted')\n                        this.setDefaultBuyState()\n\n                        if(typeof data === 'string') {\n                            window.open(`https://etherscan.io/tx/${data}`, '_blank');\n                        }\n                        break;\n                    }\n                    case 'failed': {\n                        this.setBuyState('failed')\n                        this.setDefaultBuyState()\n                        toast.error(t('errors.failedTxn'));\n                        break;\n                    }\n                    case 'bad_tx': {\n                        this.setBuyState('failed')\n                        this.setDefaultBuyState()\n                        toast.error(t('errors.insufficientGas'));\n                        break;\n                    }\n                }\n            });\n\n            this.setBuyState('create_tx')\n            const tx = await api.get('trade', {\n                params: {\n                    to: destination.token.symbol,\n                    from: deposit.token.symbol,\n                    fromAmount: deposit.value,\n                    dex: rate.platform,\n                    recipient: this.state.recipient !== null ? this.state.recipient : undefined\n                }\n            });\n\n\n            this.setBuyState('validation')\n            valid = await sdk.validate(tx);\n\n            console.log(valid);\n\n            if (valid) {\n                const { query } = tx?.metadata;\n                const details = {\n                    pair: {\n                        base:query.to,\n                        quote:query.from\n                    },\n                    amount: query.fromAmount||query.toAmount,\n                    dex: query.dex,\n                    isBuying: true\n                };\n                sdk.sendTrade(tx, details);\n            } else {\n                this.setBuyState('failed')\n                this.setDefaultBuyState()\n                toast.error(t('errors.instantSwapInvalidTxn'))\n            }\n\n        } catch(e) {\n            this.setBuyState('failed')\n            this.setDefaultBuyState()\n\n            if(e.hasOwnProperty('code')) {\n                if(e.code !== 4001) {\n                    toast.error(t('errors.default'))\n                }\n\n                if(!valid) {\n                    toast.error(t('errors.instantSwapInvalidTxn'))\n                }\n            } else {\n\n                if(!valid) {\n                    toast.error(t('errors.instantSwapInvalidTxn'))\n                }\n                toast.error(t('errors.default'))\n            }\n\n            this.isExchangeInProgress = false;\n        }\n\n    }\n\n    simpleSwapBuyHandler = async (pair, rate) => {\n        try {\n            this.setBuyState('initializing')\n            let { deposit, destination } = pair;\n\n\n            this.setBuyState('validation')\n            if(deposit.value < rate.min || (rate.max > 0 && deposit.value >= rate.max)) {\n                toast.error(deposit.value < rate.min ? `The minimum value for this transaction is ${rate.min}` : `The maximum value for this transaction is ${rate.max}`)\n                this.setBuyState('failed')\n                this.setDefaultBuyState()\n                return;\n            }\n\n            this.setBuyState('create_tx')\n            const res = await this.api.simpleSwap.set('exchange', {\n                data: {\n                    fixed: SIMPLE_SWAP_FIXED,\n                    currency_from: deposit.token.symbol.toLowerCase(),\n                    currency_to: destination.token.symbol.toLowerCase(),\n                    amount: deposit.value,\n                    address_to: this.state.recipient !== null ? this.state.recipient : this.props.web3.account,\n                }\n            })\n\n            if(res) {\n                if(res.code && res.code !== 200) {\n                    toast.error(res.message);\n                } else {\n                    toast.success('Your order submitted successfully!')\n                    this.setBuyState('submitted')\n                    this.setState({\n                        showQrModal: true,\n                        orderType: 'simpleSwap',\n                        order: res,\n                    })\n                    this.setDefaultBuyState()\n                }\n            }\n\n        } catch(e) {\n            toast.error('An Error was occurred')\n            this.setBuyState('failed')\n            this.setDefaultBuyState()\n        }\n    }\n\n    stealthexBuyHandler = async (pair, rate) => {\n        const { t } = this.props;\n        try {\n            this.setBuyState('initializing')\n            let { deposit, destination } = pair;\n\n\n            this.setBuyState('validation')\n            if(deposit.value < rate.min || (rate.max > 0 && deposit.value >= rate.max)) {\n                toast.error(deposit.value < rate.min ? `${t('errors.min')} ${rate.min}` : `${t('errors.max')} ${rate.max}`)\n                this.setBuyState('failed')\n                this.setDefaultBuyState()\n                return;\n            }\n\n            this.setBuyState('create_tx')\n            const res = await this.api.stealthex.set('exchange', {\n                data: {\n                    currency_from: deposit.token.symbol.toLowerCase(),\n                    currency_to: destination.token.symbol.toLowerCase(),\n                    amount_from: deposit.value,\n                    address_to: this.state.recipient !== null ? this.state.recipient : this.props.web3.account,\n                }\n            })\n\n            if(res) {\n                if(res?.code && res?.code !== 200) {\n                    toast.error(res?.message || t('errors.default'));\n                } else {\n                    toast.success(t('instantSwap.orderSubmitted'))\n                    this.setBuyState('submitted')\n                    this.setState({\n                        showQrModal: true,\n                        orderType: 'stealthex',\n                        order: res,\n                    })\n                    this.setDefaultBuyState()\n                }\n            }\n\n        } catch(e) {\n            console.log(e);\n            toast.error('An Error was occurred')\n            this.setBuyState('failed')\n            this.setDefaultBuyState()\n        }\n    }\n\n    buyHandler = async () => {\n        if(!this.props.web3.account) {\n            this.props.toggleWalletModal();\n        } else {\n            if(!this.isExchangeInProgress) {\n                this.isExchangeInProgress = true;\n\n                const { t } = this.props;\n                const { pair, rate, recipient } = this.state;\n                let result;\n\n                if(pair.destination.token.symbol.toUpperCase() === 'BTC') {\n                    if(recipient === null) {\n                        toast.error(t('errors.requiredAddress'))\n                        this.isExchangeInProgress = false;\n                        return false;\n                    } else if(!PATTERN.btc.test(recipient)) {\n                        toast.error(t('errors.invalidAddress'))\n                        this.isExchangeInProgress = false;\n                        return false;\n                    }\n                }\n\n                if(recipient !== null && !PATTERN.global.test(recipient)) {\n                    toast.error(t('errors.invalidAddress'))\n                    this.isExchangeInProgress = false;\n                    return false;\n                }\n\n                switch(rate.source) {\n                    case '1inch': {\n                        result = await this.oneInchBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'paraswap': {\n                        result = await this.paraSwapBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'dexag': {\n                        result = await this.dexagBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'simpleSwap': {\n                        result = await this.simpleSwapBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'stealthex': {\n                        result = await this.stealthexBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'godex': {\n                        result = await this.godexBuyHandler(pair, rate);\n                        break;\n                    }\n                }\n\n                this.isExchangeInProgress = false;\n            }\n        }\n\n    }\n    toggleShowMore = () => {\n        this.setState(prevState => {\n            return {\n                showMore: !prevState.showMore,\n            }\n        })\n    }\n\n    onChangeRecipient = (value) => {\n        this.setState({\n            recipient: value,\n        })\n    }\n\n    render() {\n        const {pair, rate, hasEnoughBalance, rates, loading, loadingState, buyState, recipient} = this.state;\n        const { t } = this.props;\n        const theme = this.context;\n\n        return (\n            <Page>\n                <StyledRow>\n                    <Col xs={12} md={{ offset: 3, span: 6}}>\n                        <CustomCard>\n                            <Row>\n                                <Col xs={12} style={{ marginBottom: 20 }}>\n                                    <SwapInputPanel\n                                        value={pair.deposit.value}\n                                        onUserInput={this.onUserInputHandler}\n                                        label={t('instantSwap.fromLabel')}\n                                        onSelect={this.onSelect}\n                                        selected={pair.deposit.token}\n                                        currencies={tokens}\n                                        type={'deposit'}\n                                        id={'deposit'}\n                                        onChangeBalance={this.onChangeBalance}\n                                    />\n                                </Col>\n\n                                <SwitchCol xs={12} className={'d-flex align-items-center justify-content-between'}>\n                                    <ArrowWrapper clickable style={{ padding: '2px 16px'}}>\n                                        <ArrowDown\n                                            size=\"16\"\n                                            color={theme.text2}\n                                        />\n                                    </ArrowWrapper>\n                                    {recipient === null && (\n                                        <LinkStyledButton id=\"add-recipient-button\" onClick={() => this.onChangeRecipient('')}>\n                                            + {t('addSend')} ({t('optional')})\n                                        </LinkStyledButton>\n                                    )}\n                                </SwitchCol>\n                                <Col xs={12} className={'gutter-b'} style={{ marginBottom: !rate ? '40px' : '0'}}>\n                                    <SwapInputPanel\n                                        value={pair.destination.value}\n                                        onUserInput={this.onUserInputHandler}\n                                        label={t('instantSwap.toLabel') + \" (\" + t('estimated') + \")\"}\n                                        onSelect={this.onSelect}\n                                        selected={pair.destination.token}\n                                        currencies={tokens.concat(BTC)}\n                                        type={'destination'}\n                                        id={'destination'}\n                                    />\n                                </Col>\n\n                                {recipient !== null && (\n                                    <>\n                                        <SwitchCol xs={12} className={'d-flex align-items-center justify-content-between'}>\n\n                                            <ArrowWrapper clickable style={{ padding: '2px 16px'}}>\n                                                <ArrowDown\n                                                    size=\"16\"\n                                                    color={theme.text2}\n                                                />\n                                            </ArrowWrapper>\n                                            <LinkStyledButton id=\"add-recipient-button\" onClick={() => this.onChangeRecipient(null)}>\n                                                - {t('removeSend')}\n                                            </LinkStyledButton>\n                                        </SwitchCol>\n                                        <Col xs={12}>\n                                            <AddressInputPanel id=\"recipient\" value={recipient} onChange={this.onChangeRecipient} />\n                                        </Col>\n                                    </>\n                                )}\n                                {!!rate ? (\n                                    <Col xs={12} className={'d-flex justify-content-between align-items-center gutter-b'} style={{ marginBottom: 60 }}>\n                                        <RateText fontWeight={400} fontSize={isMobile ? 12 : 14}>\n                                            Exchange Rate\n                                        </RateText>\n                                        <RateText fontWeight={isMobile ? 400 : 500} fontSize={isMobile ? 12 : 16}>\n                                            {pair.deposit.token && pair.destination.token ? `1 ${pair.deposit.token.symbol || pair.deposit.token.code} = ${rate.rate.toFixed(4)} ${pair.destination.token.symbol || pair.destination.token.code}` : null}\n                                        </RateText>\n                                    </Col>\n                                ) : ''}\n\n                                <Col xs={12} className={'d-flex flex-column align-items-stretch align-items-md-center justify-content-center'}>\n                                    {loading  ? (\n                                        <div className={`d-flex flex-column align-items-stretch justify-content-center align-self-stretch`}>\n                                            <RateText\n                                                fontWeight={400}\n                                                fontSize={isMobile ? 12 : 16}\n                                            >\n                                                {t('instantSwap.exchangeSearch', {\n                                                    loaded: loadingState.loaded,\n                                                    all: loadingState.all\n                                                })}\n                                            </RateText>\n                                            <ProgressContainer>\n                                                <ProgressBar\n                                                    now={(loadingState.loaded / loadingState.all * 100).toFixed(0)}\n                                                    variant={loadingState.loaded === loadingState.all ? 'success' : 'primary'}\n                                                    className={'align-self-stretch w-100 progress-xs'} />\n                                            </ProgressContainer>\n\n                                        </div>\n                                    ) : (\n                                        <SwapButton\n                                                onClick={this.buyHandler}\n                                                className={'py-3'}\n                                                disabled={this.props.web3.account && (!(pair.deposit.token && pair.destination.token && pair.deposit.value && hasEnoughBalance && pair.destination.value && Number(pair.deposit.value) > 0 && rate) || rate.platform === 'godex')}\n                                                variant={\n                                                    pair.deposit.token && pair.destination.token && pair.deposit.value && pair.destination.value && hasEnoughBalance && Number(pair.deposit.value) > 0 && rate ? 'primary' : 'outline-primary'\n                                                }\n                                        >\n                                            {\n                                                !this.props.web3.account ? t('wallet.connect') :\n                                                !pair.deposit.token || !pair.destination.token ? t('exchange.selectPair') :\n                                                    !hasEnoughBalance ? t('insufficientBalance') :\n                                                        !pair.deposit.value || !pair.destination.value ? t('exchange.enterAmount') :\n                                                            !rate && !loading ? t('errors.unavailablePair') :\n                                                                rate.platform === 'godex' ? t('errors.unavailablePair') :\n                                                                    Number(pair.deposit.value) > 0 ? this.getBuyStates()[buyState] : t('exchange.enterAmount')\n                                            }\n                                        </SwapButton>\n                                    )}\n\n                                </Col>\n                                {rates.length > 0 && !loading && (\n                                    <Col xs={12} className={'d-flex flex-column'} style={{ marginTop: 36 }}>\n                                        {rates.map((item, index) => {\n                                            return (\n                                                <PlatformCard selected={item?.platform === rate?.platform} key={`show-all-${item.platform}`} onClick={this.selectRate.bind(this, item)} className={`d-flex align-items-center justify-content-between`}>\n                                                    <div className={'d-flex align-items-center'} style={{ flex: 1}}>\n                                                        <Logo src={toAbsoluteUrl(`/media/dex/${DEXesImages[item.platform]}`)} size={30} alt={item.platform}/>\n                                                        <RateText fontSize={isMobile ? 12 : 16} fontWeight={isMobile ? 400 : 500} style={{ flex: 1}}>\n                                                            {DEXesName[item.platform]}\n                                                        </RateText>\n                                                    </div>\n\n                                                    <div className={'d-flex flex-row align-items-center justify-content-center'} style={{ flex: 1}}>\n                                                        <RateText fontWeight={500} fontSize={isMobile ? 12 : 16} className={isMobile ? 'mr-2' : 'mr-3'}>\n                                                            {item.rate.toFixed(6)} {pair.destination.token.symbol}/{pair.deposit.token.symbol}\n                                                        </RateText>\n                                                        {index === 0 ? (\n                                                            <span className=\"label label-inline label-lg label-light-primary\">{t('best')}</span>\n                                                        ) : (\n                                                            <span style={{ display: 'block', flexBasis: 55, minWidth: 55}}/>\n                                                        )}\n                                                    </div>\n                                                </PlatformCard>\n                                            )\n                                        })}\n                                    </Col>\n                                )}\n                            </Row>\n                        </CustomCard>\n                    </Col>\n                </StyledRow>\n                <Modal\n                    show={this.state.showQrModal}\n                    centered\n                    onHide={() => {\n                        this.setState({\n                            showQrModal: false,\n                        })\n                    }}\n                    size={'lg'}\n                >\n                    <Modal.Body className={'d-flex flex-column'} style={{ minHeight: 480, padding: '30px 60px' }}>\n                        <RowBetween style={{ padding: '8px 0 24px' }}>\n                            <div />\n                            <CloseIcon onClick={() => {\n                                this.setState({\n                                    showQrModal: false,\n                                })\n                            }} />\n                        </RowBetween>\n                        {this.state.orderType !== null && (\n                            <div className=\"d-flex flex-column flex-grow-1 justify-content-start align-items-center\">\n                                <h4 className=\"font-weight-bold mt-0 mb-0\" style={{ paddingTop: 30 }}>{t('instantSwap.submitted')}</h4>\n                                <div style={{ paddingTop: 40, paddingBottom: 45, marginBottom: 'auto' }}>\n                                    <QRCode value={this.state.order?.address_from || ''} fgColor={this.props.darkMode ? '#fff' : '#202020'} bgColor={'transparent'}/>\n                                </div>\n                                <div className=\"d-flex flex-column align-items-stretch align-self-stretch mb-4\">\n                                    <span className=\"font-size-large mb-2 d-block\">{t('instantSwap.sendCrypto', {\n                                        amount: this.state.order?.amount_from,\n                                        crypto: this.state.order?.currency_from?.toUpperCase()\n                                    })}</span>\n                                    <span className=\"opacity-50 font-size-sm\">{t('instantSwap.exchangeDescription')}</span>\n                                </div>\n\n                                <div className={'align-self-stretch d-flex flex-column mb-3'}>\n                                    <span className=\"opacity-50 mb-2\">ADDRESS</span>\n                                    <span className=\" font-weight-bold\">{this.state.order?.address_from}</span>\n                                </div>\n                                <div className={'align-self-stretch d-flex flex-column'}>\n                                    <span className=\"opacity-50 mb-2\">Order ID</span>\n                                    <span>{this.state.order?.id}</span>\n                                </div>\n                            </div>\n                        )}\n                    </Modal.Body>\n                </Modal>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        slippage: state.user.userSlippageTolerance,\n        darkMode: state.user.userDarkMode\n    }\n}\n\nexport default connect(mapStateToProps)(\n    withTranslation()(\n        withWeb3Account(\n            InstantSwap\n        )\n    )\n);\n"],"sourceRoot":""}