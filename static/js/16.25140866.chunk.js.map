{"version":3,"sources":["../../../src/constants.ts","../../../src/types.ts","../node_modules/rebass/styled-components/index.js","../../../../../src/utils/market_operation_utils/types.ts","../../../../src/utils/assert.ts","../../../../src/utils/utils.ts","../node_modules/reflexbox/styled-components/index.js","../../../../../src/utils/market_operation_utils/constants.ts","../../../../src/utils/swap_quote_consumer_utils.ts","../../../src/index.ts","../../../../src/utils/affiliate_fee_utils.ts","../../../../src/utils/fillable_amounts_utils.ts","../../../../../src/utils/market_operation_utils/create_order.ts","../../../../../src/utils/market_operation_utils/sampler.ts","../../../../src/utils/protocol_fee_utils.ts","../../../src/errors.ts","../../../../src/quote_consumers/swap_quote_consumer.ts","../../../../src/quote_consumers/exchange_swap_quote_consumer.ts","../../../../src/quote_consumers/forwarder_swap_quote_consumer.ts","../../../src/swap_quoter.ts","../../../../src/utils/calculate_liquidity.ts","../../../../../src/utils/market_operation_utils/index.ts","../../../../../src/utils/market_operation_utils/fill_optimizer.ts","../../../../../src/utils/market_operation_utils/dummy_order_utils.ts","../../../../src/utils/order_prune_utils.ts","../../../../src/utils/order_state_utils.ts","../node_modules/heartbeats/main.js","../node_modules/heartbeats/lib/heart.js","../node_modules/heartbeats/lib/pulse.js","../node_modules/heartbeats/lib/beatevent.js","../../../../src/utils/sorting_utils.ts","../../../../src/utils/swap_quote_calculator.ts"],"names":["types_1","OrderPrunerPermittedFeeTypes","version","curveAddress","tokens","Object","defineProperty","exports","value","enumerable","get","_styledComponents","Box","Flex","Card","Image","Button","Link","Heading","Text","_react","obj","__esModule","cache","_getRequireWildcardCache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","_extends","assign","target","i","arguments","length","source","apply","this","forwardRef","props","ref","createElement","tx","as","variant","__css","fontSize","fontFamily","fontWeight","lineHeight","appearance","display","textAlign","textDecoration","px","py","color","bg","border","borderRadius","maxWidth","height","assert","isSupportedAssetDataInOrders","order_utils_1","assetDataUtils","assetProxyId","orders","every","o","order","_interopRequireDefault","_styledSystem","_css","_shouldForwardProp","shouldForwardProp","boxSizing","margin","minWidth","theme","_ref","_ref$tx","sx","css","compose","space","layout","typography","flexbox","ERC20BridgeSource","fillableMakerAssetAmount","_contractAddress","encodeCall","contract","getABIEncodedTransactionData","handleCallResultsAsync","_this","batchCall","subCalls","orderbook_1","assert_1","SwapQuoter","a","constants_1","utils_1","hearts","Heart","initialize","createHeart","heartrate","name","heart","killHeart","id","kill","module","all","create","destroy","destroyHeart","Pulse","BeatEvent","idCount","heartbeat","events","eventList","Math","random","toString","pulses","interval","setInterval","createInterval","unreference","undefined","execute","done","unref","setHeartrate","clearInterval","newPulse","createPulse","pulse","killPulse","createEvent","modulo","options","fn","countTo","repeat","event","killEvent","push","beatevent","idx","indexOf","splice","killAllEvents","global_hearts","homeheart","missedBeats","beat","over","threshold","executionCount","count","schedule","round","totalMakerAssetAmount","totalTakerAssetAmount","totalFeeTakerAssetAmount","remainingMakerAssetFillAmount"],"mappings":"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","file":"static/js/16.25140866.chunk.js","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _a;\nvar utils_1 = require(\"@0x/utils\");\nvar types_1 = require(\"./types\");\nvar constants_1 = require(\"./utils/market_operation_utils/constants\");\nvar types_2 = require(\"./utils/market_operation_utils/types\");\nvar ETH_GAS_STATION_API_BASE_URL = 'https://ethgasstation.info';\nvar NULL_BYTES = '0x';\nvar NULL_ERC20_ASSET_DATA = '0xf47261b00000000000000000000000000000000000000000000000000000000000000000';\nvar NULL_ADDRESS = '0x0000000000000000000000000000000000000000';\nvar MAINNET_CHAIN_ID = 1;\nvar ONE_SECOND_MS = 1000;\nvar DEFAULT_PER_PAGE = 1000;\nvar DEFAULT_ORDER_PRUNER_OPTS = {\n    expiryBufferMs: 120000,\n    permittedOrderFeeTypes: new Set([\n        types_1.OrderPrunerPermittedFeeTypes.NoFees,\n        types_1.OrderPrunerPermittedFeeTypes.MakerDenominatedTakerFee,\n    ]),\n};\n// 15 seconds polling interval\nvar PROTOCOL_FEE_UTILS_POLLING_INTERVAL_IN_MS = 15000;\nvar PROTOCOL_FEE_MULTIPLIER = new utils_1.BigNumber(150000);\n// default 50% buffer for selecting native orders to be aggregated with other sources\nvar MARKET_UTILS_AMOUNT_BUFFER_PERCENTAGE = 0.5;\nvar DEFAULT_SWAP_QUOTER_OPTS = __assign({\n    chainId: MAINNET_CHAIN_ID,\n    orderRefreshIntervalMs: 10000,\n}, DEFAULT_ORDER_PRUNER_OPTS, { samplerGasLimit: 59e6 });\nvar DEFAULT_FORWARDER_EXTENSION_CONTRACT_OPTS = {\n    feePercentage: 0,\n    feeRecipient: NULL_ADDRESS,\n};\nvar DEFAULT_FORWARDER_SWAP_QUOTE_GET_OPTS = {\n    useExtensionContract: types_1.ExtensionContractType.Forwarder,\n    extensionContractOpts: DEFAULT_FORWARDER_EXTENSION_CONTRACT_OPTS,\n};\nvar DEFAULT_FORWARDER_SWAP_QUOTE_EXECUTE_OPTS = DEFAULT_FORWARDER_SWAP_QUOTE_GET_OPTS;\nvar DEFAULT_SWAP_QUOTE_REQUEST_OPTS = __assign({\n    slippagePercentage: 0.2,\n}, constants_1.constants.DEFAULT_GET_MARKET_ORDERS_OPTS);\n// Mainnet Curve configuration\nvar DEFAULT_CURVE_OPTS = (_a = {},\n    _a[types_2.ERC20BridgeSource.CurveUsdcDai] = {\n        version: 1,\n        curveAddress: '0xa2b47e3d5c44877cca798226b7b8118f9bfb7a56',\n        tokens: ['0x6b175474e89094c44da98b954eedeac495271d0f', '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48'],\n    },\n    _a[types_2.ERC20BridgeSource.CurveUsdcDaiUsdt] = {\n        version: 1,\n        curveAddress: '0x52ea46506b9cc5ef470c5bf89f17dc28bb35d85c',\n        tokens: [\n            '0x6b175474e89094c44da98b954eedeac495271d0f',\n            '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n            '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        ],\n    },\n    _a[types_2.ERC20BridgeSource.CurveUsdcDaiUsdtTusd] = {\n        version: 1,\n        curveAddress: '0x45f783cce6b7ff23b2ab2d70e416cdb7d6055f51',\n        tokens: [\n            '0x6b175474e89094c44da98b954eedeac495271d0f',\n            '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n            '0xdac17f958d2ee523a2206206994597c13d831ec7',\n            '0x0000000000085d4780b73119b644ae5ecd22b376',\n        ],\n    },\n    _a[types_2.ERC20BridgeSource.CurveUsdcDaiUsdtBusd] = {\n        version: 1,\n        curveAddress: '0x79a8c46dea5ada233abaffd40f3a0a2b1e5a4f27',\n        tokens: [\n            '0x6b175474e89094c44da98b954eedeac495271d0f',\n            '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n            '0xdac17f958d2ee523a2206206994597c13d831ec7',\n            '0x4fabb145d64652a948d72533023f6e7a623c7c53',\n        ],\n    },\n    _a);\nexports.constants = {\n    ETH_GAS_STATION_API_BASE_URL: ETH_GAS_STATION_API_BASE_URL,\n    PROTOCOL_FEE_MULTIPLIER: PROTOCOL_FEE_MULTIPLIER,\n    NULL_BYTES: NULL_BYTES,\n    ZERO_AMOUNT: new utils_1.BigNumber(0),\n    NULL_ADDRESS: NULL_ADDRESS,\n    MAINNET_CHAIN_ID: MAINNET_CHAIN_ID,\n    DEFAULT_ORDER_PRUNER_OPTS: DEFAULT_ORDER_PRUNER_OPTS,\n    ETHER_TOKEN_DECIMALS: 18,\n    ONE_AMOUNT: new utils_1.BigNumber(1),\n    ONE_SECOND_MS: ONE_SECOND_MS,\n    DEFAULT_SWAP_QUOTER_OPTS: DEFAULT_SWAP_QUOTER_OPTS,\n    DEFAULT_FORWARDER_SWAP_QUOTE_GET_OPTS: DEFAULT_FORWARDER_SWAP_QUOTE_GET_OPTS,\n    DEFAULT_FORWARDER_SWAP_QUOTE_EXECUTE_OPTS: DEFAULT_FORWARDER_SWAP_QUOTE_EXECUTE_OPTS,\n    DEFAULT_SWAP_QUOTE_REQUEST_OPTS: DEFAULT_SWAP_QUOTE_REQUEST_OPTS,\n    DEFAULT_PER_PAGE: DEFAULT_PER_PAGE,\n    NULL_ERC20_ASSET_DATA: NULL_ERC20_ASSET_DATA,\n    PROTOCOL_FEE_UTILS_POLLING_INTERVAL_IN_MS: PROTOCOL_FEE_UTILS_POLLING_INTERVAL_IN_MS,\n    MARKET_UTILS_AMOUNT_BUFFER_PERCENTAGE: MARKET_UTILS_AMOUNT_BUFFER_PERCENTAGE,\n    BRIDGE_ASSET_DATA_PREFIX: '0xdc1600f3',\n    DEFAULT_CURVE_OPTS: DEFAULT_CURVE_OPTS,\n};\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents the varying smart contracts that can consume a valid swap quote\n */\nvar ExtensionContractType;\n(function (ExtensionContractType) {\n    ExtensionContractType[\"Forwarder\"] = \"FORWARDER\";\n    ExtensionContractType[\"None\"] = \"NONE\";\n})(ExtensionContractType = exports.ExtensionContractType || (exports.ExtensionContractType = {}));\n/**\n * Possible error messages thrown by an SwapQuoterConsumer instance or associated static methods.\n */\nvar SwapQuoteConsumerError;\n(function (SwapQuoteConsumerError) {\n    SwapQuoteConsumerError[\"InvalidMarketSellOrMarketBuySwapQuote\"] = \"INVALID_MARKET_BUY_SELL_SWAP_QUOTE\";\n    SwapQuoteConsumerError[\"InvalidForwarderSwapQuote\"] = \"INVALID_FORWARDER_SWAP_QUOTE_PROVIDED\";\n    SwapQuoteConsumerError[\"NoAddressAvailable\"] = \"NO_ADDRESS_AVAILABLE\";\n    SwapQuoteConsumerError[\"SignatureRequestDenied\"] = \"SIGNATURE_REQUEST_DENIED\";\n    SwapQuoteConsumerError[\"TransactionValueTooLow\"] = \"TRANSACTION_VALUE_TOO_LOW\";\n})(SwapQuoteConsumerError = exports.SwapQuoteConsumerError || (exports.SwapQuoteConsumerError = {}));\n/**\n * Possible error messages thrown by an SwapQuoter instance or associated static methods.\n */\nvar SwapQuoterError;\n(function (SwapQuoterError) {\n    SwapQuoterError[\"NoEtherTokenContractFound\"] = \"NO_ETHER_TOKEN_CONTRACT_FOUND\";\n    SwapQuoterError[\"StandardRelayerApiError\"] = \"STANDARD_RELAYER_API_ERROR\";\n    SwapQuoterError[\"InsufficientAssetLiquidity\"] = \"INSUFFICIENT_ASSET_LIQUIDITY\";\n    SwapQuoterError[\"AssetUnavailable\"] = \"ASSET_UNAVAILABLE\";\n    SwapQuoterError[\"NoGasPriceProvidedOrEstimated\"] = \"NO_GAS_PRICE_PROVIDED_OR_ESTIMATED\";\n    SwapQuoterError[\"AssetDataUnsupported\"] = \"ASSET_DATA_UNSUPPORTED\";\n})(SwapQuoterError = exports.SwapQuoterError || (exports.SwapQuoterError = {}));\n/**\n * Represents two main market operations supported by asset-swapper.\n */\nvar MarketOperation;\n(function (MarketOperation) {\n    MarketOperation[\"Sell\"] = \"Sell\";\n    MarketOperation[\"Buy\"] = \"Buy\";\n})(MarketOperation = exports.MarketOperation || (exports.MarketOperation = {}));\n/**\n * Represents varying order takerFee types that can be pruned for by OrderPruner.\n */\nvar OrderPrunerPermittedFeeTypes;\n(function (OrderPrunerPermittedFeeTypes) {\n    OrderPrunerPermittedFeeTypes[\"NoFees\"] = \"NO_FEES\";\n    OrderPrunerPermittedFeeTypes[\"MakerDenominatedTakerFee\"] = \"MAKER_DENOMINATED_TAKER_FEE\";\n    OrderPrunerPermittedFeeTypes[\"TakerDenominatedTakerFee\"] = \"TAKER_DENOMINATED_TAKER_FEE\";\n})(OrderPrunerPermittedFeeTypes = exports.OrderPrunerPermittedFeeTypes || (exports.OrderPrunerPermittedFeeTypes = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Box\", {\n  enumerable: true,\n  get: function get() {\n    return _styledComponents.Box;\n  }\n});\nObject.defineProperty(exports, \"Flex\", {\n  enumerable: true,\n  get: function get() {\n    return _styledComponents.Flex;\n  }\n});\nexports.Card = exports.Image = exports.Button = exports.Link = exports.Heading = exports.Text = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _styledComponents = require(\"reflexbox/styled-components\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar Text = (0, _react.forwardRef)(function (props, ref) {\n  return _react[\"default\"].createElement(_styledComponents.Box, _extends({\n    ref: ref,\n    tx: \"text\"\n  }, props));\n});\nexports.Text = Text;\nvar Heading = (0, _react.forwardRef)(function (props, ref) {\n  return _react[\"default\"].createElement(_styledComponents.Box, _extends({\n    ref: ref,\n    as: \"h2\",\n    tx: \"text\",\n    variant: \"heading\"\n  }, props, {\n    __css: {\n      fontSize: 4,\n      fontFamily: 'heading',\n      fontWeight: 'heading',\n      lineHeight: 'heading'\n    }\n  }));\n});\nexports.Heading = Heading;\nvar Link = (0, _react.forwardRef)(function (props, ref) {\n  return _react[\"default\"].createElement(_styledComponents.Box, _extends({\n    ref: ref,\n    as: \"a\",\n    variant: \"link\"\n  }, props));\n});\nexports.Link = Link;\nvar Button = (0, _react.forwardRef)(function (props, ref) {\n  return _react[\"default\"].createElement(_styledComponents.Box, _extends({\n    ref: ref,\n    as: \"button\",\n    tx: \"buttons\",\n    variant: \"primary\"\n  }, props, {\n    __css: {\n      appearance: 'none',\n      display: 'inline-block',\n      textAlign: 'center',\n      lineHeight: 'inherit',\n      textDecoration: 'none',\n      fontSize: 'inherit',\n      px: 3,\n      py: 2,\n      color: 'white',\n      bg: 'primary',\n      border: 0,\n      borderRadius: 4\n    }\n  }));\n});\nexports.Button = Button;\nvar Image = (0, _react.forwardRef)(function (props, ref) {\n  return _react[\"default\"].createElement(_styledComponents.Box, _extends({\n    ref: ref,\n    as: \"img\"\n  }, props, {\n    __css: {\n      maxWidth: '100%',\n      height: 'auto'\n    }\n  }));\n});\nexports.Image = Image;\nvar Card = (0, _react.forwardRef)(function (props, ref) {\n  return _react[\"default\"].createElement(_styledComponents.Box, _extends({\n    ref: ref,\n    variant: \"card\"\n  }, props));\n});\nexports.Card = Card;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Common exception messages thrown by aggregation logic.\n */\nvar AggregationError;\n(function (AggregationError) {\n    AggregationError[\"NoOptimalPath\"] = \"NO_OPTIMAL_PATH\";\n    AggregationError[\"EmptyOrders\"] = \"EMPTY_ORDERS\";\n    AggregationError[\"NotERC20AssetData\"] = \"NOT_ERC20ASSET_DATA\";\n    AggregationError[\"NoBridgeForSource\"] = \"NO_BRIDGE_FOR_SOURCE\";\n})(AggregationError = exports.AggregationError || (exports.AggregationError = {}));\n/**\n * DEX sources to aggregate.\n */\nvar ERC20BridgeSource;\n(function (ERC20BridgeSource) {\n    ERC20BridgeSource[\"Native\"] = \"Native\";\n    ERC20BridgeSource[\"Uniswap\"] = \"Uniswap\";\n    ERC20BridgeSource[\"Eth2Dai\"] = \"Eth2Dai\";\n    ERC20BridgeSource[\"Kyber\"] = \"Kyber\";\n    ERC20BridgeSource[\"CurveUsdcDai\"] = \"Curve_USDC_DAI\";\n    ERC20BridgeSource[\"CurveUsdcDaiUsdt\"] = \"Curve_USDC_DAI_USDT\";\n    ERC20BridgeSource[\"CurveUsdcDaiUsdtTusd\"] = \"Curve_USDC_DAI_USDT_TUSD\";\n    ERC20BridgeSource[\"CurveUsdcDaiUsdtBusd\"] = \"Curve_USDC_DAI_USDT_BUSD\";\n})(ERC20BridgeSource = exports.ERC20BridgeSource || (exports.ERC20BridgeSource = {}));\n/**\n * Flags for `Fill` objects.\n */\nvar FillFlags;\n(function (FillFlags) {\n    FillFlags[FillFlags[\"SourceNative\"] = 1] = \"SourceNative\";\n    FillFlags[FillFlags[\"SourceUniswap\"] = 2] = \"SourceUniswap\";\n    FillFlags[FillFlags[\"SourceEth2Dai\"] = 4] = \"SourceEth2Dai\";\n    FillFlags[FillFlags[\"SourceKyber\"] = 8] = \"SourceKyber\";\n})(FillFlags = exports.FillFlags || (exports.FillFlags = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert_1 = require(\"@0x/assert\");\nvar json_schemas_1 = require(\"@0x/json-schemas\");\nvar _ = require(\"lodash\");\nvar types_1 = require(\"../types\");\nvar utils_1 = require(\"./utils\");\nexports.assert = __assign({}, assert_1.assert, { isValidSwapQuote: function (variableName, swapQuote) {\n        assert_1.assert.isHexString(variableName + \".takerAssetData\", swapQuote.takerAssetData);\n        assert_1.assert.isHexString(variableName + \".makerAssetData\", swapQuote.makerAssetData);\n        assert_1.assert.doesConformToSchema(variableName + \".orders\", swapQuote.orders, json_schemas_1.schemas.signedOrdersSchema);\n        exports.assert.isValidSwapQuoteOrders(variableName + \".orders\", swapQuote.orders, swapQuote.makerAssetData, swapQuote.takerAssetData);\n        exports.assert.isValidSwapQuoteInfo(variableName + \".bestCaseQuoteInfo\", swapQuote.bestCaseQuoteInfo);\n        exports.assert.isValidSwapQuoteInfo(variableName + \".worstCaseQuoteInfo\", swapQuote.worstCaseQuoteInfo);\n        if (swapQuote.type === types_1.MarketOperation.Buy) {\n            assert_1.assert.isBigNumber(variableName + \".makerAssetFillAmount\", swapQuote.makerAssetFillAmount);\n        }\n        else {\n            assert_1.assert.isBigNumber(variableName + \".takerAssetFillAmount\", swapQuote.takerAssetFillAmount);\n        }\n    },\n    isValidSwapQuoteOrders: function (variableName, orders, makerAssetData, takerAssetData) {\n        _.every(orders, function (order, index) {\n            exports.assert.assert(utils_1.utils.isAssetDataEquivalent(takerAssetData, order.takerAssetData), \"Expected \" + variableName + \"[\" + index + \"].takerAssetData to be \" + takerAssetData + \" but found \" + order.takerAssetData);\n            exports.assert.assert(utils_1.utils.isAssetDataEquivalent(makerAssetData, order.makerAssetData), \"Expected \" + variableName + \"[\" + index + \"].makerAssetData to be \" + makerAssetData + \" but found \" + order.makerAssetData);\n        });\n    },\n    isValidOrdersForSwapQuoter: function (variableName, orders) {\n        _.every(orders, function (order, index) {\n            exports.assert.assert(order.takerFee.isZero() ||\n                utils_1.utils.isOrderTakerFeePayableWithTakerAsset(order) ||\n                utils_1.utils.isOrderTakerFeePayableWithMakerAsset(order), \"Expected \" + variableName + \"[\" + index + \"].takerFeeAssetData to be \" + order.makerAssetData + \" or \" + order.takerAssetData + \" but found \" + order.takerFeeAssetData);\n        });\n    },\n    isValidForwarderSwapQuote: function (variableName, swapQuote, wethAssetData) {\n        exports.assert.isValidSwapQuote(variableName, swapQuote);\n        exports.assert.isValidForwarderSignedOrders(variableName + \".orders\", swapQuote.orders, wethAssetData);\n    },\n    isValidForwarderSignedOrders: function (variableName, orders, wethAssetData) {\n        _.forEach(orders, function (o, i) {\n            exports.assert.isValidForwarderSignedOrder(variableName + \"[\" + i + \"]\", o, wethAssetData);\n        });\n    },\n    isValidForwarderSignedOrder: function (variableName, order, wethAssetData) {\n        exports.assert.assert(utils_1.utils.isExactAssetData(order.takerAssetData, wethAssetData), \"Expected \" + variableName + \" to have takerAssetData set as \" + wethAssetData + \", but is \" + order.takerAssetData);\n    },\n    isValidSwapQuoteInfo: function (variableName, swapQuoteInfo) {\n        assert_1.assert.isBigNumber(variableName + \".feeTakerAssetAmount\", swapQuoteInfo.feeTakerAssetAmount);\n        assert_1.assert.isBigNumber(variableName + \".totalTakerAssetAmount\", swapQuoteInfo.totalTakerAssetAmount);\n        assert_1.assert.isBigNumber(variableName + \".takerAssetAmount\", swapQuoteInfo.takerAssetAmount);\n        assert_1.assert.isBigNumber(variableName + \".makerAssetAmount\", swapQuoteInfo.makerAssetAmount);\n    },\n    isValidOrderbook: function (variableName, orderFetcher) {\n        assert_1.assert.isFunction(variableName + \".getOrdersAsync\", orderFetcher.getOrdersAsync);\n    },\n    isValidOrderProviderRequest: function (variableName, orderFetcherRequest) {\n        assert_1.assert.isHexString(variableName + \".makerAssetData\", orderFetcherRequest.makerAssetData);\n        assert_1.assert.isHexString(variableName + \".takerAssetData\", orderFetcherRequest.takerAssetData);\n    },\n    isValidPercentage: function (variableName, percentage) {\n        exports.assert.isNumber(variableName, percentage);\n        exports.assert.assert(percentage >= 0 && percentage <= 1, \"Expected \" + variableName + \" to be between 0 and 1, but is \" + percentage);\n    },\n    isValidForwarderExtensionContractOpts: function (variableName, opts) {\n        exports.assert.isValidPercentage(variableName + \".feePercentage\", opts.feePercentage);\n        exports.assert.isETHAddressHex(variableName + \".feeRecipient\", opts.feeRecipient);\n    } });\n//# sourceMappingURL=assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar order_utils_1 = require(\"@0x/order-utils\");\nvar types_1 = require(\"@0x/types\");\nvar utils_1 = require(\"@0x/utils\");\nvar web3_wrapper_1 = require(\"@0x/web3-wrapper\");\nvar constants_1 = require(\"../constants\");\n// tslint:disable:no-unnecessary-type-assertion\nexports.utils = {\n    isSupportedAssetDataInOrders: function (orders) {\n        var firstOrderMakerAssetData = !!orders[0]\n            ? order_utils_1.assetDataUtils.decodeAssetDataOrThrow(orders[0].makerAssetData)\n            : { assetProxyId: '' };\n        return orders.every(function (o) {\n            var takerAssetData = order_utils_1.assetDataUtils.decodeAssetDataOrThrow(o.takerAssetData);\n            var makerAssetData = order_utils_1.assetDataUtils.decodeAssetDataOrThrow(o.makerAssetData);\n            return ((makerAssetData.assetProxyId === types_1.AssetProxyId.ERC20 ||\n                makerAssetData.assetProxyId === types_1.AssetProxyId.ERC721) &&\n                takerAssetData.assetProxyId === types_1.AssetProxyId.ERC20 &&\n                firstOrderMakerAssetData.assetProxyId === makerAssetData.assetProxyId); // checks that all native order maker assets are of the same type\n        });\n    },\n    numberPercentageToEtherTokenAmountPercentage: function (percentage) {\n        return web3_wrapper_1.Web3Wrapper.toBaseUnitAmount(constants_1.constants.ONE_AMOUNT, constants_1.constants.ETHER_TOKEN_DECIMALS).multipliedBy(percentage);\n    },\n    isOrderTakerFeePayableWithMakerAsset: function (order) {\n        return !order.takerFee.isZero() && exports.utils.isAssetDataEquivalent(order.takerFeeAssetData, order.makerAssetData);\n    },\n    isOrderTakerFeePayableWithTakerAsset: function (order) {\n        return !order.takerFee.isZero() && exports.utils.isAssetDataEquivalent(order.takerFeeAssetData, order.takerAssetData);\n    },\n    getAdjustedMakerAndTakerAmountsFromTakerFees: function (order) {\n        var adjustedMakerAssetAmount = exports.utils.isOrderTakerFeePayableWithMakerAsset(order)\n            ? order.makerAssetAmount.minus(order.takerFee)\n            : order.makerAssetAmount;\n        var adjustedTakerAssetAmount = exports.utils.isOrderTakerFeePayableWithTakerAsset(order)\n            ? order.takerAssetAmount.plus(order.takerFee)\n            : order.takerAssetAmount;\n        return [adjustedMakerAssetAmount, adjustedTakerAssetAmount];\n    },\n    isExactAssetData: function (expectedAssetData, actualAssetData) {\n        return expectedAssetData === actualAssetData;\n    },\n    /**\n     * Compare the Asset Data for equivalency. Expected is the asset data the user provided (wanted),\n     * actual is the asset data found or created.\n     */\n    isAssetDataEquivalent: function (expectedAssetData, actualAssetData) {\n        if (exports.utils.isExactAssetData(expectedAssetData, actualAssetData)) {\n            return true;\n        }\n        var decodedExpectedAssetData = order_utils_1.assetDataUtils.decodeAssetDataOrThrow(expectedAssetData);\n        var decodedActualAssetData = order_utils_1.assetDataUtils.decodeAssetDataOrThrow(actualAssetData);\n        // ERC20 === ERC20, ERC20 === ERC20Bridge\n        if (exports.utils.isERC20EquivalentAssetData(decodedExpectedAssetData) &&\n            exports.utils.isERC20EquivalentAssetData(decodedActualAssetData)) {\n            var doesTokenAddressMatch = decodedExpectedAssetData.tokenAddress === decodedActualAssetData.tokenAddress;\n            return doesTokenAddressMatch;\n        }\n        // ERC1155 === ERC1155\n        if (order_utils_1.assetDataUtils.isERC1155TokenAssetData(decodedExpectedAssetData) &&\n            order_utils_1.assetDataUtils.isERC1155TokenAssetData(decodedActualAssetData)) {\n            var doesTokenAddressMatch = decodedExpectedAssetData.tokenAddress === decodedActualAssetData.tokenAddress;\n            // IDs may be out of order yet still equivalent\n            // i.e ([\"a\", \"b\"], [1,2]) === ([\"b\", \"a\"], [2, 1])\n            //     ([\"a\", \"b\"], [2,1]) !== ([\"b\", \"a\"], [2, 1])\n            var hasAllIds = decodedExpectedAssetData.tokenIds.every(function (id) { return decodedActualAssetData.tokenIds.findIndex(function (v) { return id.eq(v); }) !== -1; });\n            var hasAllValues = decodedExpectedAssetData.tokenIds.every(function (id, i) {\n                return decodedExpectedAssetData.tokenValues[i].eq(decodedActualAssetData.tokenValues[decodedActualAssetData.tokenIds.findIndex(function (v) { return id.eq(v); })]);\n            });\n            // If expected contains callback data, ensure it is present\n            // if actual has callbackdata and expected provided none then ignore it\n            var hasEquivalentCallback = decodedExpectedAssetData.callbackData === utils_1.NULL_BYTES ||\n                decodedExpectedAssetData.callbackData === decodedActualAssetData.callbackData;\n            return doesTokenAddressMatch && hasAllIds && hasAllValues && hasEquivalentCallback;\n        }\n        // ERC721 === ERC721\n        if (order_utils_1.assetDataUtils.isERC721TokenAssetData(decodedExpectedAssetData) ||\n            order_utils_1.assetDataUtils.isERC721TokenAssetData(decodedActualAssetData)) {\n            // Asset Data should exactly match for ERC721\n            return exports.utils.isExactAssetData(expectedAssetData, actualAssetData);\n        }\n        // TODO(dekz): Unsupported cases\n        // ERCXX(token) === MAP(token, staticCall)\n        // MAP(a, b) === MAP(b, a) === MAP(b, a, staticCall)\n        return false;\n    },\n    isERC20EquivalentAssetData: function (assetData) {\n        return order_utils_1.assetDataUtils.isERC20TokenAssetData(assetData) || order_utils_1.assetDataUtils.isERC20BridgeAssetData(assetData);\n    },\n};\n//# sourceMappingURL=utils.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Flex = exports.Box = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _css = _interopRequireWildcard(require(\"@styled-system/css\"));\n\nvar _shouldForwardProp = _interopRequireDefault(require(\"@styled-system/should-forward-prop\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar sx = function sx(props) {\n  return (0, _css[\"default\"])(props.sx)(props.theme);\n};\n\nvar base = function base(props) {\n  return (0, _css[\"default\"])(props.__css)(props.theme);\n};\n\nvar variant = function variant(_ref) {\n  var theme = _ref.theme,\n      variant = _ref.variant,\n      _ref$tx = _ref.tx,\n      tx = _ref$tx === void 0 ? 'variants' : _ref$tx;\n  return (0, _css[\"default\"])((0, _css.get)(theme, tx + '.' + variant, (0, _css.get)(theme, variant)))(theme);\n};\n\nvar Box = (0, _styledComponents[\"default\"])('div', {\n  shouldForwardProp: _shouldForwardProp[\"default\"]\n})({\n  boxSizing: 'border-box',\n  margin: 0,\n  minWidth: 0\n}, base, variant, sx, function (props) {\n  return props.css;\n}, (0, _styledSystem.compose)(_styledSystem.space, _styledSystem.layout, _styledSystem.typography, _styledSystem.color, _styledSystem.flexbox));\nexports.Box = Box;\nvar Flex = (0, _styledComponents[\"default\"])(Box)({\n  display: 'flex'\n});\nexports.Flex = Flex;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@0x/utils\");\nvar types_1 = require(\"./types\");\nvar INFINITE_TIMESTAMP_SEC = new utils_1.BigNumber(2524604400);\n/**\n * Valid sources for market sell.\n */\nexports.SELL_SOURCES = [\n    types_1.ERC20BridgeSource.Uniswap,\n    types_1.ERC20BridgeSource.Eth2Dai,\n    types_1.ERC20BridgeSource.Kyber,\n    // All Curve Sources\n    types_1.ERC20BridgeSource.CurveUsdcDai,\n    types_1.ERC20BridgeSource.CurveUsdcDaiUsdt,\n    types_1.ERC20BridgeSource.CurveUsdcDaiUsdtTusd,\n    types_1.ERC20BridgeSource.CurveUsdcDaiUsdtBusd,\n];\n/**\n * Valid sources for market buy.\n */\nexports.BUY_SOURCES = [types_1.ERC20BridgeSource.Uniswap, types_1.ERC20BridgeSource.Eth2Dai];\nexports.DEFAULT_GET_MARKET_ORDERS_OPTS = {\n    // tslint:disable-next-line: custom-no-magic-numbers\n    runLimit: Math.pow(2, 15),\n    excludedSources: [],\n    bridgeSlippage: 0.0005,\n    dustFractionThreshold: 0.0025,\n    numSamples: 13,\n    noConflicts: true,\n    sampleDistributionBase: 1.05,\n    fees: {},\n};\n/**\n * Sources to poll for ETH fee price estimates.\n */\nexports.FEE_QUOTE_SOURCES = exports.SELL_SOURCES;\nexports.constants = {\n    INFINITE_TIMESTAMP_SEC: INFINITE_TIMESTAMP_SEC,\n    SELL_SOURCES: exports.SELL_SOURCES,\n    BUY_SOURCES: exports.BUY_SOURCES,\n    DEFAULT_GET_MARKET_ORDERS_OPTS: exports.DEFAULT_GET_MARKET_ORDERS_OPTS,\n    ERC20_PROXY_ID: '0xf47261b0',\n    FEE_QUOTE_SOURCES: exports.FEE_QUOTE_SOURCES,\n    WALLET_SIGNATURE: '0x04',\n    ONE_ETHER: new utils_1.BigNumber(1e18),\n};\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contract_wrappers_1 = require(\"@0x/contract-wrappers\");\nvar order_utils_1 = require(\"@0x/order-utils\");\nvar web3_wrapper_1 = require(\"@0x/web3-wrapper\");\nvar _ = require(\"lodash\");\nvar constants_1 = require(\"../constants\");\nvar types_1 = require(\"../types\");\nvar utils_1 = require(\"../utils/utils\");\nvar assert_1 = require(\"./assert\");\nexports.swapQuoteConsumerUtils = {\n    getTakerAddressOrThrowAsync: function (provider, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var takerAddress;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, exports.swapQuoteConsumerUtils.getTakerAddressAsync(provider, opts)];\n                    case 1:\n                        takerAddress = _a.sent();\n                        if (takerAddress === undefined) {\n                            throw new Error(types_1.SwapQuoteConsumerError.NoAddressAvailable);\n                        }\n                        else {\n                            return [2 /*return*/, takerAddress];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    },\n    getTakerAddressAsync: function (provider, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var web3Wrapper, availableAddresses, firstAvailableAddress;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(opts.takerAddress !== undefined)) return [3 /*break*/, 1];\n                        return [2 /*return*/, opts.takerAddress];\n                    case 1:\n                        web3Wrapper = new web3_wrapper_1.Web3Wrapper(provider);\n                        return [4 /*yield*/, web3Wrapper.getAvailableAddressesAsync()];\n                    case 2:\n                        availableAddresses = _a.sent();\n                        firstAvailableAddress = _.head(availableAddresses);\n                        if (firstAvailableAddress !== undefined) {\n                            return [2 /*return*/, firstAvailableAddress];\n                        }\n                        else {\n                            return [2 /*return*/, undefined];\n                        }\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    },\n    getEthAndWethBalanceAsync: function (provider, contractAddresses, takerAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var weth, web3Wrapper, ethBalance, wethBalance;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        weth = new contract_wrappers_1.WETH9Contract(contractAddresses.etherToken, provider);\n                        web3Wrapper = new web3_wrapper_1.Web3Wrapper(provider);\n                        return [4 /*yield*/, web3Wrapper.getBalanceInWeiAsync(takerAddress)];\n                    case 1:\n                        ethBalance = _a.sent();\n                        return [4 /*yield*/, weth.balanceOf(takerAddress).callAsync()];\n                    case 2:\n                        wethBalance = _a.sent();\n                        return [2 /*return*/, [ethBalance, wethBalance]];\n                }\n            });\n        });\n    },\n    isValidForwarderSwapQuote: function (swapQuote, wethAssetData) {\n        return exports.swapQuoteConsumerUtils.isValidForwarderSignedOrders(swapQuote.orders, wethAssetData);\n    },\n    isValidForwarderSignedOrders: function (orders, wethAssetData) {\n        return _.every(orders, function (order) { return exports.swapQuoteConsumerUtils.isValidForwarderSignedOrder(order, wethAssetData); });\n    },\n    isValidForwarderSignedOrder: function (order, wethAssetData) {\n        return utils_1.utils.isExactAssetData(order.takerAssetData, wethAssetData);\n    },\n    getExtensionContractTypeForSwapQuoteAsync: function (quote, contractAddresses, provider, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var wethAssetData, ethAmount_1, takerAddress, takerEthAndWethBalance, _a, isEnoughEthAndWethBalance;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        wethAssetData = order_utils_1.assetDataUtils.encodeERC20AssetData(contractAddresses.etherToken);\n                        if (!exports.swapQuoteConsumerUtils.isValidForwarderSwapQuote(quote, wethAssetData)) return [3 /*break*/, 5];\n                        if (opts.takerAddress !== undefined) {\n                            assert_1.assert.isETHAddressHex('takerAddress', opts.takerAddress);\n                        }\n                        ethAmount_1 = opts.ethAmount ||\n                            quote.worstCaseQuoteInfo.takerAssetAmount.plus(quote.worstCaseQuoteInfo.protocolFeeInWeiAmount);\n                        return [4 /*yield*/, exports.swapQuoteConsumerUtils.getTakerAddressAsync(provider, opts)];\n                    case 1:\n                        takerAddress = _b.sent();\n                        if (!(takerAddress !== undefined)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, exports.swapQuoteConsumerUtils.getEthAndWethBalanceAsync(provider, contractAddresses, takerAddress)];\n                    case 2:\n                        _a = _b.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        _a = [constants_1.constants.ZERO_AMOUNT, constants_1.constants.ZERO_AMOUNT];\n                        _b.label = 4;\n                    case 4:\n                        takerEthAndWethBalance = _a;\n                        isEnoughEthAndWethBalance = _.map(takerEthAndWethBalance, function (balance) {\n                            return balance.isGreaterThanOrEqualTo(ethAmount_1);\n                        });\n                        if (isEnoughEthAndWethBalance[1]) {\n                            // should be more gas efficient to use exchange consumer, so if possible use it.\n                            return [2 /*return*/, types_1.ExtensionContractType.None];\n                        }\n                        else if (isEnoughEthAndWethBalance[0] && !isEnoughEthAndWethBalance[1]) {\n                            return [2 /*return*/, types_1.ExtensionContractType.Forwarder];\n                        }\n                        // Note: defaulting to forwarderConsumer if takerAddress is null or not enough balance of either wEth or Eth\n                        return [2 /*return*/, types_1.ExtensionContractType.Forwarder];\n                    case 5: return [2 /*return*/, types_1.ExtensionContractType.None];\n                }\n            });\n        });\n    },\n};\n//# sourceMappingURL=swap_quote_consumer_utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar orderbook_1 = require(\"@0x/orderbook\");\nexports.BaseOrderProvider = orderbook_1.BaseOrderProvider;\nexports.Orderbook = orderbook_1.Orderbook;\nexports.OrderSet = orderbook_1.OrderSet;\nexports.OrderStore = orderbook_1.OrderStore;\nvar utils_1 = require(\"@0x/utils\");\nexports.BigNumber = utils_1.BigNumber;\nvar errors_1 = require(\"./errors\");\nexports.InsufficientAssetLiquidityError = errors_1.InsufficientAssetLiquidityError;\nvar swap_quote_consumer_1 = require(\"./quote_consumers/swap_quote_consumer\");\nexports.SwapQuoteConsumer = swap_quote_consumer_1.SwapQuoteConsumer;\nvar swap_quoter_1 = require(\"./swap_quoter\");\nexports.SwapQuoter = swap_quoter_1.SwapQuoter;\nvar types_1 = require(\"./types\");\nexports.ExtensionContractType = types_1.ExtensionContractType;\nexports.SwapQuoterError = types_1.SwapQuoterError;\nexports.SwapQuoteConsumerError = types_1.SwapQuoteConsumerError;\nvar types_2 = require(\"./utils/market_operation_utils/types\");\nexports.ERC20BridgeSource = types_2.ERC20BridgeSource;\nvar affiliate_fee_utils_1 = require(\"./utils/affiliate_fee_utils\");\nexports.affiliateFeeUtils = affiliate_fee_utils_1.affiliateFeeUtils;\nvar protocol_fee_utils_1 = require(\"./utils/protocol_fee_utils\");\nexports.ProtocolFeeUtils = protocol_fee_utils_1.ProtocolFeeUtils;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@0x/utils\");\nvar assert_1 = require(\"./assert\");\nexports.affiliateFeeUtils = {\n    /**\n     * Get the amount of eth to send for a forwarder contract call (includes takerAssetAmount, protocol fees, and specified affiliate fee amount)\n     * @param swapQuoteInfo SwapQuoteInfo to generate total eth amount from\n     * @param feePercentage Percentage of additive fees to apply to totalTakerAssetAmount + protocol fee.\n     */\n    getTotalEthAmountWithAffiliateFee: function (swapQuoteInfo, feePercentage) {\n        var ethAmount = swapQuoteInfo.protocolFeeInWeiAmount.plus(swapQuoteInfo.totalTakerAssetAmount);\n        var ethAmountWithFees = ethAmount.plus(exports.affiliateFeeUtils.getFeeAmount(swapQuoteInfo, feePercentage));\n        return ethAmountWithFees;\n    },\n    /**\n     * Get the affiliate fee owed to the forwarder fee recipient.\n     * @param swapQuoteInfo SwapQuoteInfo to generate total eth amount from\n     * @param feePercentage Percentage of additive fees to apply to totalTakerAssetAmount + protocol fee.\n     */\n    getFeeAmount: function (swapQuoteInfo, feePercentage) {\n        assert_1.assert.assert(feePercentage >= 0, 'feePercentage must be >= 0');\n        var ethAmount = swapQuoteInfo.protocolFeeInWeiAmount.plus(swapQuoteInfo.totalTakerAssetAmount);\n        // HACK(dekz): This is actually in WEI amount not ETH\n        return ethAmount.times(feePercentage).integerValue(utils_1.BigNumber.ROUND_UP);\n    },\n};\n//# sourceMappingURL=affiliate_fee_utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nexports.fillableAmountsUtils = {\n    getTakerAssetAmountSwappedAfterOrderFees: function (order) {\n        if (utils_1.utils.isOrderTakerFeePayableWithTakerAsset(order)) {\n            return order.fillableTakerAssetAmount.plus(order.fillableTakerFeeAmount);\n        }\n        else {\n            return order.fillableTakerAssetAmount;\n        }\n    },\n    getMakerAssetAmountSwappedAfterOrderFees: function (order) {\n        if (utils_1.utils.isOrderTakerFeePayableWithMakerAsset(order)) {\n            return order.fillableMakerAssetAmount.minus(order.fillableTakerFeeAmount);\n        }\n        else {\n            return order.fillableMakerAssetAmount;\n        }\n    },\n};\n//# sourceMappingURL=fillable_amounts_utils.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar order_utils_1 = require(\"@0x/order-utils\");\nvar utils_1 = require(\"@0x/utils\");\nvar constants_1 = require(\"../../constants\");\nvar constants_2 = require(\"./constants\");\nvar types_1 = require(\"./types\");\nvar NULL_BYTES = constants_1.constants.NULL_BYTES, NULL_ADDRESS = constants_1.constants.NULL_ADDRESS, ZERO_AMOUNT = constants_1.constants.ZERO_AMOUNT;\nvar INFINITE_TIMESTAMP_SEC = constants_2.constants.INFINITE_TIMESTAMP_SEC, WALLET_SIGNATURE = constants_2.constants.WALLET_SIGNATURE;\nvar CreateOrderUtils = /** @class */ (function () {\n    function CreateOrderUtils(contractAddress) {\n        this._contractAddress = contractAddress;\n    }\n    // utility function for asset-swapper to ignore market operation utils for specific asset types\n    CreateOrderUtils.convertNativeOrderToFullyFillableOptimizedOrders = function (order) {\n        return __assign({}, order, { fillableMakerAssetAmount: order.makerAssetAmount, fillableTakerAssetAmount: order.takerAssetAmount, fillableTakerFeeAmount: order.takerFee, fill: {\n                source: types_1.ERC20BridgeSource.Native,\n                totalMakerAssetAmount: order.makerAssetAmount,\n                totalTakerAssetAmount: order.takerAssetAmount,\n                subFills: [],\n            } });\n    };\n    // Convert sell fills into orders.\n    CreateOrderUtils.prototype.createSellOrdersFromPath = function (orderDomain, inputToken, outputToken, path, bridgeSlippage) {\n        var e_1, _a;\n        var orders = [];\n        try {\n            for (var path_1 = __values(path), path_1_1 = path_1.next(); !path_1_1.done; path_1_1 = path_1.next()) {\n                var fill = path_1_1.value;\n                if (fill.source === types_1.ERC20BridgeSource.Native) {\n                    orders.push(createNativeOrder(fill));\n                }\n                else {\n                    orders.push(createBridgeOrder(orderDomain, fill, this._getBridgeAddressFromSource(fill.source), outputToken, inputToken, bridgeSlippage));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (path_1_1 && !path_1_1.done && (_a = path_1.return)) _a.call(path_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return orders;\n    };\n    // Convert buy fills into orders.\n    CreateOrderUtils.prototype.createBuyOrdersFromPath = function (orderDomain, inputToken, outputToken, path, bridgeSlippage) {\n        var e_2, _a;\n        var orders = [];\n        try {\n            for (var path_2 = __values(path), path_2_1 = path_2.next(); !path_2_1.done; path_2_1 = path_2.next()) {\n                var fill = path_2_1.value;\n                if (fill.source === types_1.ERC20BridgeSource.Native) {\n                    orders.push(createNativeOrder(fill));\n                }\n                else {\n                    orders.push(createBridgeOrder(orderDomain, fill, this._getBridgeAddressFromSource(fill.source), inputToken, outputToken, bridgeSlippage, true));\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (path_2_1 && !path_2_1.done && (_a = path_2.return)) _a.call(path_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return orders;\n    };\n    CreateOrderUtils.prototype._getBridgeAddressFromSource = function (source) {\n        switch (source) {\n            case types_1.ERC20BridgeSource.Eth2Dai:\n                return this._contractAddress.eth2DaiBridge;\n            case types_1.ERC20BridgeSource.Kyber:\n                return this._contractAddress.kyberBridge;\n            case types_1.ERC20BridgeSource.Uniswap:\n                return this._contractAddress.uniswapBridge;\n            case types_1.ERC20BridgeSource.CurveUsdcDai:\n            case types_1.ERC20BridgeSource.CurveUsdcDaiUsdt:\n            case types_1.ERC20BridgeSource.CurveUsdcDaiUsdtTusd:\n            case types_1.ERC20BridgeSource.CurveUsdcDaiUsdtBusd:\n                return this._contractAddress.curveBridge;\n            default:\n                break;\n        }\n        throw new Error(types_1.AggregationError.NoBridgeForSource);\n    };\n    return CreateOrderUtils;\n}());\nexports.CreateOrderUtils = CreateOrderUtils;\nfunction createBridgeOrder(orderDomain, fill, bridgeAddress, makerToken, takerToken, slippage, isBuy) {\n    if (isBuy === void 0) { isBuy = false; }\n    var makerAssetData;\n    if (Object.keys(constants_1.constants.DEFAULT_CURVE_OPTS).includes(fill.source)) {\n        var _a = constants_1.constants.DEFAULT_CURVE_OPTS[fill.source], curveAddress = _a.curveAddress, tokens = _a.tokens, version = _a.version;\n        var fromTokenIdx = tokens.indexOf(takerToken);\n        var toTokenIdx = tokens.indexOf(makerToken);\n        makerAssetData = order_utils_1.assetDataUtils.encodeERC20BridgeAssetData(makerToken, bridgeAddress, createCurveBridgeData(curveAddress, fromTokenIdx, toTokenIdx, version));\n    }\n    else {\n        makerAssetData = order_utils_1.assetDataUtils.encodeERC20BridgeAssetData(makerToken, bridgeAddress, createBridgeData(takerToken));\n    }\n    return __assign({ makerAddress: bridgeAddress, makerAssetData: makerAssetData, takerAssetData: order_utils_1.assetDataUtils.encodeERC20AssetData(takerToken) }, createCommonOrderFields(orderDomain, fill, slippage, isBuy));\n}\nfunction createBridgeData(tokenAddress) {\n    var encoder = utils_1.AbiEncoder.create([{ name: 'tokenAddress', type: 'address' }]);\n    return encoder.encode({ tokenAddress: tokenAddress });\n}\nfunction createCurveBridgeData(curveAddress, fromTokenIdx, toTokenIdx, version) {\n    var curveBridgeDataEncoder = utils_1.AbiEncoder.create([\n        { name: 'curveAddress', type: 'address' },\n        { name: 'fromTokenIdx', type: 'int128' },\n        { name: 'toTokenIdx', type: 'int128' },\n        { name: 'version', type: 'int128' },\n    ]);\n    return curveBridgeDataEncoder.encode([curveAddress, fromTokenIdx, toTokenIdx, version]);\n}\nfunction createCommonOrderFields(orderDomain, fill, slippage, isBuy) {\n    if (isBuy === void 0) { isBuy = false; }\n    var makerAssetAmountAdjustedWithSlippage = isBuy\n        ? fill.totalMakerAssetAmount\n        : fill.totalMakerAssetAmount.times(1 - slippage).integerValue(utils_1.BigNumber.ROUND_DOWN);\n    var takerAssetAmountAdjustedWithSlippage = isBuy\n        ? fill.totalTakerAssetAmount.times(slippage + 1).integerValue(utils_1.BigNumber.ROUND_UP)\n        : fill.totalTakerAssetAmount;\n    return __assign({ fill: fill, takerAddress: NULL_ADDRESS, senderAddress: NULL_ADDRESS, feeRecipientAddress: NULL_ADDRESS, salt: order_utils_1.generatePseudoRandomSalt(), expirationTimeSeconds: INFINITE_TIMESTAMP_SEC, makerFeeAssetData: NULL_BYTES, takerFeeAssetData: NULL_BYTES, makerFee: ZERO_AMOUNT, takerFee: ZERO_AMOUNT, makerAssetAmount: makerAssetAmountAdjustedWithSlippage, fillableMakerAssetAmount: makerAssetAmountAdjustedWithSlippage, takerAssetAmount: takerAssetAmountAdjustedWithSlippage, fillableTakerAssetAmount: takerAssetAmountAdjustedWithSlippage, fillableTakerFeeAmount: ZERO_AMOUNT, signature: WALLET_SIGNATURE }, orderDomain);\n}\nfunction createNativeOrder(fill) {\n    return __assign({ fill: {\n            source: fill.source,\n            totalMakerAssetAmount: fill.totalMakerAssetAmount,\n            totalTakerAssetAmount: fill.totalTakerAssetAmount,\n            subFills: fill.subFills,\n        } }, fill.nativeOrder);\n}\n//# sourceMappingURL=create_order.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@0x/utils\");\nvar constants_1 = require(\"../../constants\");\nvar types_1 = require(\"./types\");\n/**\n * Composable operations that can be batched in a single transaction,\n * for use with `DexOrderSampler.executeAsync()`.\n */\nvar samplerOperations = {\n    getOrderFillableTakerAmounts: function (orders) {\n        var _this = this;\n        return {\n            encodeCall: function (contract) {\n                return contract\n                    .getOrderFillableTakerAssetAmounts(orders, orders.map(function (o) { return o.signature; }))\n                    .getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, contract.getABIDecodedReturnData('getOrderFillableTakerAssetAmounts', callResults)];\n                });\n            }); },\n        };\n    },\n    getOrderFillableMakerAmounts: function (orders) {\n        var _this = this;\n        return {\n            encodeCall: function (contract) {\n                return contract\n                    .getOrderFillableMakerAssetAmounts(orders, orders.map(function (o) { return o.signature; }))\n                    .getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, contract.getABIDecodedReturnData('getOrderFillableMakerAssetAmounts', callResults)];\n                });\n            }); },\n        };\n    },\n    getKyberSellQuotes: function (makerToken, takerToken, takerFillAmounts) {\n        var _this = this;\n        return {\n            encodeCall: function (contract) {\n                return contract\n                    .sampleSellsFromKyberNetwork(takerToken, makerToken, takerFillAmounts)\n                    .getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, contract.getABIDecodedReturnData('sampleSellsFromKyberNetwork', callResults)];\n                });\n            }); },\n        };\n    },\n    getUniswapSellQuotes: function (makerToken, takerToken, takerFillAmounts) {\n        var _this = this;\n        return {\n            encodeCall: function (contract) {\n                return contract\n                    .sampleSellsFromUniswap(takerToken, makerToken, takerFillAmounts)\n                    .getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, contract.getABIDecodedReturnData('sampleSellsFromUniswap', callResults)];\n                });\n            }); },\n        };\n    },\n    getEth2DaiSellQuotes: function (makerToken, takerToken, takerFillAmounts) {\n        var _this = this;\n        return {\n            encodeCall: function (contract) {\n                return contract\n                    .sampleSellsFromEth2Dai(takerToken, makerToken, takerFillAmounts)\n                    .getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, contract.getABIDecodedReturnData('sampleSellsFromEth2Dai', callResults)];\n                });\n            }); },\n        };\n    },\n    getCurveSellQuotes: function (curveAddress, fromTokenIdx, toTokenIdx, takerFillAmounts) {\n        var _this = this;\n        return {\n            encodeCall: function (contract) {\n                return contract\n                    .sampleSellsFromCurve(curveAddress, new utils_1.BigNumber(fromTokenIdx), new utils_1.BigNumber(toTokenIdx), takerFillAmounts)\n                    .getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, contract.getABIDecodedReturnData('sampleSellsFromCurve', callResults)];\n                });\n            }); },\n        };\n    },\n    getUniswapBuyQuotes: function (makerToken, takerToken, makerFillAmounts) {\n        var _this = this;\n        return {\n            encodeCall: function (contract) {\n                return contract\n                    .sampleBuysFromUniswap(takerToken, makerToken, makerFillAmounts)\n                    .getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, contract.getABIDecodedReturnData('sampleBuysFromUniswap', callResults)];\n                });\n            }); },\n        };\n    },\n    getEth2DaiBuyQuotes: function (makerToken, takerToken, makerFillAmounts) {\n        var _this = this;\n        return {\n            encodeCall: function (contract) {\n                return contract\n                    .sampleBuysFromEth2Dai(takerToken, makerToken, makerFillAmounts)\n                    .getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, contract.getABIDecodedReturnData('sampleBuysFromEth2Dai', callResults)];\n                });\n            }); },\n        };\n    },\n    getMedianSellRate: function (sources, makerToken, takerToken, takerFillAmount) {\n        var _this = this;\n        var getSellQuotes = samplerOperations.getSellQuotes(sources, makerToken, takerToken, [takerFillAmount]);\n        return {\n            encodeCall: function (contract) {\n                var subCalls = [getSellQuotes.encodeCall(contract)];\n                return contract.batchCall(subCalls).getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                var rawSubCallResults, samples, flatSortedSamples, medianSample;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            rawSubCallResults = contract.getABIDecodedReturnData('batchCall', callResults);\n                            return [4 /*yield*/, getSellQuotes.handleCallResultsAsync(contract, rawSubCallResults[0])];\n                        case 1:\n                            samples = _a.sent();\n                            if (samples.length === 0) {\n                                return [2 /*return*/, new utils_1.BigNumber(0)];\n                            }\n                            flatSortedSamples = samples\n                                .reduce(function (acc, v) { return acc.concat.apply(acc, __spread(v)); })\n                                .sort(function (a, b) { return a.output.comparedTo(b.output); });\n                            if (flatSortedSamples.length === 0) {\n                                return [2 /*return*/, new utils_1.BigNumber(0)];\n                            }\n                            medianSample = flatSortedSamples[Math.floor(flatSortedSamples.length / 2)];\n                            return [2 /*return*/, medianSample.output.div(medianSample.input)];\n                    }\n                });\n            }); },\n        };\n    },\n    constant: function (result) {\n        var _this = this;\n        return {\n            encodeCall: function (contract) {\n                return '0x';\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, result];\n                });\n            }); },\n        };\n    },\n    getSellQuotes: function (sources, makerToken, takerToken, takerFillAmounts) {\n        var _this = this;\n        var subOps = sources\n            .map(function (source) {\n            var batchedOperation;\n            if (source === types_1.ERC20BridgeSource.Eth2Dai) {\n                batchedOperation = samplerOperations.getEth2DaiSellQuotes(makerToken, takerToken, takerFillAmounts);\n            }\n            else if (source === types_1.ERC20BridgeSource.Uniswap) {\n                batchedOperation = samplerOperations.getUniswapSellQuotes(makerToken, takerToken, takerFillAmounts);\n            }\n            else if (source === types_1.ERC20BridgeSource.Kyber) {\n                batchedOperation = samplerOperations.getKyberSellQuotes(makerToken, takerToken, takerFillAmounts);\n            }\n            else if (Object.keys(constants_1.constants.DEFAULT_CURVE_OPTS).includes(source)) {\n                var _a = constants_1.constants.DEFAULT_CURVE_OPTS[source], curveAddress = _a.curveAddress, tokens = _a.tokens;\n                var fromTokenIdx = tokens.indexOf(takerToken);\n                var toTokenIdx = tokens.indexOf(makerToken);\n                if (fromTokenIdx !== -1 && toTokenIdx !== -1) {\n                    batchedOperation = samplerOperations.getCurveSellQuotes(curveAddress, fromTokenIdx, toTokenIdx, takerFillAmounts);\n                }\n            }\n            else {\n                throw new Error(\"Unsupported sell sample source: \" + source);\n            }\n            return { batchedOperation: batchedOperation, source: source };\n        })\n            .filter(function (op) { return op.batchedOperation; });\n        return {\n            encodeCall: function (contract) {\n                var subCalls = subOps.map(function (op) { return op.batchedOperation.encodeCall(contract); });\n                return contract.batchCall(subCalls).getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                var rawSubCallResults, samples;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            rawSubCallResults = contract.getABIDecodedReturnData('batchCall', callResults);\n                            return [4 /*yield*/, Promise.all(subOps.map(function (op, i) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                                    return [2 /*return*/, op.batchedOperation.handleCallResultsAsync(contract, rawSubCallResults[i])];\n                                }); }); }))];\n                        case 1:\n                            samples = _a.sent();\n                            return [2 /*return*/, subOps.map(function (op, i) {\n                                    return samples[i].map(function (output, j) { return ({\n                                        source: op.source,\n                                        output: output,\n                                        input: takerFillAmounts[j],\n                                    }); });\n                                })];\n                    }\n                });\n            }); },\n        };\n    },\n    getBuyQuotes: function (sources, makerToken, takerToken, makerFillAmounts) {\n        var _this = this;\n        var subOps = sources.map(function (source) {\n            if (source === types_1.ERC20BridgeSource.Eth2Dai) {\n                return samplerOperations.getEth2DaiBuyQuotes(makerToken, takerToken, makerFillAmounts);\n            }\n            else if (source === types_1.ERC20BridgeSource.Uniswap) {\n                return samplerOperations.getUniswapBuyQuotes(makerToken, takerToken, makerFillAmounts);\n            }\n            else {\n                throw new Error(\"Unsupported buy sample source: \" + source);\n            }\n        });\n        return {\n            encodeCall: function (contract) {\n                var subCalls = subOps.map(function (op) { return op.encodeCall(contract); });\n                return contract.batchCall(subCalls).getABIEncodedTransactionData();\n            },\n            handleCallResultsAsync: function (contract, callResults) { return __awaiter(_this, void 0, void 0, function () {\n                var rawSubCallResults, samples;\n                var _this = this;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            rawSubCallResults = contract.getABIDecodedReturnData('batchCall', callResults);\n                            return [4 /*yield*/, Promise.all(subOps.map(function (op, i) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                                    return [2 /*return*/, op.handleCallResultsAsync(contract, rawSubCallResults[i])];\n                                }); }); }))];\n                        case 1:\n                            samples = _a.sent();\n                            return [2 /*return*/, sources.map(function (source, i) {\n                                    return samples[i].map(function (output, j) { return ({\n                                        source: source,\n                                        output: output,\n                                        input: makerFillAmounts[j],\n                                    }); });\n                                })];\n                    }\n                });\n            }); },\n        };\n    },\n};\n/**\n * Generate sample amounts up to `maxFillAmount`.\n */\nfunction getSampleAmounts(maxFillAmount, numSamples, expBase) {\n    if (expBase === void 0) { expBase = 1; }\n    var distribution = __spread(Array(numSamples)).map(function (v, i) { return new utils_1.BigNumber(expBase).pow(i); });\n    var stepSizes = distribution.map(function (d) { return d.div(utils_1.BigNumber.sum.apply(utils_1.BigNumber, __spread(distribution))); });\n    var amounts = stepSizes.map(function (s, i) {\n        return maxFillAmount\n            .times(utils_1.BigNumber.sum.apply(utils_1.BigNumber, __spread([0], stepSizes.slice(0, i + 1))))\n            .integerValue(utils_1.BigNumber.ROUND_UP);\n    });\n    return amounts;\n}\nexports.getSampleAmounts = getSampleAmounts;\n/**\n * Encapsulates interactions with the `ERC20BridgeSampler` contract.\n */\nvar DexOrderSampler = /** @class */ (function () {\n    function DexOrderSampler(samplerContract) {\n        this._samplerContract = samplerContract;\n    }\n    /**\n     * Run a series of operations from `DexOrderSampler.ops` in a single transaction.\n     */\n    DexOrderSampler.prototype.executeAsync = function () {\n        var ops = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            ops[_i] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.executeBatchAsync(ops)];\n            });\n        });\n    };\n    /**\n     * Run a series of operations from `DexOrderSampler.ops` in a single transaction.\n     * Takes an arbitrary length array, but is not typesafe.\n     */\n    DexOrderSampler.prototype.executeBatchAsync = function (ops) {\n        return __awaiter(this, void 0, void 0, function () {\n            var callDatas, rawCallResults, rawCallResultsIdx;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        callDatas = ops.map(function (o) { return o.encodeCall(_this._samplerContract); });\n                        return [4 /*yield*/, this._samplerContract.batchCall(callDatas.filter(function (cd) { return cd !== '0x'; })).callAsync()];\n                    case 1:\n                        rawCallResults = _a.sent();\n                        rawCallResultsIdx = 0;\n                        return [2 /*return*/, Promise.all(callDatas.map(function (callData, i) { return __awaiter(_this, void 0, void 0, function () {\n                                return __generator(this, function (_a) {\n                                    if (callData !== '0x') {\n                                        return [2 /*return*/, ops[i].handleCallResultsAsync(this._samplerContract, rawCallResults[rawCallResultsIdx++])];\n                                    }\n                                    return [2 /*return*/, ops[i].handleCallResultsAsync(this._samplerContract, '0x')];\n                                });\n                            }); }))];\n                }\n            });\n        });\n    };\n    /**\n     * Composable operations that can be batched in a single transaction,\n     * for use with `DexOrderSampler.executeAsync()`.\n     */\n    DexOrderSampler.ops = samplerOperations;\n    return DexOrderSampler;\n}());\nexports.DexOrderSampler = DexOrderSampler;\n//# sourceMappingURL=sampler.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@0x/utils\");\nvar heartbeats = require(\"heartbeats\");\nvar constants_1 = require(\"../constants\");\nvar types_1 = require(\"../types\");\nvar ProtocolFeeUtils = /** @class */ (function () {\n    function ProtocolFeeUtils(gasPricePollingIntervalInMs, initialGasPrice) {\n        if (initialGasPrice === void 0) { initialGasPrice = constants_1.constants.ZERO_AMOUNT; }\n        this._gasPriceHeart = heartbeats.createHeart(gasPricePollingIntervalInMs);\n        this.gasPriceEstimation = initialGasPrice;\n        this._initializeHeartBeat();\n    }\n    // TODO(dave4506) at some point, we should add a heart beat to the multiplier, or some RPC call to fetch latest multiplier.\n    // tslint:disable-next-line:prefer-function-over-method\n    ProtocolFeeUtils.prototype.getProtocolFeeMultiplierAsync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, constants_1.constants.PROTOCOL_FEE_MULTIPLIER];\n            });\n        });\n    };\n    ProtocolFeeUtils.prototype.getGasPriceEstimationOrThrowAsync = function (shouldHardRefresh) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.gasPriceEstimation.eq(constants_1.constants.ZERO_AMOUNT)) {\n                    return [2 /*return*/, this._getGasPriceFromGasStationOrThrowAsync()];\n                }\n                if (shouldHardRefresh) {\n                    return [2 /*return*/, this._getGasPriceFromGasStationOrThrowAsync()];\n                }\n                else {\n                    return [2 /*return*/, this.gasPriceEstimation];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Destroys any subscriptions or connections.\n     */\n    ProtocolFeeUtils.prototype.destroyAsync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this._gasPriceHeart.kill();\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Calculates protocol fee with protofol fee multiplier for each fill.\n     */\n    ProtocolFeeUtils.prototype.calculateWorstCaseProtocolFeeAsync = function (orders, gasPrice) {\n        return __awaiter(this, void 0, void 0, function () {\n            var protocolFeeMultiplier, protocolFee;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getProtocolFeeMultiplierAsync()];\n                    case 1:\n                        protocolFeeMultiplier = _a.sent();\n                        protocolFee = new utils_1.BigNumber(orders.length).times(protocolFeeMultiplier).times(gasPrice);\n                        return [2 /*return*/, protocolFee];\n                }\n            });\n        });\n    };\n    // tslint:disable-next-line: prefer-function-over-method\n    ProtocolFeeUtils.prototype._getGasPriceFromGasStationOrThrowAsync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var res, gasInfo, BASE_TEN, gasPriceGwei, unit, gasPriceWei, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        return [4 /*yield*/, fetch(constants_1.constants.ETH_GAS_STATION_API_BASE_URL + \"/json/ethgasAPI.json\")];\n                    case 1:\n                        res = _a.sent();\n                        return [4 /*yield*/, res.json()];\n                    case 2:\n                        gasInfo = _a.sent();\n                        BASE_TEN = 10;\n                        gasPriceGwei = new utils_1.BigNumber(gasInfo.fast / BASE_TEN);\n                        unit = new utils_1.BigNumber(BASE_TEN).pow(9);\n                        gasPriceWei = unit.times(gasPriceGwei);\n                        return [2 /*return*/, gasPriceWei];\n                    case 3:\n                        e_1 = _a.sent();\n                        throw new Error(types_1.SwapQuoterError.NoGasPriceProvidedOrEstimated);\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ProtocolFeeUtils.prototype._initializeHeartBeat = function () {\n        var _this = this;\n        this._gasPriceHeart.createEvent(1, function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this._getGasPriceFromGasStationOrThrowAsync()];\n                    case 1:\n                        _a.gasPriceEstimation = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    return ProtocolFeeUtils;\n}());\nexports.ProtocolFeeUtils = ProtocolFeeUtils;\n//# sourceMappingURL=protocol_fee_utils.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"./types\");\n/**\n * Error class representing insufficient asset liquidity\n */\nvar InsufficientAssetLiquidityError = /** @class */ (function (_super) {\n    __extends(InsufficientAssetLiquidityError, _super);\n    /**\n     * @param amountAvailableToFill The amount availabe to fill (in base units) factoring in slippage\n     */\n    function InsufficientAssetLiquidityError(amountAvailableToFill) {\n        var _this = _super.call(this, types_1.SwapQuoterError.InsufficientAssetLiquidity) || this;\n        _this.amountAvailableToFill = amountAvailableToFill;\n        // Setting prototype so instanceof works.  See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(_this, InsufficientAssetLiquidityError.prototype);\n        return _this;\n    }\n    return InsufficientAssetLiquidityError;\n}(Error));\nexports.InsufficientAssetLiquidityError = InsufficientAssetLiquidityError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contract_addresses_1 = require(\"@0x/contract-addresses\");\nvar utils_1 = require(\"@0x/utils\");\nvar _ = require(\"lodash\");\nvar constants_1 = require(\"../constants\");\nvar types_1 = require(\"../types\");\nvar assert_1 = require(\"../utils/assert\");\nvar swap_quote_consumer_utils_1 = require(\"../utils/swap_quote_consumer_utils\");\nvar exchange_swap_quote_consumer_1 = require(\"./exchange_swap_quote_consumer\");\nvar forwarder_swap_quote_consumer_1 = require(\"./forwarder_swap_quote_consumer\");\nvar SwapQuoteConsumer = /** @class */ (function () {\n    function SwapQuoteConsumer(supportedProvider, options) {\n        if (options === void 0) { options = {}; }\n        var chainId = _.merge({}, constants_1.constants.DEFAULT_SWAP_QUOTER_OPTS, options).chainId;\n        assert_1.assert.isNumber('chainId', chainId);\n        var provider = utils_1.providerUtils.standardizeOrThrow(supportedProvider);\n        this.provider = provider;\n        this.chainId = chainId;\n        this._contractAddresses = options.contractAddresses || contract_addresses_1.getContractAddressesForChainOrThrow(chainId);\n        this._exchangeConsumer = new exchange_swap_quote_consumer_1.ExchangeSwapQuoteConsumer(supportedProvider, this._contractAddresses, options);\n        this._forwarderConsumer = new forwarder_swap_quote_consumer_1.ForwarderSwapQuoteConsumer(supportedProvider, this._contractAddresses, options);\n    }\n    SwapQuoteConsumer.getSwapQuoteConsumer = function (supportedProvider, options) {\n        if (options === void 0) { options = {}; }\n        return new SwapQuoteConsumer(supportedProvider, options);\n    };\n    /**\n     * Given a SwapQuote, returns 'CalldataInfo' for a 0x extesion or exchange call. See type definition of CalldataInfo for more information.\n     * @param quote An object that conforms to SwapQuote. See type definition for more information.\n     * @param opts  Options for getting SmartContractParams. See type definition for more information.\n     */\n    SwapQuoteConsumer.prototype.getCalldataOrThrowAsync = function (quote, opts) {\n        if (opts === void 0) { opts = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var consumer;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isValidSwapQuote('quote', quote);\n                        return [4 /*yield*/, this._getConsumerForSwapQuoteAsync(opts)];\n                    case 1:\n                        consumer = _a.sent();\n                        return [2 /*return*/, consumer.getCalldataOrThrowAsync(quote, opts)];\n                }\n            });\n        });\n    };\n    /**\n     * Given a SwapQuote and desired rate (in takerAsset), attempt to execute the swap with 0x extension or exchange contract.\n     * @param quote An object that conforms to SwapQuote. See type definition for more information.\n     * @param opts  Options for getting CalldataInfo. See type definition for more information.\n     */\n    SwapQuoteConsumer.prototype.executeSwapQuoteOrThrowAsync = function (quote, opts) {\n        if (opts === void 0) { opts = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var consumer;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isValidSwapQuote('quote', quote);\n                        return [4 /*yield*/, this._getConsumerForSwapQuoteAsync(opts)];\n                    case 1:\n                        consumer = _a.sent();\n                        return [2 /*return*/, consumer.executeSwapQuoteOrThrowAsync(quote, opts)];\n                }\n            });\n        });\n    };\n    /**\n     * Given a SwapQuote, returns optimal 0x protocol interface (extension or no extension) to perform the swap.\n     * @param quote An object that conforms to SwapQuote. See type definition for more information.\n     * @param opts  Options for getting optimal exteion contract to fill quote. See type definition for more information.\n     */\n    SwapQuoteConsumer.prototype.getOptimalExtensionContractTypeAsync = function (quote, opts) {\n        if (opts === void 0) { opts = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, swap_quote_consumer_utils_1.swapQuoteConsumerUtils.getExtensionContractTypeForSwapQuoteAsync(quote, this._contractAddresses, this.provider, opts)];\n            });\n        });\n    };\n    SwapQuoteConsumer.prototype._getConsumerForSwapQuoteAsync = function (opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (opts.useExtensionContract === types_1.ExtensionContractType.Forwarder) {\n                    return [2 /*return*/, this._forwarderConsumer];\n                }\n                return [2 /*return*/, this._exchangeConsumer];\n            });\n        });\n    };\n    return SwapQuoteConsumer;\n}());\nexports.SwapQuoteConsumer = SwapQuoteConsumer;\n//# sourceMappingURL=swap_quote_consumer.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contract_wrappers_1 = require(\"@0x/contract-wrappers\");\nvar utils_1 = require(\"@0x/utils\");\nvar _ = require(\"lodash\");\nvar constants_1 = require(\"../constants\");\nvar types_1 = require(\"../types\");\nvar assert_1 = require(\"../utils/assert\");\nvar swap_quote_consumer_utils_1 = require(\"../utils/swap_quote_consumer_utils\");\nvar ExchangeSwapQuoteConsumer = /** @class */ (function () {\n    function ExchangeSwapQuoteConsumer(supportedProvider, contractAddresses, options) {\n        if (options === void 0) { options = {}; }\n        var chainId = _.merge({}, constants_1.constants.DEFAULT_SWAP_QUOTER_OPTS, options).chainId;\n        assert_1.assert.isNumber('chainId', chainId);\n        var provider = utils_1.providerUtils.standardizeOrThrow(supportedProvider);\n        this.provider = provider;\n        this.chainId = chainId;\n        this._exchangeContract = new contract_wrappers_1.ExchangeContract(contractAddresses.exchange, supportedProvider);\n    }\n    ExchangeSwapQuoteConsumer.prototype.getCalldataOrThrowAsync = function (quote, _opts) {\n        if (_opts === void 0) { _opts = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var orders, signatures, calldataHexString;\n            return __generator(this, function (_a) {\n                assert_1.assert.isValidSwapQuote('quote', quote);\n                orders = quote.orders;\n                signatures = _.map(orders, function (o) { return o.signature; });\n                if (quote.type === types_1.MarketOperation.Buy) {\n                    calldataHexString = this._exchangeContract\n                        .marketBuyOrdersFillOrKill(orders, quote.makerAssetFillAmount, signatures)\n                        .getABIEncodedTransactionData();\n                }\n                else {\n                    calldataHexString = this._exchangeContract\n                        .marketSellOrdersFillOrKill(orders, quote.takerAssetFillAmount, signatures)\n                        .getABIEncodedTransactionData();\n                }\n                return [2 /*return*/, {\n                        calldataHexString: calldataHexString,\n                        ethAmount: quote.worstCaseQuoteInfo.protocolFeeInWeiAmount,\n                        toAddress: this._exchangeContract.address,\n                    }];\n            });\n        });\n    };\n    ExchangeSwapQuoteConsumer.prototype.executeSwapQuoteOrThrowAsync = function (quote, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var takerAddress, gasLimit, ethAmount, orders, gasPrice, signatures, finalTakerAddress, value, txHash, makerAssetFillAmount, takerAssetFillAmount;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isValidSwapQuote('quote', quote);\n                        takerAddress = opts.takerAddress, gasLimit = opts.gasLimit, ethAmount = opts.ethAmount;\n                        if (takerAddress !== undefined) {\n                            assert_1.assert.isETHAddressHex('takerAddress', takerAddress);\n                        }\n                        if (gasLimit !== undefined) {\n                            assert_1.assert.isNumber('gasLimit', gasLimit);\n                        }\n                        if (ethAmount !== undefined) {\n                            assert_1.assert.isBigNumber('ethAmount', ethAmount);\n                        }\n                        orders = quote.orders, gasPrice = quote.gasPrice;\n                        signatures = orders.map(function (o) { return o.signature; });\n                        return [4 /*yield*/, swap_quote_consumer_utils_1.swapQuoteConsumerUtils.getTakerAddressOrThrowAsync(this.provider, opts)];\n                    case 1:\n                        finalTakerAddress = _a.sent();\n                        value = ethAmount || quote.worstCaseQuoteInfo.protocolFeeInWeiAmount;\n                        if (!(quote.type === types_1.MarketOperation.Buy)) return [3 /*break*/, 3];\n                        makerAssetFillAmount = quote.makerAssetFillAmount;\n                        return [4 /*yield*/, this._exchangeContract\n                                .marketBuyOrdersFillOrKill(orders, makerAssetFillAmount, signatures)\n                                .sendTransactionAsync({\n                                from: finalTakerAddress,\n                                gas: gasLimit,\n                                gasPrice: gasPrice,\n                                value: value,\n                            })];\n                    case 2:\n                        txHash = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 3:\n                        takerAssetFillAmount = quote.takerAssetFillAmount;\n                        return [4 /*yield*/, this._exchangeContract\n                                .marketSellOrdersFillOrKill(orders, takerAssetFillAmount, signatures)\n                                .sendTransactionAsync({\n                                from: finalTakerAddress,\n                                gas: gasLimit,\n                                gasPrice: gasPrice,\n                                value: value,\n                            })];\n                    case 4:\n                        txHash = _a.sent();\n                        _a.label = 5;\n                    case 5: \n                    // TODO(dorothy-zbornak): Handle signature request denied\n                    // (see contract-wrappers/decorators)\n                    // and ExchangeRevertErrors.IncompleteFillError.\n                    return [2 /*return*/, txHash];\n                }\n            });\n        });\n    };\n    return ExchangeSwapQuoteConsumer;\n}());\nexports.ExchangeSwapQuoteConsumer = ExchangeSwapQuoteConsumer;\n//# sourceMappingURL=exchange_swap_quote_consumer.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contract_wrappers_1 = require(\"@0x/contract-wrappers\");\nvar order_utils_1 = require(\"@0x/order-utils\");\nvar utils_1 = require(\"@0x/utils\");\nvar _ = require(\"lodash\");\nvar constants_1 = require(\"../constants\");\nvar types_1 = require(\"../types\");\nvar affiliate_fee_utils_1 = require(\"../utils/affiliate_fee_utils\");\nvar assert_1 = require(\"../utils/assert\");\nvar swap_quote_consumer_utils_1 = require(\"../utils/swap_quote_consumer_utils\");\nvar ForwarderSwapQuoteConsumer = /** @class */ (function () {\n    function ForwarderSwapQuoteConsumer(supportedProvider, contractAddresses, options) {\n        if (options === void 0) { options = {}; }\n        var chainId = _.merge({}, constants_1.constants.DEFAULT_SWAP_QUOTER_OPTS, options).chainId;\n        assert_1.assert.isNumber('chainId', chainId);\n        var provider = utils_1.providerUtils.standardizeOrThrow(supportedProvider);\n        this.provider = provider;\n        this.chainId = chainId;\n        this._contractAddresses = contractAddresses;\n        this._forwarder = new contract_wrappers_1.ForwarderContract(contractAddresses.forwarder, supportedProvider);\n    }\n    /**\n     * Given a SwapQuote, returns 'CalldataInfo' for a forwarder extension call. See type definition of CalldataInfo for more information.\n     * @param quote An object that conforms to SwapQuote. See type definition for more information.\n     * @param opts  Options for getting CalldataInfo. See type definition for more information.\n     */\n    ForwarderSwapQuoteConsumer.prototype.getCalldataOrThrowAsync = function (quote, opts) {\n        if (opts === void 0) { opts = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var extensionContractOpts, feeRecipient, feePercentage, orders, worstCaseQuoteInfo, normalizedFeeRecipientAddress, signatures, ethAmountWithFees, feeAmount, calldataHexString;\n            return __generator(this, function (_a) {\n                assert_1.assert.isValidForwarderSwapQuote('quote', quote, this._getEtherTokenAssetDataOrThrow());\n                extensionContractOpts = __assign({}, constants_1.constants.DEFAULT_FORWARDER_SWAP_QUOTE_GET_OPTS, opts).extensionContractOpts;\n                assert_1.assert.isValidForwarderExtensionContractOpts('extensionContractOpts', extensionContractOpts);\n                feeRecipient = extensionContractOpts.feeRecipient, feePercentage = extensionContractOpts.feePercentage;\n                orders = quote.orders, worstCaseQuoteInfo = quote.worstCaseQuoteInfo;\n                normalizedFeeRecipientAddress = feeRecipient.toLowerCase();\n                signatures = _.map(orders, function (o) { return o.signature; });\n                ethAmountWithFees = affiliate_fee_utils_1.affiliateFeeUtils.getTotalEthAmountWithAffiliateFee(worstCaseQuoteInfo, feePercentage);\n                feeAmount = affiliate_fee_utils_1.affiliateFeeUtils.getFeeAmount(worstCaseQuoteInfo, feePercentage);\n                if (quote.type === types_1.MarketOperation.Buy) {\n                    calldataHexString = this._forwarder\n                        .marketBuyOrdersWithEth(orders, quote.makerAssetFillAmount, signatures, [feeAmount], [normalizedFeeRecipientAddress])\n                        .getABIEncodedTransactionData();\n                }\n                else {\n                    calldataHexString = this._forwarder\n                        .marketSellOrdersWithEth(orders, signatures, [feeAmount], [normalizedFeeRecipientAddress])\n                        .getABIEncodedTransactionData();\n                }\n                return [2 /*return*/, {\n                        calldataHexString: calldataHexString,\n                        toAddress: this._forwarder.address,\n                        ethAmount: ethAmountWithFees,\n                    }];\n            });\n        });\n    };\n    /**\n     * Given a SwapQuote and desired rate (in Eth), attempt to execute the swap.\n     * @param quote An object that conforms to SwapQuote. See type definition for more information.\n     * @param opts  Options for getting CalldataInfo. See type definition for more information.\n     */\n    ForwarderSwapQuoteConsumer.prototype.executeSwapQuoteOrThrowAsync = function (quote, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providedEthAmount, takerAddress, gasLimit, extensionContractOpts, feeRecipient, feePercentage, orders, gasPrice, signatures, finalTakerAddress, ethAmountWithFees, feeAmount, txHash, makerAssetFillAmount;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        assert_1.assert.isValidForwarderSwapQuote('quote', quote, this._getEtherTokenAssetDataOrThrow());\n                        _a = __assign({}, constants_1.constants.DEFAULT_FORWARDER_SWAP_QUOTE_EXECUTE_OPTS, opts), providedEthAmount = _a.ethAmount, takerAddress = _a.takerAddress, gasLimit = _a.gasLimit, extensionContractOpts = _a.extensionContractOpts;\n                        assert_1.assert.isValidForwarderExtensionContractOpts('extensionContractOpts', extensionContractOpts);\n                        feeRecipient = extensionContractOpts.feeRecipient, feePercentage = extensionContractOpts.feePercentage;\n                        if (providedEthAmount !== undefined) {\n                            assert_1.assert.isBigNumber('ethAmount', providedEthAmount);\n                        }\n                        if (takerAddress !== undefined) {\n                            assert_1.assert.isETHAddressHex('takerAddress', takerAddress);\n                        }\n                        if (gasLimit !== undefined) {\n                            assert_1.assert.isNumber('gasLimit', gasLimit);\n                        }\n                        orders = quote.orders, gasPrice = quote.gasPrice;\n                        signatures = orders.map(function (o) { return o.signature; });\n                        return [4 /*yield*/, swap_quote_consumer_utils_1.swapQuoteConsumerUtils.getTakerAddressOrThrowAsync(this.provider, opts)];\n                    case 1:\n                        finalTakerAddress = _b.sent();\n                        ethAmountWithFees = providedEthAmount ||\n                            affiliate_fee_utils_1.affiliateFeeUtils.getTotalEthAmountWithAffiliateFee(quote.worstCaseQuoteInfo, feePercentage);\n                        feeAmount = affiliate_fee_utils_1.affiliateFeeUtils.getFeeAmount(quote.worstCaseQuoteInfo, feePercentage);\n                        if (!(quote.type === types_1.MarketOperation.Buy)) return [3 /*break*/, 3];\n                        makerAssetFillAmount = quote.makerAssetFillAmount;\n                        return [4 /*yield*/, this._forwarder\n                                .marketBuyOrdersWithEth(orders, makerAssetFillAmount, signatures, [feeAmount], [feeRecipient])\n                                .sendTransactionAsync({\n                                from: finalTakerAddress,\n                                gas: gasLimit,\n                                gasPrice: gasPrice,\n                                value: ethAmountWithFees,\n                            })];\n                    case 2:\n                        txHash = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, this._forwarder\n                            .marketSellOrdersWithEth(orders, signatures, [feeAmount], [feeRecipient])\n                            .sendTransactionAsync({\n                            from: finalTakerAddress,\n                            gas: gasLimit,\n                            gasPrice: gasPrice,\n                            value: ethAmountWithFees,\n                        })];\n                    case 4:\n                        txHash = _b.sent();\n                        _b.label = 5;\n                    case 5: \n                    // TODO(dorothy-zbornak): Handle signature request denied\n                    // (see contract-wrappers/decorators)\n                    // and ForwarderRevertErrors.CompleteBuyFailed.\n                    return [2 /*return*/, txHash];\n                }\n            });\n        });\n    };\n    ForwarderSwapQuoteConsumer.prototype._getEtherTokenAssetDataOrThrow = function () {\n        return order_utils_1.assetDataUtils.encodeERC20AssetData(this._contractAddresses.etherToken);\n    };\n    return ForwarderSwapQuoteConsumer;\n}());\nexports.ForwarderSwapQuoteConsumer = ForwarderSwapQuoteConsumer;\n//# sourceMappingURL=forwarder_swap_quote_consumer.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contract_addresses_1 = require(\"@0x/contract-addresses\");\nvar contract_wrappers_1 = require(\"@0x/contract-wrappers\");\nvar json_schemas_1 = require(\"@0x/json-schemas\");\nvar order_utils_1 = require(\"@0x/order-utils\");\nvar orderbook_1 = require(\"@0x/orderbook\");\nvar utils_1 = require(\"@0x/utils\");\nvar _ = require(\"lodash\");\nvar constants_1 = require(\"./constants\");\nvar types_1 = require(\"./types\");\nvar assert_1 = require(\"./utils/assert\");\nvar calculate_liquidity_1 = require(\"./utils/calculate_liquidity\");\nvar market_operation_utils_1 = require(\"./utils/market_operation_utils\");\nvar dummy_order_utils_1 = require(\"./utils/market_operation_utils/dummy_order_utils\");\nvar order_prune_utils_1 = require(\"./utils/order_prune_utils\");\nvar order_state_utils_1 = require(\"./utils/order_state_utils\");\nvar protocol_fee_utils_1 = require(\"./utils/protocol_fee_utils\");\nvar sorting_utils_1 = require(\"./utils/sorting_utils\");\nvar swap_quote_calculator_1 = require(\"./utils/swap_quote_calculator\");\nvar SwapQuoter = /** @class */ (function () {\n    /**\n     * Instantiates a new SwapQuoter instance\n     * @param   supportedProvider   The Provider instance you would like to use for interacting with the Ethereum network.\n     * @param   orderbook           An object that conforms to Orderbook, see type for definition.\n     * @param   options             Initialization options for the SwapQuoter. See type definition for details.\n     *\n     * @return  An instance of SwapQuoter\n     */\n    function SwapQuoter(supportedProvider, orderbook, options) {\n        if (options === void 0) { options = {}; }\n        var _a = _.merge({}, constants_1.constants.DEFAULT_SWAP_QUOTER_OPTS, options), chainId = _a.chainId, expiryBufferMs = _a.expiryBufferMs, permittedOrderFeeTypes = _a.permittedOrderFeeTypes, samplerGasLimit = _a.samplerGasLimit;\n        var provider = utils_1.providerUtils.standardizeOrThrow(supportedProvider);\n        assert_1.assert.isValidOrderbook('orderbook', orderbook);\n        assert_1.assert.isNumber('chainId', chainId);\n        assert_1.assert.isNumber('expiryBufferMs', expiryBufferMs);\n        this.chainId = chainId;\n        this.provider = provider;\n        this.orderbook = orderbook;\n        this.expiryBufferMs = expiryBufferMs;\n        this.permittedOrderFeeTypes = permittedOrderFeeTypes;\n        this._contractAddresses = options.contractAddresses || contract_addresses_1.getContractAddressesForChainOrThrow(chainId);\n        this._devUtilsContract = new contract_wrappers_1.DevUtilsContract(this._contractAddresses.devUtils, provider);\n        this._protocolFeeUtils = new protocol_fee_utils_1.ProtocolFeeUtils(constants_1.constants.PROTOCOL_FEE_UTILS_POLLING_INTERVAL_IN_MS);\n        this._orderStateUtils = new order_state_utils_1.OrderStateUtils(this._devUtilsContract);\n        var sampler = new market_operation_utils_1.DexOrderSampler(new contract_wrappers_1.IERC20BridgeSamplerContract(this._contractAddresses.erc20BridgeSampler, this.provider, {\n            gas: samplerGasLimit,\n        }));\n        this._marketOperationUtils = new market_operation_utils_1.MarketOperationUtils(sampler, this._contractAddresses, {\n            chainId: chainId,\n            exchangeAddress: this._contractAddresses.exchange,\n        });\n        this._swapQuoteCalculator = new swap_quote_calculator_1.SwapQuoteCalculator(this._protocolFeeUtils, this._marketOperationUtils);\n    }\n    /**\n     * Instantiates a new SwapQuoter instance given existing liquidity in the form of orders and feeOrders.\n     * @param   supportedProvider   The Provider instance you would like to use for interacting with the Ethereum network.\n     * @param   orders              A non-empty array of objects that conform to SignedOrder. All orders must have the same makerAssetData and takerAssetData.\n     * @param   options             Initialization options for the SwapQuoter. See type definition for details.\n     *\n     * @return  An instance of SwapQuoter\n     */\n    SwapQuoter.getSwapQuoterForProvidedOrders = function (supportedProvider, orders, options) {\n        if (options === void 0) { options = {}; }\n        assert_1.assert.doesConformToSchema('orders', orders, json_schemas_1.schemas.signedOrdersSchema);\n        assert_1.assert.assert(orders.length !== 0, \"Expected orders to contain at least one order\");\n        var orderbook = orderbook_1.Orderbook.getOrderbookForProvidedOrders(orders);\n        var swapQuoter = new SwapQuoter(supportedProvider, orderbook, options);\n        return swapQuoter;\n    };\n    /**\n     * Instantiates a new SwapQuoter instance given a [Standard Relayer API](https://github.com/0xProject/standard-relayer-api) endpoint\n     * @param   supportedProvider  The Provider instance you would like to use for interacting with the Ethereum network.\n     * @param   sraApiUrl          The standard relayer API base HTTP url you would like to source orders from.\n     * @param   options            Initialization options for the SwapQuoter. See type definition for details.\n     *\n     * @return  An instance of SwapQuoter\n     */\n    SwapQuoter.getSwapQuoterForStandardRelayerAPIUrl = function (supportedProvider, sraApiUrl, options) {\n        if (options === void 0) { options = {}; }\n        var provider = utils_1.providerUtils.standardizeOrThrow(supportedProvider);\n        assert_1.assert.isWebUri('sraApiUrl', sraApiUrl);\n        var orderbook = orderbook_1.Orderbook.getOrderbookForPollingProvider({\n            httpEndpoint: sraApiUrl,\n            pollingIntervalMs: options.orderRefreshIntervalMs || constants_1.constants.DEFAULT_SWAP_QUOTER_OPTS.orderRefreshIntervalMs,\n            perPage: options.perPage || constants_1.constants.DEFAULT_PER_PAGE,\n        });\n        var swapQuoter = new SwapQuoter(provider, orderbook, options);\n        return swapQuoter;\n    };\n    /**\n     * Instantiates a new SwapQuoter instance given a [Standard Relayer API](https://github.com/0xProject/standard-relayer-api) endpoint\n     * and a websocket endpoint. This is more effecient than `getSwapQuoterForStandardRelayerAPIUrl` when requesting multiple quotes.\n     * @param   supportedProvider    The Provider instance you would like to use for interacting with the Ethereum network.\n     * @param   sraApiUrl            The standard relayer API base HTTP url you would like to source orders from.\n     * @param   sraWebsocketApiUrl   The standard relayer API Websocket url you would like to subscribe to.\n     * @param   options              Initialization options for the SwapQuoter. See type definition for details.\n     *\n     * @return  An instance of SwapQuoter\n     */\n    SwapQuoter.getSwapQuoterForStandardRelayerAPIWebsocket = function (supportedProvider, sraApiUrl, sraWebsocketAPIUrl, options) {\n        if (options === void 0) { options = {}; }\n        var provider = utils_1.providerUtils.standardizeOrThrow(supportedProvider);\n        assert_1.assert.isWebUri('sraApiUrl', sraApiUrl);\n        assert_1.assert.isUri('sraWebsocketAPIUrl', sraWebsocketAPIUrl);\n        var orderbook = orderbook_1.Orderbook.getOrderbookForWebsocketProvider({\n            httpEndpoint: sraApiUrl,\n            websocketEndpoint: sraWebsocketAPIUrl,\n        });\n        var swapQuoter = new SwapQuoter(provider, orderbook, options);\n        return swapQuoter;\n    };\n    /**\n     * Instantiates a new SwapQuoter instance given a 0x Mesh endpoint. This pulls all available liquidity stored in Mesh\n     * @param   supportedProvider The Provider instance you would like to use for interacting with the Ethereum network.\n     * @param   meshEndpoint      The standard relayer API base HTTP url you would like to source orders from.\n     * @param   options           Initialization options for the SwapQuoter. See type definition for details.\n     *\n     * @return  An instance of SwapQuoter\n     */\n    SwapQuoter.getSwapQuoterForMeshEndpoint = function (supportedProvider, meshEndpoint, options) {\n        if (options === void 0) { options = {}; }\n        var provider = utils_1.providerUtils.standardizeOrThrow(supportedProvider);\n        assert_1.assert.isUri('meshEndpoint', meshEndpoint);\n        var orderbook = orderbook_1.Orderbook.getOrderbookForMeshProvider({\n            websocketEndpoint: meshEndpoint,\n            wsOpts: options.wsOpts,\n        });\n        var swapQuoter = new SwapQuoter(provider, orderbook, options);\n        return swapQuoter;\n    };\n    /**\n     * Get a `SwapQuote` containing all information relevant to fulfilling a swap between a desired ERC20 token address and ERC20 owned by a provided address.\n     * You can then pass the `SwapQuote` to a `SwapQuoteConsumer` to execute a buy, or process SwapQuote for on-chain consumption.\n     * @param   makerAssetData           The makerAssetData of the desired asset to swap for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     * @param   takerAssetData           The takerAssetData of the asset to swap makerAssetData for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     * @param   takerAssetSellAmount     The amount of taker asset to swap for.\n     * @param   options                  Options for the request. See type definition for more information.\n     *\n     * @return  An object that conforms to SwapQuote that satisfies the request. See type definition for more information.\n     */\n    SwapQuoter.prototype.getMarketSellSwapQuoteForAssetDataAsync = function (makerAssetData, takerAssetData, takerAssetSellAmount, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isBigNumber('takerAssetSellAmount', takerAssetSellAmount);\n                        return [4 /*yield*/, this._getSwapQuoteAsync(makerAssetData, takerAssetData, takerAssetSellAmount, types_1.MarketOperation.Sell, options)];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    /**\n     * Get a `SwapQuote` containing all information relevant to fulfilling a swap between a desired ERC20 token address and ERC20 owned by a provided address.\n     * You can then pass the `SwapQuote` to a `SwapQuoteConsumer` to execute a buy, or process SwapQuote for on-chain consumption.\n     * @param   makerAssetData           The makerAssetData of the desired asset to swap for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     * @param   takerAssetData           The takerAssetData of the asset to swap makerAssetData for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     * @param   makerAssetBuyAmount     The amount of maker asset to swap for.\n     * @param   options                  Options for the request. See type definition for more information.\n     *\n     * @return  An object that conforms to SwapQuote that satisfies the request. See type definition for more information.\n     */\n    SwapQuoter.prototype.getMarketBuySwapQuoteForAssetDataAsync = function (makerAssetData, takerAssetData, makerAssetBuyAmount, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isBigNumber('makerAssetBuyAmount', makerAssetBuyAmount);\n                        return [4 /*yield*/, this._getSwapQuoteAsync(makerAssetData, takerAssetData, makerAssetBuyAmount, types_1.MarketOperation.Buy, options)];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    SwapQuoter.prototype.getBatchMarketBuySwapQuoteForAssetDataAsync = function (makerAssetDatas, takerAssetData, makerAssetBuyAmount, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var gasPrice, _a, slippagePercentage, calculateSwapQuoteOpts, apiOrders, allOrders, allPrunedOrders, swapQuotes;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        makerAssetBuyAmount.map(function (a, i) { return assert_1.assert.isBigNumber(\"makerAssetBuyAmount[\" + i + \"]\", a); });\n                        _a = _.merge({}, constants_1.constants.DEFAULT_SWAP_QUOTE_REQUEST_OPTS, options), slippagePercentage = _a.slippagePercentage, calculateSwapQuoteOpts = __rest(_a, [\"slippagePercentage\"]);\n                        if (!!!options.gasPrice) return [3 /*break*/, 1];\n                        gasPrice = options.gasPrice;\n                        assert_1.assert.isBigNumber('gasPrice', gasPrice);\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this._protocolFeeUtils.getGasPriceEstimationOrThrowAsync()];\n                    case 2:\n                        gasPrice = _b.sent();\n                        _b.label = 3;\n                    case 3: return [4 /*yield*/, this.orderbook.getBatchOrdersAsync(makerAssetDatas, [takerAssetData])];\n                    case 4:\n                        apiOrders = _b.sent();\n                        allOrders = apiOrders.map(function (orders) { return orders.map(function (o) { return o.order; }); });\n                        allPrunedOrders = allOrders.map(function (orders, i) {\n                            var prunedOrders = order_prune_utils_1.orderPrunerUtils.pruneForUsableSignedOrders(orders, _this.permittedOrderFeeTypes, _this.expiryBufferMs);\n                            if (prunedOrders.length === 0) {\n                                return [\n                                    dummy_order_utils_1.dummyOrderUtils.createDummyOrderForSampler(makerAssetDatas[i], takerAssetData, _this._contractAddresses.uniswapBridge),\n                                ];\n                            }\n                            else {\n                                return sorting_utils_1.sortingUtils.sortOrders(prunedOrders);\n                            }\n                        });\n                        return [4 /*yield*/, this._swapQuoteCalculator.calculateBatchMarketBuySwapQuoteAsync(allPrunedOrders, makerAssetBuyAmount, slippagePercentage, gasPrice, calculateSwapQuoteOpts)];\n                    case 5:\n                        swapQuotes = _b.sent();\n                        return [2 /*return*/, swapQuotes];\n                }\n            });\n        });\n    };\n    /**\n     * Get a `SwapQuote` containing all information relevant to fulfilling a swap between a desired ERC20 token address and ERC20 owned by a provided address.\n     * You can then pass the `SwapQuote` to a `SwapQuoteConsumer` to execute a buy, or process SwapQuote for on-chain consumption.\n     * @param   makerTokenAddress       The address of the maker asset\n     * @param   takerTokenAddress       The address of the taker asset\n     * @param   makerAssetBuyAmount     The amount of maker asset to swap for.\n     * @param   options                 Options for the request. See type definition for more information.\n     *\n     * @return  An object that conforms to SwapQuote that satisfies the request. See type definition for more information.\n     */\n    SwapQuoter.prototype.getMarketBuySwapQuoteAsync = function (makerTokenAddress, takerTokenAddress, makerAssetBuyAmount, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var makerAssetData, takerAssetData, swapQuote;\n            return __generator(this, function (_a) {\n                assert_1.assert.isETHAddressHex('makerTokenAddress', makerTokenAddress);\n                assert_1.assert.isETHAddressHex('takerTokenAddress', takerTokenAddress);\n                assert_1.assert.isBigNumber('makerAssetBuyAmount', makerAssetBuyAmount);\n                makerAssetData = order_utils_1.assetDataUtils.encodeERC20AssetData(makerTokenAddress);\n                takerAssetData = order_utils_1.assetDataUtils.encodeERC20AssetData(takerTokenAddress);\n                swapQuote = this.getMarketBuySwapQuoteForAssetDataAsync(makerAssetData, takerAssetData, makerAssetBuyAmount, options);\n                return [2 /*return*/, swapQuote];\n            });\n        });\n    };\n    /**\n     * Get a `SwapQuote` containing all information relevant to fulfilling a swap between a desired ERC20 token address and ERC20 owned by a provided address.\n     * You can then pass the `SwapQuote` to a `SwapQuoteConsumer` to execute a buy, or process SwapQuote for on-chain consumption.\n     * @param   makerTokenAddress       The address of the maker asset\n     * @param   takerTokenAddress       The address of the taker asset\n     * @param   takerAssetSellAmount     The amount of taker asset to sell.\n     * @param   options                  Options for the request. See type definition for more information.\n     *\n     * @return  An object that conforms to SwapQuote that satisfies the request. See type definition for more information.\n     */\n    SwapQuoter.prototype.getMarketSellSwapQuoteAsync = function (makerTokenAddress, takerTokenAddress, takerAssetSellAmount, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var makerAssetData, takerAssetData, swapQuote;\n            return __generator(this, function (_a) {\n                assert_1.assert.isETHAddressHex('makerTokenAddress', makerTokenAddress);\n                assert_1.assert.isETHAddressHex('takerTokenAddress', takerTokenAddress);\n                assert_1.assert.isBigNumber('takerAssetSellAmount', takerAssetSellAmount);\n                makerAssetData = order_utils_1.assetDataUtils.encodeERC20AssetData(makerTokenAddress);\n                takerAssetData = order_utils_1.assetDataUtils.encodeERC20AssetData(takerTokenAddress);\n                swapQuote = this.getMarketSellSwapQuoteForAssetDataAsync(makerAssetData, takerAssetData, takerAssetSellAmount, options);\n                return [2 /*return*/, swapQuote];\n            });\n        });\n    };\n    /**\n     * Returns information about available liquidity for an asset\n     * Does not factor in slippage or fees\n     * @param   makerAssetData      The makerAssetData of the desired asset to swap for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     * @param   takerAssetData      The takerAssetData of the asset to swap makerAssetData for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     *\n     * @return  An object that conforms to LiquidityForTakerMakerAssetDataPair that satisfies the request. See type definition for more information.\n     */\n    SwapQuoter.prototype.getLiquidityForMakerTakerAssetDataPairAsync = function (makerAssetData, takerAssetData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var assetPairs, ordersWithFillableAmounts;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isString('makerAssetData', makerAssetData);\n                        assert_1.assert.isString('takerAssetData', takerAssetData);\n                        order_utils_1.assetDataUtils.decodeAssetDataOrThrow(takerAssetData);\n                        order_utils_1.assetDataUtils.decodeAssetDataOrThrow(makerAssetData);\n                        return [4 /*yield*/, this.getAvailableMakerAssetDatasAsync(takerAssetData)];\n                    case 1:\n                        assetPairs = _a.sent();\n                        if (!assetPairs.includes(makerAssetData)) {\n                            return [2 /*return*/, {\n                                    makerAssetAvailableInBaseUnits: new utils_1.BigNumber(0),\n                                    takerAssetAvailableInBaseUnits: new utils_1.BigNumber(0),\n                                }];\n                        }\n                        return [4 /*yield*/, this.getSignedOrdersWithFillableAmountsAsync(makerAssetData, takerAssetData)];\n                    case 2:\n                        ordersWithFillableAmounts = _a.sent();\n                        return [2 /*return*/, calculate_liquidity_1.calculateLiquidity(ordersWithFillableAmounts)];\n                }\n            });\n        });\n    };\n    /**\n     * Get the asset data of all assets that can be used to purchase makerAssetData in the order provider passed in at init.\n     *\n     * @return  An array of asset data strings that can purchase makerAssetData.\n     */\n    SwapQuoter.prototype.getAvailableTakerAssetDatasAsync = function (makerAssetData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var allAssetPairs, assetPairs;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isString('makerAssetData', makerAssetData);\n                        order_utils_1.assetDataUtils.decodeAssetDataOrThrow(makerAssetData);\n                        return [4 /*yield*/, this.orderbook.getAvailableAssetDatasAsync()];\n                    case 1:\n                        allAssetPairs = _a.sent();\n                        assetPairs = allAssetPairs\n                            .filter(function (pair) { return pair.assetDataA.assetData === makerAssetData; })\n                            .map(function (pair) { return pair.assetDataB.assetData; });\n                        return [2 /*return*/, assetPairs];\n                }\n            });\n        });\n    };\n    /**\n     * Get the asset data of all assets that are purchaseable with takerAssetData in the order provider passed in at init.\n     *\n     * @return  An array of asset data strings that are purchaseable with takerAssetData.\n     */\n    SwapQuoter.prototype.getAvailableMakerAssetDatasAsync = function (takerAssetData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var allAssetPairs, assetPairs;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isString('takerAssetData', takerAssetData);\n                        order_utils_1.assetDataUtils.decodeAssetDataOrThrow(takerAssetData);\n                        return [4 /*yield*/, this.orderbook.getAvailableAssetDatasAsync()];\n                    case 1:\n                        allAssetPairs = _a.sent();\n                        assetPairs = allAssetPairs\n                            .filter(function (pair) { return pair.assetDataB.assetData === takerAssetData; })\n                            .map(function (pair) { return pair.assetDataA.assetData; });\n                        return [2 /*return*/, assetPairs];\n                }\n            });\n        });\n    };\n    /**\n     * Validates the taker + maker asset pair is available from the order provider provided to `SwapQuote`.\n     * @param   makerAssetData      The makerAssetData of the desired asset to swap for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     * @param   takerAssetData      The takerAssetData of the asset to swap makerAssetData for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     *\n     * @return  A boolean on if the taker, maker pair exists\n     */\n    SwapQuoter.prototype.isTakerMakerAssetDataPairAvailableAsync = function (makerAssetData, takerAssetData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var availableMakerAssetDatas;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isString('makerAssetData', makerAssetData);\n                        assert_1.assert.isString('takerAssetData', takerAssetData);\n                        order_utils_1.assetDataUtils.decodeAssetDataOrThrow(takerAssetData);\n                        order_utils_1.assetDataUtils.decodeAssetDataOrThrow(makerAssetData);\n                        return [4 /*yield*/, this.getAvailableMakerAssetDatasAsync(takerAssetData)];\n                    case 1:\n                        availableMakerAssetDatas = _a.sent();\n                        return [2 /*return*/, _.includes(availableMakerAssetDatas, makerAssetData)];\n                }\n            });\n        });\n    };\n    /**\n     * Grab orders from the order provider, prunes for valid orders with provided OrderPruner options\n     * @param   makerAssetData      The makerAssetData of the desired asset to swap for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     * @param   takerAssetData      The takerAssetData of the asset to swap makerAssetData for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     */\n    SwapQuoter.prototype.getSignedOrdersWithFillableAmountsAsync = function (makerAssetData, takerAssetData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var apiOrders, orders, prunedOrders, sortedPrunedOrders, ordersWithFillableAmounts;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isString('makerAssetData', makerAssetData);\n                        assert_1.assert.isString('takerAssetData', takerAssetData);\n                        order_utils_1.assetDataUtils.decodeAssetDataOrThrow(takerAssetData);\n                        order_utils_1.assetDataUtils.decodeAssetDataOrThrow(makerAssetData);\n                        return [4 /*yield*/, this.orderbook.getOrdersAsync(makerAssetData, takerAssetData)];\n                    case 1:\n                        apiOrders = _a.sent();\n                        orders = _.map(apiOrders, function (o) { return o.order; });\n                        prunedOrders = order_prune_utils_1.orderPrunerUtils.pruneForUsableSignedOrders(orders, this.permittedOrderFeeTypes, this.expiryBufferMs);\n                        sortedPrunedOrders = sorting_utils_1.sortingUtils.sortOrders(prunedOrders);\n                        return [4 /*yield*/, this._orderStateUtils.getSignedOrdersWithFillableAmountsAsync(sortedPrunedOrders)];\n                    case 2:\n                        ordersWithFillableAmounts = _a.sent();\n                        return [2 /*return*/, ordersWithFillableAmounts];\n                }\n            });\n        });\n    };\n    /**\n     * Util function to check if takerAddress's allowance is enough for 0x exchange contracts to conduct the swap specified by the swapQuote.\n     * @param swapQuote The swapQuote in question to check enough allowance enabled for 0x exchange contracts to conduct the swap.\n     * @param takerAddress The address of the taker of the provided swapQuote\n     */\n    SwapQuoter.prototype.isSwapQuoteFillableByTakerAddressAsync = function (swapQuote, takerAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var balanceAndAllowance;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._devUtilsContract\n                            .getBalanceAndAssetProxyAllowance(takerAddress, swapQuote.takerAssetData)\n                            .callAsync()];\n                    case 1:\n                        balanceAndAllowance = _a.sent();\n                        return [2 /*return*/, [\n                                balanceAndAllowance[1].isGreaterThanOrEqualTo(swapQuote.bestCaseQuoteInfo.totalTakerAssetAmount),\n                                balanceAndAllowance[1].isGreaterThanOrEqualTo(swapQuote.worstCaseQuoteInfo.totalTakerAssetAmount),\n                            ]];\n                }\n            });\n        });\n    };\n    /**\n     * Destroys any subscriptions or connections.\n     */\n    SwapQuoter.prototype.destroyAsync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._protocolFeeUtils.destroyAsync()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.orderbook.destroyAsync()];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Utility function to get assetData for Ether token.\n     */\n    SwapQuoter.prototype.getEtherTokenAssetDataOrThrowAsync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, order_utils_1.assetDataUtils.encodeERC20AssetData(this._contractAddresses.etherToken)];\n            });\n        });\n    };\n    /**\n     * Grab orders from the order provider, prunes for valid orders with provided OrderPruner options\n     * @param   makerAssetData      The makerAssetData of the desired asset to swap for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     * @param   takerAssetData      The takerAssetData of the asset to swap makerAssetData for (for more info: https://github.com/0xProject/0x-protocol-specification/blob/master/v2/v2-specification.md).\n     */\n    SwapQuoter.prototype._getSignedOrdersAsync = function (makerAssetData, takerAssetData) {\n        return __awaiter(this, void 0, void 0, function () {\n            var apiOrders, orders, prunedOrders, sortedPrunedOrders;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assert_1.assert.isString('makerAssetData', makerAssetData);\n                        assert_1.assert.isString('takerAssetData', takerAssetData);\n                        order_utils_1.assetDataUtils.decodeAssetDataOrThrow(takerAssetData);\n                        order_utils_1.assetDataUtils.decodeAssetDataOrThrow(makerAssetData);\n                        return [4 /*yield*/, this.orderbook.getOrdersAsync(makerAssetData, takerAssetData)];\n                    case 1:\n                        apiOrders = _a.sent();\n                        orders = _.map(apiOrders, function (o) { return o.order; });\n                        prunedOrders = order_prune_utils_1.orderPrunerUtils.pruneForUsableSignedOrders(orders, this.permittedOrderFeeTypes, this.expiryBufferMs);\n                        sortedPrunedOrders = sorting_utils_1.sortingUtils.sortOrders(prunedOrders);\n                        return [2 /*return*/, sortedPrunedOrders];\n                }\n            });\n        });\n    };\n    /**\n     * General function for getting swap quote, conditionally uses different logic per specified marketOperation\n     */\n    SwapQuoter.prototype._getSwapQuoteAsync = function (makerAssetData, takerAssetData, assetFillAmount, marketOperation, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, slippagePercentage, calculateSwapQuoteOpts, gasPrice, prunedOrders, swapQuote;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = _.merge({}, constants_1.constants.DEFAULT_SWAP_QUOTE_REQUEST_OPTS, options), slippagePercentage = _a.slippagePercentage, calculateSwapQuoteOpts = __rest(_a, [\"slippagePercentage\"]);\n                        assert_1.assert.isString('makerAssetData', makerAssetData);\n                        assert_1.assert.isString('takerAssetData', takerAssetData);\n                        assert_1.assert.isNumber('slippagePercentage', slippagePercentage);\n                        if (!!!options.gasPrice) return [3 /*break*/, 1];\n                        gasPrice = options.gasPrice;\n                        assert_1.assert.isBigNumber('gasPrice', gasPrice);\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this._protocolFeeUtils.getGasPriceEstimationOrThrowAsync()];\n                    case 2:\n                        gasPrice = _b.sent();\n                        _b.label = 3;\n                    case 3: return [4 /*yield*/, this._getSignedOrdersAsync(makerAssetData, takerAssetData)];\n                    case 4:\n                        prunedOrders = _b.sent();\n                        // if no native orders, pass in a dummy order for the sampler to have required metadata for sampling\n                        if (prunedOrders.length === 0) {\n                            prunedOrders = [\n                                dummy_order_utils_1.dummyOrderUtils.createDummyOrderForSampler(makerAssetData, takerAssetData, this._contractAddresses.uniswapBridge),\n                            ];\n                        }\n                        if (!(marketOperation === types_1.MarketOperation.Buy)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this._swapQuoteCalculator.calculateMarketBuySwapQuoteAsync(prunedOrders, assetFillAmount, slippagePercentage, gasPrice, calculateSwapQuoteOpts)];\n                    case 5:\n                        swapQuote = _b.sent();\n                        return [3 /*break*/, 8];\n                    case 6: return [4 /*yield*/, this._swapQuoteCalculator.calculateMarketSellSwapQuoteAsync(prunedOrders, assetFillAmount, slippagePercentage, gasPrice, calculateSwapQuoteOpts)];\n                    case 7:\n                        swapQuote = _b.sent();\n                        _b.label = 8;\n                    case 8: return [2 /*return*/, swapQuote];\n                }\n            });\n        });\n    };\n    return SwapQuoter;\n}());\nexports.SwapQuoter = SwapQuoter;\n// tslint:disable-next-line: max-file-line-count\n//# sourceMappingURL=swap_quoter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@0x/utils\");\nvar utils_2 = require(\"./utils\");\nexports.calculateLiquidity = function (prunedOrders) {\n    var liquidityInBigNumbers = prunedOrders.reduce(function (acc, order) {\n        var fillableMakerAssetAmount = utils_2.utils.isOrderTakerFeePayableWithMakerAsset(order)\n            ? order.fillableMakerAssetAmount.minus(order.fillableTakerFeeAmount)\n            : order.fillableMakerAssetAmount;\n        var fillableTakerAssetAmount = utils_2.utils.isOrderTakerFeePayableWithTakerAsset(order)\n            ? order.fillableTakerAssetAmount.plus(order.fillableTakerFeeAmount)\n            : order.fillableTakerAssetAmount;\n        return {\n            makerAssetAvailableInBaseUnits: acc.makerAssetAvailableInBaseUnits.plus(fillableMakerAssetAmount),\n            takerAssetAvailableInBaseUnits: acc.takerAssetAvailableInBaseUnits.plus(fillableTakerAssetAmount),\n        };\n    }, {\n        makerAssetAvailableInBaseUnits: new utils_1.BigNumber(0),\n        takerAssetAvailableInBaseUnits: new utils_1.BigNumber(0),\n    });\n    return liquidityInBigNumbers;\n};\n//# sourceMappingURL=calculate_liquidity.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar order_utils_1 = require(\"@0x/order-utils\");\nvar utils_1 = require(\"@0x/utils\");\nvar constants_1 = require(\"../../constants\");\nvar types_1 = require(\"../../types\");\nvar fillable_amounts_utils_1 = require(\"../fillable_amounts_utils\");\nvar constants_2 = require(\"./constants\");\nvar create_order_1 = require(\"./create_order\");\nvar fill_optimizer_1 = require(\"./fill_optimizer\");\nvar sampler_1 = require(\"./sampler\");\nvar types_2 = require(\"./types\");\nvar sampler_2 = require(\"./sampler\");\nexports.DexOrderSampler = sampler_2.DexOrderSampler;\nvar ZERO_AMOUNT = constants_1.constants.ZERO_AMOUNT;\nvar BUY_SOURCES = constants_2.constants.BUY_SOURCES, DEFAULT_GET_MARKET_ORDERS_OPTS = constants_2.constants.DEFAULT_GET_MARKET_ORDERS_OPTS, ERC20_PROXY_ID = constants_2.constants.ERC20_PROXY_ID, FEE_QUOTE_SOURCES = constants_2.constants.FEE_QUOTE_SOURCES, ONE_ETHER = constants_2.constants.ONE_ETHER, SELL_SOURCES = constants_2.constants.SELL_SOURCES;\nvar MarketOperationUtils = /** @class */ (function () {\n    function MarketOperationUtils(_sampler, contractAddresses, _orderDomain) {\n        this._sampler = _sampler;\n        this._orderDomain = _orderDomain;\n        this._createOrderUtils = new create_order_1.CreateOrderUtils(contractAddresses);\n        this._wethAddress = contractAddresses.etherToken;\n    }\n    /**\n     * gets the orders required for a market sell operation by (potentially) merging native orders with\n     * generated bridge orders.\n     * @param nativeOrders Native orders.\n     * @param takerAmount Amount of taker asset to sell.\n     * @param opts Options object.\n     * @return orders.\n     */\n    MarketOperationUtils.prototype.getMarketSellOrdersAsync = function (nativeOrders, takerAmount, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _opts, _a, makerToken, takerToken, _b, fillableAmounts, ethToMakerAssetRate, dexQuotes, nativeOrdersWithFillableAmounts, nativeFills, dexPaths, allPaths, allFills, optimizer, upperBoundPath, optimalPath;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (nativeOrders.length === 0) {\n                            throw new Error(types_2.AggregationError.EmptyOrders);\n                        }\n                        _opts = __assign({}, DEFAULT_GET_MARKET_ORDERS_OPTS, opts);\n                        _a = __read(getOrderTokens(nativeOrders[0]), 2), makerToken = _a[0], takerToken = _a[1];\n                        return [4 /*yield*/, this._sampler.executeAsync(sampler_1.DexOrderSampler.ops.getOrderFillableTakerAmounts(nativeOrders), makerToken.toLowerCase() === this._wethAddress.toLowerCase()\n                                ? sampler_1.DexOrderSampler.ops.constant(new utils_1.BigNumber(1))\n                                : sampler_1.DexOrderSampler.ops.getMedianSellRate(difference(FEE_QUOTE_SOURCES, _opts.excludedSources), makerToken, this._wethAddress, ONE_ETHER), sampler_1.DexOrderSampler.ops.getSellQuotes(difference(SELL_SOURCES, _opts.excludedSources), makerToken, takerToken, sampler_1.getSampleAmounts(takerAmount, _opts.numSamples, _opts.sampleDistributionBase)))];\n                    case 1:\n                        _b = __read.apply(void 0, [_c.sent(), 3]), fillableAmounts = _b[0], ethToMakerAssetRate = _b[1], dexQuotes = _b[2];\n                        nativeOrdersWithFillableAmounts = createSignedOrdersWithFillableAmounts(nativeOrders, fillableAmounts, types_1.MarketOperation.Sell);\n                        nativeFills = pruneNativeFills(fill_optimizer_1.sortFillsByAdjustedRate(createSellPathFromNativeOrders(nativeOrdersWithFillableAmounts, ethToMakerAssetRate, _opts)), takerAmount, _opts.dustFractionThreshold);\n                        dexPaths = createSellPathsFromDexQuotes(dexQuotes, ethToMakerAssetRate, _opts);\n                        allPaths = __spread(dexPaths);\n                        allFills = flattenDexPaths(dexPaths);\n                        // If native orders are allowed, splice them in.\n                        if (!_opts.excludedSources.includes(types_2.ERC20BridgeSource.Native)) {\n                            allPaths.splice(0, 0, nativeFills);\n                            allFills.splice.apply(allFills, __spread([0, 0], nativeFills));\n                        }\n                        optimizer = new fill_optimizer_1.FillsOptimizer(_opts.runLimit);\n                        upperBoundPath = pickBestUpperBoundPath(allPaths, takerAmount);\n                        optimalPath = optimizer.optimize(\n                        // Sorting the orders by price effectively causes the optimizer to walk\n                        // the greediest solution first, which is the optimal solution in most\n                        // cases.\n                        fill_optimizer_1.sortFillsByAdjustedRate(allFills), takerAmount, upperBoundPath);\n                        if (!optimalPath) {\n                            throw new Error(types_2.AggregationError.NoOptimalPath);\n                        }\n                        return [2 /*return*/, this._createOrderUtils.createSellOrdersFromPath(this._orderDomain, takerToken, makerToken, collapsePath(optimalPath, false), _opts.bridgeSlippage)];\n                }\n            });\n        });\n    };\n    /**\n     * gets the orders required for a market buy operation by (potentially) merging native orders with\n     * generated bridge orders.\n     * @param nativeOrders Native orders.\n     * @param makerAmount Amount of maker asset to buy.\n     * @param opts Options object.\n     * @return orders.\n     */\n    MarketOperationUtils.prototype.getMarketBuyOrdersAsync = function (nativeOrders, makerAmount, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _opts, _a, makerToken, takerToken, _b, fillableAmounts, ethToTakerAssetRate, dexQuotes, signedOrderWithFillableAmounts;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (nativeOrders.length === 0) {\n                            throw new Error(types_2.AggregationError.EmptyOrders);\n                        }\n                        _opts = __assign({}, DEFAULT_GET_MARKET_ORDERS_OPTS, opts);\n                        _a = __read(getOrderTokens(nativeOrders[0]), 2), makerToken = _a[0], takerToken = _a[1];\n                        return [4 /*yield*/, this._sampler.executeAsync(sampler_1.DexOrderSampler.ops.getOrderFillableMakerAmounts(nativeOrders), takerToken.toLowerCase() === this._wethAddress.toLowerCase()\n                                ? sampler_1.DexOrderSampler.ops.constant(new utils_1.BigNumber(1))\n                                : sampler_1.DexOrderSampler.ops.getMedianSellRate(difference(FEE_QUOTE_SOURCES, _opts.excludedSources), takerToken, this._wethAddress, ONE_ETHER), sampler_1.DexOrderSampler.ops.getBuyQuotes(difference(BUY_SOURCES, _opts.excludedSources), makerToken, takerToken, sampler_1.getSampleAmounts(makerAmount, _opts.numSamples, _opts.sampleDistributionBase)))];\n                    case 1:\n                        _b = __read.apply(void 0, [_c.sent(), 3]), fillableAmounts = _b[0], ethToTakerAssetRate = _b[1], dexQuotes = _b[2];\n                        signedOrderWithFillableAmounts = this._createBuyOrdersPathFromSamplerResultIfExists(nativeOrders, makerAmount, fillableAmounts, dexQuotes, ethToTakerAssetRate, _opts);\n                        if (!signedOrderWithFillableAmounts) {\n                            throw new Error(types_2.AggregationError.NoOptimalPath);\n                        }\n                        return [2 /*return*/, signedOrderWithFillableAmounts];\n                }\n            });\n        });\n    };\n    /**\n     * gets the orders required for a batch of market buy operations by (potentially) merging native orders with\n     * generated bridge orders.\n     * @param batchNativeOrders Batch of Native orders.\n     * @param makerAmounts Array amount of maker asset to buy for each batch.\n     * @param opts Options object.\n     * @return orders.\n     */\n    MarketOperationUtils.prototype.getBatchMarketBuyOrdersAsync = function (batchNativeOrders, makerAmounts, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _opts, sources, ops, executeResults, batchFillableAmounts, batchEthToTakerAssetRate, batchDexQuotes;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (batchNativeOrders.length === 0) {\n                            throw new Error(types_2.AggregationError.EmptyOrders);\n                        }\n                        _opts = __assign({}, DEFAULT_GET_MARKET_ORDERS_OPTS, opts);\n                        sources = difference(BUY_SOURCES, _opts.excludedSources);\n                        ops = __spread(batchNativeOrders.map(function (orders) { return sampler_1.DexOrderSampler.ops.getOrderFillableMakerAmounts(orders); }), batchNativeOrders.map(function (orders) {\n                            return sampler_1.DexOrderSampler.ops.getMedianSellRate(difference(FEE_QUOTE_SOURCES, _opts.excludedSources), _this._wethAddress, getOrderTokens(orders[0])[1], ONE_ETHER);\n                        }), batchNativeOrders.map(function (orders, i) {\n                            return sampler_1.DexOrderSampler.ops.getBuyQuotes(sources, getOrderTokens(orders[0])[0], getOrderTokens(orders[0])[1], [\n                                makerAmounts[i],\n                            ]);\n                        }));\n                        return [4 /*yield*/, this._sampler.executeBatchAsync(ops)];\n                    case 1:\n                        executeResults = _a.sent();\n                        batchFillableAmounts = executeResults.splice(0, batchNativeOrders.length);\n                        batchEthToTakerAssetRate = executeResults.splice(0, batchNativeOrders.length);\n                        batchDexQuotes = executeResults.splice(0, batchNativeOrders.length);\n                        return [2 /*return*/, batchFillableAmounts.map(function (fillableAmounts, i) {\n                                return _this._createBuyOrdersPathFromSamplerResultIfExists(batchNativeOrders[i], makerAmounts[i], fillableAmounts, batchDexQuotes[i], batchEthToTakerAssetRate[i], _opts);\n                            })];\n                }\n            });\n        });\n    };\n    MarketOperationUtils.prototype._createBuyOrdersPathFromSamplerResultIfExists = function (nativeOrders, makerAmount, nativeOrderFillableAmounts, dexQuotes, ethToTakerAssetRate, opts) {\n        var nativeOrdersWithFillableAmounts = createSignedOrdersWithFillableAmounts(nativeOrders, nativeOrderFillableAmounts, types_1.MarketOperation.Buy);\n        var nativeFills = pruneNativeFills(fill_optimizer_1.sortFillsByAdjustedRate(createBuyPathFromNativeOrders(nativeOrdersWithFillableAmounts, ethToTakerAssetRate, opts), true), makerAmount, opts.dustFractionThreshold);\n        var dexPaths = createBuyPathsFromDexQuotes(dexQuotes, ethToTakerAssetRate, opts);\n        var allPaths = __spread(dexPaths);\n        var allFills = flattenDexPaths(dexPaths);\n        // If native orders are allowed, splice them in.\n        if (!opts.excludedSources.includes(types_2.ERC20BridgeSource.Native)) {\n            allPaths.splice(0, 0, nativeFills);\n            allFills.splice.apply(allFills, __spread([0, 0], nativeFills));\n        }\n        var optimizer = new fill_optimizer_1.FillsOptimizer(opts.runLimit, true);\n        var upperBoundPath = pickBestUpperBoundPath(allPaths, makerAmount, true);\n        var optimalPath = optimizer.optimize(\n        // Sorting the orders by price effectively causes the optimizer to walk\n        // the greediest solution first, which is the optimal solution in most\n        // cases.\n        fill_optimizer_1.sortFillsByAdjustedRate(allFills, true), makerAmount, upperBoundPath);\n        if (!optimalPath) {\n            return undefined;\n        }\n        var _a = __read(getOrderTokens(nativeOrders[0]), 2), inputToken = _a[0], outputToken = _a[1];\n        return this._createOrderUtils.createBuyOrdersFromPath(this._orderDomain, inputToken, outputToken, collapsePath(optimalPath, true), opts.bridgeSlippage);\n    };\n    return MarketOperationUtils;\n}());\nexports.MarketOperationUtils = MarketOperationUtils;\nfunction createSignedOrdersWithFillableAmounts(signedOrders, fillableAmounts, operation) {\n    return signedOrders\n        .map(function (order, i) {\n        var fillableAmount = fillableAmounts[i];\n        var fillableMakerAssetAmount = operation === types_1.MarketOperation.Buy\n            ? fillableAmount\n            : order_utils_1.orderCalculationUtils.getMakerFillAmount(order, fillableAmount);\n        var fillableTakerAssetAmount = operation === types_1.MarketOperation.Sell\n            ? fillableAmount\n            : order_utils_1.orderCalculationUtils.getTakerFillAmount(order, fillableAmount);\n        var fillableTakerFeeAmount = order_utils_1.orderCalculationUtils.getTakerFeeAmount(order, fillableTakerAssetAmount);\n        return __assign({ fillableMakerAssetAmount: fillableMakerAssetAmount,\n            fillableTakerAssetAmount: fillableTakerAssetAmount,\n            fillableTakerFeeAmount: fillableTakerFeeAmount }, order);\n    })\n        .filter(function (order) {\n        return !order.fillableMakerAssetAmount.isZero() && !order.fillableTakerAssetAmount.isZero();\n    });\n}\n// Gets the difference between two sets.\nfunction difference(a, b) {\n    return a.filter(function (x) { return b.indexOf(x) === -1; });\n}\nfunction createSellPathFromNativeOrders(orders, ethToOutputAssetRate, opts) {\n    var path = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (var i = 0; i < orders.length; i++) {\n        var order = orders[i];\n        var makerAmount = fillable_amounts_utils_1.fillableAmountsUtils.getMakerAssetAmountSwappedAfterOrderFees(order);\n        var takerAmount = fillable_amounts_utils_1.fillableAmountsUtils.getTakerAssetAmountSwappedAfterOrderFees(order);\n        // Native orders can be filled in any order, so they're all root nodes.\n        path.push({\n            flags: types_2.FillFlags.SourceNative,\n            exclusionMask: 0,\n            input: takerAmount,\n            output: makerAmount,\n            // Every fill from native orders incurs a penalty.\n            fillPenalty: ethToOutputAssetRate.times(opts.fees[types_2.ERC20BridgeSource.Native] || 0),\n            fillData: {\n                source: types_2.ERC20BridgeSource.Native,\n                order: order,\n            },\n        });\n    }\n    return path;\n}\nfunction createBuyPathFromNativeOrders(orders, ethToOutputAssetRate, opts) {\n    var path = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (var i = 0; i < orders.length; i++) {\n        var order = orders[i];\n        var makerAmount = fillable_amounts_utils_1.fillableAmountsUtils.getMakerAssetAmountSwappedAfterOrderFees(order);\n        var takerAmount = fillable_amounts_utils_1.fillableAmountsUtils.getTakerAssetAmountSwappedAfterOrderFees(order);\n        // Native orders can be filled in any order, so they're all root nodes.\n        path.push({\n            flags: types_2.FillFlags.SourceNative,\n            exclusionMask: 0,\n            input: makerAmount,\n            output: takerAmount,\n            // Every fill from native orders incurs a penalty.\n            // Negated because we try to minimize the output in buys.\n            fillPenalty: ethToOutputAssetRate.times(opts.fees[types_2.ERC20BridgeSource.Native] || 0).negated(),\n            fillData: {\n                source: types_2.ERC20BridgeSource.Native,\n                order: order,\n            },\n        });\n    }\n    return path;\n}\nfunction pruneNativeFills(fills, fillAmount, dustFractionThreshold) {\n    var e_1, _a;\n    var minInput = fillAmount.times(dustFractionThreshold);\n    var pruned = [];\n    var totalInput = ZERO_AMOUNT;\n    try {\n        for (var fills_1 = __values(fills), fills_1_1 = fills_1.next(); !fills_1_1.done; fills_1_1 = fills_1.next()) {\n            var fill = fills_1_1.value;\n            if (totalInput.gte(fillAmount)) {\n                break;\n            }\n            if (fill.input.lt(minInput)) {\n                continue;\n            }\n            totalInput = totalInput.plus(fill.input);\n            pruned.push(fill);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (fills_1_1 && !fills_1_1.done && (_a = fills_1.return)) _a.call(fills_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return pruned;\n}\nfunction createSellPathsFromDexQuotes(dexQuotes, ethToOutputAssetRate, opts) {\n    return createPathsFromDexQuotes(dexQuotes, ethToOutputAssetRate, opts);\n}\nfunction createBuyPathsFromDexQuotes(dexQuotes, ethToOutputAssetRate, opts) {\n    return createPathsFromDexQuotes(dexQuotes, \n    // Negated because we try to minimize the output in buys.\n    ethToOutputAssetRate.negated(), opts);\n}\nfunction createPathsFromDexQuotes(dexQuotes, ethToOutputAssetRate, opts) {\n    var e_2, _a;\n    var paths = [];\n    try {\n        for (var dexQuotes_1 = __values(dexQuotes), dexQuotes_1_1 = dexQuotes_1.next(); !dexQuotes_1_1.done; dexQuotes_1_1 = dexQuotes_1.next()) {\n            var quote = dexQuotes_1_1.value;\n            var path = [];\n            var prevSample = void 0;\n            // tslint:disable-next-line: prefer-for-of\n            for (var i = 0; i < quote.length; i++) {\n                var sample = quote[i];\n                // Stop of the sample has zero output, which can occur if the source\n                // cannot fill the full amount.\n                if (sample.output.isZero()) {\n                    break;\n                }\n                path.push({\n                    input: sample.input.minus(prevSample ? prevSample.input : 0),\n                    output: sample.output.minus(prevSample ? prevSample.output : 0),\n                    fillPenalty: ZERO_AMOUNT,\n                    parent: path.length !== 0 ? path[path.length - 1] : undefined,\n                    flags: sourceToFillFlags(sample.source),\n                    exclusionMask: opts.noConflicts ? sourceToExclusionMask(sample.source) : 0,\n                    fillData: { source: sample.source },\n                });\n                prevSample = quote[i];\n            }\n            // Don't push empty paths.\n            if (path.length > 0) {\n                // Only the first fill in a DEX path incurs a penalty.\n                path[0].fillPenalty = ethToOutputAssetRate.times(opts.fees[path[0].fillData.source] || 0);\n                paths.push(path);\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (dexQuotes_1_1 && !dexQuotes_1_1.done && (_a = dexQuotes_1.return)) _a.call(dexQuotes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return paths;\n}\nfunction sourceToFillFlags(source) {\n    if (source === types_2.ERC20BridgeSource.Kyber) {\n        return types_2.FillFlags.SourceKyber;\n    }\n    if (source === types_2.ERC20BridgeSource.Eth2Dai) {\n        return types_2.FillFlags.SourceEth2Dai;\n    }\n    if (source === types_2.ERC20BridgeSource.Uniswap) {\n        return types_2.FillFlags.SourceUniswap;\n    }\n    return types_2.FillFlags.SourceNative;\n}\nfunction sourceToExclusionMask(source) {\n    if (source === types_2.ERC20BridgeSource.Kyber) {\n        // tslint:disable-next-line: no-bitwise\n        return types_2.FillFlags.SourceEth2Dai | types_2.FillFlags.SourceUniswap;\n    }\n    if (source === types_2.ERC20BridgeSource.Eth2Dai) {\n        return types_2.FillFlags.SourceKyber;\n    }\n    if (source === types_2.ERC20BridgeSource.Uniswap) {\n        return types_2.FillFlags.SourceKyber;\n    }\n    return 0;\n}\n// Convert a list of DEX paths to a flattened list of `Fills`.\nfunction flattenDexPaths(dexFills) {\n    var e_3, _a, e_4, _b;\n    var fills = [];\n    try {\n        for (var dexFills_1 = __values(dexFills), dexFills_1_1 = dexFills_1.next(); !dexFills_1_1.done; dexFills_1_1 = dexFills_1.next()) {\n            var quote = dexFills_1_1.value;\n            try {\n                for (var quote_1 = __values(quote), quote_1_1 = quote_1.next(); !quote_1_1.done; quote_1_1 = quote_1.next()) {\n                    var fill = quote_1_1.value;\n                    fills.push(fill);\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (quote_1_1 && !quote_1_1.done && (_b = quote_1.return)) _b.call(quote_1);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (dexFills_1_1 && !dexFills_1_1.done && (_a = dexFills_1.return)) _a.call(dexFills_1);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return fills;\n}\n// Picks the path with the highest (or lowest if `shouldMinimize` is true) output.\nfunction pickBestUpperBoundPath(paths, maxInput, shouldMinimize) {\n    var e_5, _a;\n    var optimalPath;\n    var optimalPathOutput = ZERO_AMOUNT;\n    try {\n        for (var paths_1 = __values(paths), paths_1_1 = paths_1.next(); !paths_1_1.done; paths_1_1 = paths_1.next()) {\n            var path = paths_1_1.value;\n            if (getPathInput(path).gte(maxInput)) {\n                var output = fill_optimizer_1.getPathAdjustedOutput(path, maxInput);\n                if (!optimalPath || fill_optimizer_1.comparePathOutputs(output, optimalPathOutput, !!shouldMinimize) === 1) {\n                    optimalPath = path;\n                    optimalPathOutput = output;\n                }\n            }\n        }\n    }\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n    finally {\n        try {\n            if (paths_1_1 && !paths_1_1.done && (_a = paths_1.return)) _a.call(paths_1);\n        }\n        finally { if (e_5) throw e_5.error; }\n    }\n    return optimalPath;\n}\n// Gets the total input of a path.\nfunction getPathInput(path) {\n    return utils_1.BigNumber.sum.apply(utils_1.BigNumber, __spread(path.map(function (p) { return p.input; })));\n}\n// Merges contiguous fills from the same DEX.\nfunction collapsePath(path, isBuy) {\n    var e_6, _a;\n    var collapsed = [];\n    try {\n        for (var path_1 = __values(path), path_1_1 = path_1.next(); !path_1_1.done; path_1_1 = path_1.next()) {\n            var fill = path_1_1.value;\n            var makerAssetAmount = isBuy ? fill.input : fill.output;\n            var takerAssetAmount = isBuy ? fill.output : fill.input;\n            var source = fill.fillData.source;\n            if (collapsed.length !== 0 && source !== types_2.ERC20BridgeSource.Native) {\n                var prevFill = collapsed[collapsed.length - 1];\n                // If the last fill is from the same source, merge them.\n                if (prevFill.source === source) {\n                    prevFill.totalMakerAssetAmount = prevFill.totalMakerAssetAmount.plus(makerAssetAmount);\n                    prevFill.totalTakerAssetAmount = prevFill.totalTakerAssetAmount.plus(takerAssetAmount);\n                    prevFill.subFills.push({ makerAssetAmount: makerAssetAmount, takerAssetAmount: takerAssetAmount });\n                    continue;\n                }\n            }\n            collapsed.push({\n                source: fill.fillData.source,\n                totalMakerAssetAmount: makerAssetAmount,\n                totalTakerAssetAmount: takerAssetAmount,\n                subFills: [{ makerAssetAmount: makerAssetAmount, takerAssetAmount: takerAssetAmount }],\n                nativeOrder: fill.fillData.order,\n            });\n        }\n    }\n    catch (e_6_1) { e_6 = { error: e_6_1 }; }\n    finally {\n        try {\n            if (path_1_1 && !path_1_1.done && (_a = path_1.return)) _a.call(path_1);\n        }\n        finally { if (e_6) throw e_6.error; }\n    }\n    return collapsed;\n}\nfunction getOrderTokens(order) {\n    var assets = [order.makerAssetData, order.takerAssetData].map(function (a) { return order_utils_1.assetDataUtils.decodeAssetDataOrThrow(a); });\n    if (assets.some(function (a) { return a.assetProxyId !== ERC20_PROXY_ID; })) {\n        throw new Error(types_2.AggregationError.NotERC20AssetData);\n    }\n    return assets.map(function (a) { return a.tokenAddress; });\n}\n// tslint:disable: max-file-line-count\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@0x/utils\");\nvar constants_1 = require(\"../../constants\");\nvar ZERO_AMOUNT = constants_1.constants.ZERO_AMOUNT;\n/**\n * Class for finding optimized fill paths.\n */\nvar FillsOptimizer = /** @class */ (function () {\n    function FillsOptimizer(runLimit, shouldMinimize) {\n        this._currentRunCount = 0;\n        this._optimalPath = undefined;\n        this._optimalPathAdjustedOutput = ZERO_AMOUNT;\n        this._runLimit = runLimit;\n        this._shouldMinimize = !!shouldMinimize;\n    }\n    FillsOptimizer.prototype.optimize = function (fills, input, upperBoundPath) {\n        this._currentRunCount = 0;\n        this._optimalPath = upperBoundPath;\n        this._optimalPathAdjustedOutput = upperBoundPath ? getPathAdjustedOutput(upperBoundPath, input) : ZERO_AMOUNT;\n        var ctx = {\n            currentPath: [],\n            currentPathInput: ZERO_AMOUNT,\n            currentPathAdjustedOutput: ZERO_AMOUNT,\n            currentPathFlags: 0,\n        };\n        // Visit all valid combinations of fills to find the optimal path.\n        this._walk(fills, input, ctx);\n        if (this._optimalPath) {\n            return sortFillsByAdjustedRate(this._optimalPath, this._shouldMinimize);\n        }\n        return undefined;\n    };\n    FillsOptimizer.prototype._walk = function (fills, input, ctx) {\n        var e_1, _a;\n        var currentPath = ctx.currentPath, currentPathInput = ctx.currentPathInput, currentPathAdjustedOutput = ctx.currentPathAdjustedOutput, currentPathFlags = ctx.currentPathFlags;\n        // Stop if the current path is already complete.\n        if (currentPathInput.gte(input)) {\n            this._updateOptimalPath(currentPath, currentPathAdjustedOutput);\n            return;\n        }\n        var lastNode = currentPath.length !== 0 ? currentPath[currentPath.length - 1] : undefined;\n        var _loop_1 = function (nextFill) {\n            // Subsequent fills must be a root node or be preceded by its parent,\n            // enforcing contiguous fills.\n            if (nextFill.parent && nextFill.parent !== lastNode) {\n                return \"continue\";\n            }\n            // Stop if we've hit our run limit.\n            if (this_1._currentRunCount++ >= this_1._runLimit) {\n                return \"break\";\n            }\n            var nextPath = __spread(currentPath, [nextFill]);\n            var nextPathInput = utils_1.BigNumber.min(input, currentPathInput.plus(nextFill.input));\n            var nextPathAdjustedOutput = currentPathAdjustedOutput.plus(getPartialFillOutput(nextFill, nextPathInput.minus(currentPathInput)).minus(nextFill.fillPenalty));\n            // tslint:disable-next-line: no-bitwise\n            var nextPathFlags = currentPathFlags | nextFill.flags;\n            this_1._walk(\n            // Filter out incompatible fills.\n            // tslint:disable-next-line no-bitwise\n            fills.filter(function (f) { return f !== nextFill && (nextPathFlags & f.exclusionMask) === 0; }), input, {\n                currentPath: nextPath,\n                currentPathInput: nextPathInput,\n                currentPathAdjustedOutput: nextPathAdjustedOutput,\n                // tslint:disable-next-line: no-bitwise\n                currentPathFlags: nextPathFlags,\n            });\n        };\n        var this_1 = this;\n        try {\n            // Visit next fill candidates.\n            for (var fills_1 = __values(fills), fills_1_1 = fills_1.next(); !fills_1_1.done; fills_1_1 = fills_1.next()) {\n                var nextFill = fills_1_1.value;\n                var state_1 = _loop_1(nextFill);\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (fills_1_1 && !fills_1_1.done && (_a = fills_1.return)) _a.call(fills_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    FillsOptimizer.prototype._updateOptimalPath = function (path, adjustedOutput) {\n        if (!this._optimalPath || this._compareOutputs(adjustedOutput, this._optimalPathAdjustedOutput) === 1) {\n            this._optimalPath = path;\n            this._optimalPathAdjustedOutput = adjustedOutput;\n        }\n    };\n    FillsOptimizer.prototype._compareOutputs = function (a, b) {\n        return comparePathOutputs(a, b, this._shouldMinimize);\n    };\n    return FillsOptimizer;\n}());\nexports.FillsOptimizer = FillsOptimizer;\n/**\n * Compute the total output minus penalty for a fill path, optionally clipping the input\n * to `maxInput`.\n */\nfunction getPathAdjustedOutput(path, maxInput) {\n    var e_2, _a;\n    var currentInput = ZERO_AMOUNT;\n    var currentOutput = ZERO_AMOUNT;\n    var currentPenalty = ZERO_AMOUNT;\n    try {\n        for (var path_1 = __values(path), path_1_1 = path_1.next(); !path_1_1.done; path_1_1 = path_1.next()) {\n            var fill = path_1_1.value;\n            currentPenalty = currentPenalty.plus(fill.fillPenalty);\n            if (maxInput && currentInput.plus(fill.input).gte(maxInput)) {\n                var partialInput = maxInput.minus(currentInput);\n                currentOutput = currentOutput.plus(getPartialFillOutput(fill, partialInput));\n                currentInput = partialInput;\n                break;\n            }\n            else {\n                currentInput = currentInput.plus(fill.input);\n                currentOutput = currentOutput.plus(fill.output);\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (path_1_1 && !path_1_1.done && (_a = path_1.return)) _a.call(path_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return currentOutput.minus(currentPenalty);\n}\nexports.getPathAdjustedOutput = getPathAdjustedOutput;\n/**\n * Compares two rewards, returning -1, 0, or 1\n * if `a` is less than, equal to, or greater than `b`.\n */\nfunction comparePathOutputs(a, b, shouldMinimize) {\n    return shouldMinimize ? b.comparedTo(a) : a.comparedTo(b);\n}\nexports.comparePathOutputs = comparePathOutputs;\n// Get the partial output earned by a fill at input `partialInput`.\nfunction getPartialFillOutput(fill, partialInput) {\n    return utils_1.BigNumber.min(fill.output, fill.output.div(fill.input).times(partialInput));\n}\n/**\n * Sort a path by adjusted input -> output rate while keeping sub-fills contiguous.\n */\nfunction sortFillsByAdjustedRate(path, shouldMinimize) {\n    if (shouldMinimize === void 0) { shouldMinimize = false; }\n    return path.slice(0).sort(function (a, b) {\n        var rootA = getFillRoot(a);\n        var rootB = getFillRoot(b);\n        var adjustedRateA = rootA.output.minus(rootA.fillPenalty).div(rootA.input);\n        var adjustedRateB = rootB.output.minus(rootB.fillPenalty).div(rootB.input);\n        if ((!a.parent && !b.parent) || a.fillData.source !== b.fillData.source) {\n            return shouldMinimize ? adjustedRateA.comparedTo(adjustedRateB) : adjustedRateB.comparedTo(adjustedRateA);\n        }\n        if (isFillAncestorOf(a, b)) {\n            return -1;\n        }\n        if (isFillAncestorOf(b, a)) {\n            return 1;\n        }\n        return 0;\n    });\n}\nexports.sortFillsByAdjustedRate = sortFillsByAdjustedRate;\nfunction getFillRoot(fill) {\n    var root = fill;\n    while (root.parent) {\n        root = root.parent;\n    }\n    return root;\n}\nfunction isFillAncestorOf(ancestor, fill) {\n    var currFill = fill.parent;\n    while (currFill) {\n        if (currFill === ancestor) {\n            return true;\n        }\n        currFill = currFill.parent;\n    }\n    return false;\n}\n//# sourceMappingURL=fill_optimizer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../../constants\");\nvar constants_2 = require(\"./constants\");\nvar NULL_ADDRESS = constants_1.constants.NULL_ADDRESS, NULL_BYTES = constants_1.constants.NULL_BYTES, ZERO_AMOUNT = constants_1.constants.ZERO_AMOUNT;\nvar INFINITE_TIMESTAMP_SEC = constants_2.constants.INFINITE_TIMESTAMP_SEC;\nexports.dummyOrderUtils = {\n    createDummyOrderForSampler: function (makerAssetData, takerAssetData, makerAddress) {\n        return {\n            makerAddress: makerAddress,\n            takerAddress: NULL_ADDRESS,\n            senderAddress: NULL_ADDRESS,\n            feeRecipientAddress: NULL_ADDRESS,\n            salt: ZERO_AMOUNT,\n            expirationTimeSeconds: INFINITE_TIMESTAMP_SEC,\n            makerAssetData: makerAssetData,\n            takerAssetData: takerAssetData,\n            makerFeeAssetData: NULL_BYTES,\n            takerFeeAssetData: NULL_BYTES,\n            makerFee: ZERO_AMOUNT,\n            takerFee: ZERO_AMOUNT,\n            makerAssetAmount: ZERO_AMOUNT,\n            takerAssetAmount: ZERO_AMOUNT,\n            signature: NULL_BYTES,\n            chainId: 1,\n            exchangeAddress: NULL_ADDRESS,\n        };\n    },\n};\n//# sourceMappingURL=dummy_order_utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar order_utils_1 = require(\"@0x/order-utils\");\nvar _ = require(\"lodash\");\nvar constants_1 = require(\"../constants\");\nvar types_1 = require(\"../types\");\nvar utils_1 = require(\"../utils/utils\");\nexports.orderPrunerUtils = {\n    pruneForUsableSignedOrders: function (signedOrders, permittedOrderFeeTypes, expiryBufferMs) {\n        var result = _.filter(signedOrders, function (order) {\n            return (order_utils_1.orderCalculationUtils.isOpenOrder(order) &&\n                !order_utils_1.orderCalculationUtils.willOrderExpire(order, expiryBufferMs / constants_1.constants.ONE_SECOND_MS) &&\n                ((permittedOrderFeeTypes.has(types_1.OrderPrunerPermittedFeeTypes.NoFees) &&\n                    order.takerFee.eq(constants_1.constants.ZERO_AMOUNT)) ||\n                    (permittedOrderFeeTypes.has(types_1.OrderPrunerPermittedFeeTypes.TakerDenominatedTakerFee) &&\n                        utils_1.utils.isOrderTakerFeePayableWithTakerAsset(order)) ||\n                    (permittedOrderFeeTypes.has(types_1.OrderPrunerPermittedFeeTypes.MakerDenominatedTakerFee) &&\n                        utils_1.utils.isOrderTakerFeePayableWithMakerAsset(order))));\n        });\n        return result;\n    },\n};\n//# sourceMappingURL=order_prune_utils.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar order_utils_1 = require(\"@0x/order-utils\");\nvar types_1 = require(\"@0x/types\");\nvar constants_1 = require(\"../constants\");\n/**\n * Utility class to retrieve order state if needed outside of using the ERC20BridgeSampler\n */\nvar OrderStateUtils = /** @class */ (function () {\n    function OrderStateUtils(devUtils) {\n        this._devUtils = devUtils;\n    }\n    OrderStateUtils.prototype.getSignedOrdersWithFillableAmountsAsync = function (signedOrders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var signatures, _a, ordersInfo, fillableTakerAssetAmounts, isValidSignatures, ordersOnChainMetadata;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        signatures = signedOrders.map(function (o) { return o.signature; });\n                        return [4 /*yield*/, this._devUtils\n                                .getOrderRelevantStates(signedOrders, signatures)\n                                .callAsync()];\n                    case 1:\n                        _a = __read.apply(void 0, [_b.sent(), 3]), ordersInfo = _a[0], fillableTakerAssetAmounts = _a[1], isValidSignatures = _a[2];\n                        ordersOnChainMetadata = ordersInfo.map(function (orderInfo, index) {\n                            return __assign({}, orderInfo, { fillableTakerAssetAmount: fillableTakerAssetAmounts[index], isValidSignature: isValidSignatures[index] });\n                        });\n                        // take orders + on chain information and find the valid orders and fillable makerAsset or takerAsset amounts\n                        return [2 /*return*/, signedOrders.map(function (order, index) {\n                                var orderMetadata = ordersOnChainMetadata[index];\n                                var fillableTakerAssetAmount = orderMetadata.isValidSignature && orderMetadata.orderStatus === types_1.OrderStatus.Fillable\n                                    ? orderMetadata.fillableTakerAssetAmount\n                                    : constants_1.constants.ZERO_AMOUNT;\n                                return __assign({}, order, { fillableTakerAssetAmount: fillableTakerAssetAmount, fillableMakerAssetAmount: order_utils_1.orderCalculationUtils.getMakerFillAmount(order, fillableTakerAssetAmount), fillableTakerFeeAmount: order_utils_1.orderCalculationUtils.getTakerFeeAmount(order, fillableTakerAssetAmount) });\n                            })];\n                }\n            });\n        });\n    };\n    return OrderStateUtils;\n}());\nexports.OrderStateUtils = OrderStateUtils;\n//# sourceMappingURL=order_state_utils.js.map","var hearts = {};\nvar Heart = require('./lib/heart').initialize(hearts);\n\nfunction createHeart(heartrate, name) {\n    var heart = new Heart(heartrate, name);\n    if (name) {\n        killHeart(name);\n        hearts[heart.id] = heart;\n    }\n    return heart;\n}\n\nfunction killHeart(name) {\n    if (hearts[name]) {\n        hearts[name].kill();\n    }\n}\n\nfunction getHeart(name) {\n    return hearts[name];\n}\n\nmodule.exports = {\n    Heart: Heart, // will be deprecated\n    all: hearts, // will be deprecated\n    create: createHeart, // will be deprecated\n    destroy: killHeart, // will be deprecated\n    destroyHeart: killHeart, // will be deprecated\n\n    heart: getHeart,\n    hearts: hearts,\n    createHeart: createHeart,\n    killHeart: killHeart\n};\n","var Pulse = require('./pulse');\nvar BeatEvent = require('./beatevent');\n\nvar idCount = 0,\n    hearts;\n\nfunction initialize(global_hearts) {\n    hearts = global_hearts;\n    return Heart;\n}\n\n\n// Heart\n\nfunction Heart(heartrate, name) {\n    this.heartbeat = 0;\n\n    this.events = [];\n    this.eventList = {};\n\n    this.id = name || 'heart_' + (Math.random()).toString(36) + idCount++;\n    this.heartrate = heartrate || 2500;\n\n    this.pulses = {};\n\n    this.interval = setInterval(createInterval(this), heartrate);\n\n    unreference(this);\n}\n\nObject.defineProperty(Heart.prototype, 'age', {\n    enumerable: true,\n    get: function() {\n        return this.heartbeat;\n    }\n});\n\nObject.defineProperty(Heart.prototype, 'name', {\n    enumerable: true,\n    get: function() {\n        return this.id;\n    }\n});\n\nHeart.prototype.setHeartrate = function(heartrate) {\n    if (heartrate) {\n        this.heartrate = heartrate;\n\n        clearInterval(this.interval);\n        this.interval = setInterval(createInterval(this), heartrate);\n\n        if (this.events.length === 0) {\n            unreference(this);\n        }\n    }\n\n    return this;\n};\n\nHeart.prototype.kill = Heart.prototype.destroy = function() {\n    clearInterval(this.interval);\n\n    if (hearts[this.id] !== undefined) {\n        hearts[this.id] = undefined;\n    }\n};\n\n\n// Pulses\n\nHeart.prototype.newPulse = Heart.prototype.createPulse = function(name) {\n    var pulse = new Pulse(this, name);\n\n    if (name) {\n        this.killPulse(name);\n        this.pulses[pulse.id] = pulse;\n    }\n\n    return pulse;\n};\n\nHeart.prototype.killPulse = function(name) {\n    if (this.pulses[name] !== undefined) {\n        this.pulses[name] = undefined;\n    }\n};\n\nHeart.prototype.pulse = function(name) {\n    return this.pulses[name];\n};\n\n\n// Events\n\nHeart.prototype.createEvent = function(modulo, options, fn) {\n    if (typeof options === 'function') {\n        fn = options;\n        options = {};\n    }\n\n    var name = options.name;\n    var countTo = options.countTo || options.repeat; // repeat to be deprecated\n    var event = new BeatEvent(this, modulo, name, countTo, fn);\n\n    if (name !== undefined) {\n        this.killEvent(name);\n        this.eventList[name] = event;\n    }\n\n    this.events.push(event);\n\n    if (this.interval.ref) {\n        this.interval.ref();\n    }\n\n    return event;\n};\n\nHeart.prototype.event = function(name) {\n    return this.eventList[name];\n};\n\nHeart.prototype.killEvent = function(name, beatevent) {\n    var idx;\n\n    if (this.eventList[name] !== undefined) {\n        idx = this.events.indexOf(this.eventList[name]);\n        this.eventList[name] = undefined;\n    } else if (beatevent !== undefined) {\n        if(beatevent.id){\n            this.eventList[beatevent.id] = undefined;\n        }\n        idx = this.events.indexOf(beatevent);\n    }\n\n    if (idx > -1) {\n        this.events.splice(idx, 1);\n    }\n\n    if (this.events.length === 0) {\n        unreference(this);\n    }\n};\n\nHeart.prototype.killAllEvents = function() {\n    this.events = [];\n    this.eventList = {};\n\n    unreference(this);\n};\n\nfunction createInterval(heart) {\n    return function() {\n        var events = heart.events;\n\n        heart.heartbeat++;\n\n        for (var i = 0; i < events.length; i++) {\n            if (events[i] !== undefined) {\n                events[i].execute();\n                if (events[i].done === true) {\n                    events[i].kill();\n                }\n            }\n        }\n    };\n}\n\nfunction unreference(heart) {\n    if (heart.interval.unref) {\n        heart.interval.unref();\n    }\n}\n\n\nmodule.exports = {\n    initialize: initialize\n};\n","var idCount = 0;\n\nfunction Pulse(homeheart, name) {\n    this.id = name || 'pulse_' + (Math.random()).toString(36) + idCount++;\n    this.heart = homeheart;\n    this.heartbeat = homeheart.heartbeat;\n}\n\nObject.defineProperty(Pulse.prototype, 'missedBeats', {\n    enumerable: true,\n    get: function() {\n        return this.heart.heartbeat - this.heartbeat;\n    }\n});\n\nObject.defineProperty(Pulse.prototype, 'lag', {\n    enumerable: true,\n    get: function() {\n        return this.missedBeats * this.heart.heartrate;\n    }\n});\n\nPulse.prototype.beat = function() {\n    this.heartbeat = this.heart.heartbeat;\n    return this;\n};\n\nPulse.prototype.over = function(threshold) {\n    if (this.heart.heartbeat - this.heartbeat > threshold) {\n        return true;\n    }\n    return false;\n};\n\nPulse.prototype.kill = Pulse.prototype.destroy = function() {\n    this.heart.killPulse(this.id);\n};\n\nmodule.exports = Pulse;\n","var idCount = 0;\n\nfunction BeatEvent(heart, interval, name, countTo, fn) {\n    this.id = name || 'event_' + (Math.random()).toString(36) + idCount++;\n    this.heart = heart;\n\n    this.countTo = countTo || 0;\n    this.executionCount = 0;\n\n    this.done = false;\n    this.count = 0;\n    this.schedule = Math.round(interval, 10);\n    this.fn = fn;\n}\n\nBeatEvent.prototype.execute = function() {\n    this.count++;\n\n    if (this.count === this.schedule) {\n        this.executionCount++;\n        if (this.countTo !== 0 && this.executionCount >= this.countTo) {\n            this.done = true;\n            this.fn(this.executionCount, true);\n        } else {\n            this.fn(this.executionCount, false);\n        }\n        this.count = 0;\n    }\n};\n\nBeatEvent.prototype.kill = function() {\n    this.heart.killEvent(this.id, this);\n};\n\nmodule.exports = BeatEvent;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar json_schemas_1 = require(\"@0x/json-schemas\");\nvar _ = require(\"lodash\");\nvar assert_1 = require(\"./assert\");\nvar utils_1 = require(\"./utils\");\nexports.sortingUtils = {\n    sortOrders: function (orders) {\n        assert_1.assert.doesConformToSchema('orders', orders, json_schemas_1.schemas.ordersSchema);\n        assert_1.assert.isValidOrdersForSwapQuoter('orders', orders);\n        var copiedOrders = _.cloneDeep(orders);\n        copiedOrders.sort(function (firstOrder, secondOrder) {\n            var firstOrderRate = getTakerFeeAdjustedRateOfOrder(firstOrder);\n            var secondOrderRate = getTakerFeeAdjustedRateOfOrder(secondOrder);\n            return firstOrderRate.comparedTo(secondOrderRate);\n        });\n        return copiedOrders;\n    },\n};\nfunction getTakerFeeAdjustedRateOfOrder(order) {\n    var _a = __read(utils_1.utils.getAdjustedMakerAndTakerAmountsFromTakerFees(order), 2), adjustedMakerAssetAmount = _a[0], adjustedTakerAssetAmount = _a[1];\n    var rate = adjustedTakerAssetAmount.div(adjustedMakerAssetAmount);\n    return rate;\n}\n//# sourceMappingURL=sorting_utils.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar order_utils_1 = require(\"@0x/order-utils\");\nvar types_1 = require(\"@0x/types\");\nvar utils_1 = require(\"@0x/utils\");\nvar _ = require(\"lodash\");\nvar constants_1 = require(\"../constants\");\nvar types_2 = require(\"../types\");\nvar fillable_amounts_utils_1 = require(\"./fillable_amounts_utils\");\nvar create_order_1 = require(\"./market_operation_utils/create_order\");\nvar types_3 = require(\"./market_operation_utils/types\");\nvar utils_2 = require(\"./utils\");\n// TODO(dave4506) How do we want to reintroduce InsufficientAssetLiquidityError?\nvar SwapQuoteCalculator = /** @class */ (function () {\n    function SwapQuoteCalculator(protocolFeeUtils, marketOperationUtils) {\n        this._protocolFeeUtils = protocolFeeUtils;\n        this._marketOperationUtils = marketOperationUtils;\n    }\n    SwapQuoteCalculator.prototype.calculateMarketSellSwapQuoteAsync = function (prunedOrders, takerAssetFillAmount, slippagePercentage, gasPrice, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._calculateSwapQuoteAsync(prunedOrders, takerAssetFillAmount, slippagePercentage, gasPrice, types_2.MarketOperation.Sell, opts)];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    SwapQuoteCalculator.prototype.calculateMarketBuySwapQuoteAsync = function (prunedOrders, takerAssetFillAmount, slippagePercentage, gasPrice, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._calculateSwapQuoteAsync(prunedOrders, takerAssetFillAmount, slippagePercentage, gasPrice, types_2.MarketOperation.Buy, opts)];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    SwapQuoteCalculator.prototype.calculateBatchMarketBuySwapQuoteAsync = function (batchPrunedOrders, takerAssetFillAmounts, slippagePercentage, gasPrice, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._calculateBatchBuySwapQuoteAsync(batchPrunedOrders, takerAssetFillAmounts, slippagePercentage, gasPrice, types_2.MarketOperation.Buy, opts)];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    SwapQuoteCalculator.prototype._calculateBatchBuySwapQuoteAsync = function (batchPrunedOrders, assetFillAmounts, slippagePercentage, gasPrice, operation, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var assetFillAmountsWithSlippage, batchSignedOrders, batchSwapQuotes;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        assetFillAmountsWithSlippage = assetFillAmounts.map(function (a) {\n                            return a.plus(a.multipliedBy(slippagePercentage).integerValue());\n                        });\n                        return [4 /*yield*/, this._marketOperationUtils.getBatchMarketBuyOrdersAsync(batchPrunedOrders, assetFillAmountsWithSlippage, opts)];\n                    case 1:\n                        batchSignedOrders = _a.sent();\n                        return [4 /*yield*/, Promise.all(batchSignedOrders.map(function (orders, i) { return __awaiter(_this, void 0, void 0, function () {\n                                var _a, makerAssetData, takerAssetData;\n                                return __generator(this, function (_b) {\n                                    if (orders) {\n                                        _a = batchPrunedOrders[i][0], makerAssetData = _a.makerAssetData, takerAssetData = _a.takerAssetData;\n                                        return [2 /*return*/, this._createSwapQuoteAsync(makerAssetData, takerAssetData, orders, operation, assetFillAmounts[i], gasPrice)];\n                                    }\n                                    else {\n                                        return [2 /*return*/, undefined];\n                                    }\n                                    return [2 /*return*/];\n                                });\n                            }); }))];\n                    case 2:\n                        batchSwapQuotes = _a.sent();\n                        return [2 /*return*/, batchSwapQuotes];\n                }\n            });\n        });\n    };\n    SwapQuoteCalculator.prototype._calculateSwapQuoteAsync = function (prunedOrders, assetFillAmount, slippagePercentage, gasPrice, operation, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var slippageBufferAmount, resultOrders, _opts, firstOrderMakerAssetData, _a, makerAssetData, takerAssetData;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // checks if maker asset is ERC721 or ERC20 and taker asset is ERC20\n                        if (!utils_2.utils.isSupportedAssetDataInOrders(prunedOrders)) {\n                            throw Error(types_2.SwapQuoterError.AssetDataUnsupported);\n                        }\n                        slippageBufferAmount = assetFillAmount.multipliedBy(slippagePercentage).integerValue();\n                        resultOrders = [];\n                        _opts = __assign({}, opts, { fees: _.mapValues(opts.fees, function (v, k) { return v.times(gasPrice); }) });\n                        firstOrderMakerAssetData = !!prunedOrders[0]\n                            ? order_utils_1.assetDataUtils.decodeAssetDataOrThrow(prunedOrders[0].makerAssetData)\n                            : { assetProxyId: '' };\n                        if (!(firstOrderMakerAssetData.assetProxyId === types_1.AssetProxyId.ERC721)) return [3 /*break*/, 1];\n                        // HACK: to conform ERC721 orders to the output of market operation utils, assumes complete fillable\n                        resultOrders = prunedOrders.map(function (o) {\n                            return create_order_1.CreateOrderUtils.convertNativeOrderToFullyFillableOptimizedOrders(o);\n                        });\n                        return [3 /*break*/, 5];\n                    case 1:\n                        if (!(operation === types_2.MarketOperation.Buy)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._marketOperationUtils.getMarketBuyOrdersAsync(prunedOrders, assetFillAmount.plus(slippageBufferAmount), _opts)];\n                    case 2:\n                        resultOrders = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, this._marketOperationUtils.getMarketSellOrdersAsync(prunedOrders, assetFillAmount.plus(slippageBufferAmount), _opts)];\n                    case 4:\n                        resultOrders = _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        _a = prunedOrders[0], makerAssetData = _a.makerAssetData, takerAssetData = _a.takerAssetData;\n                        return [2 /*return*/, this._createSwapQuoteAsync(makerAssetData, takerAssetData, resultOrders, operation, assetFillAmount, gasPrice)];\n                }\n            });\n        });\n    };\n    SwapQuoteCalculator.prototype._createSwapQuoteAsync = function (makerAssetData, takerAssetData, resultOrders, operation, assetFillAmount, gasPrice) {\n        return __awaiter(this, void 0, void 0, function () {\n            var bestCaseQuoteInfo, worstCaseQuoteInfo, breakdown, quoteBase;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._calculateQuoteInfoAsync(resultOrders, assetFillAmount, gasPrice, operation)];\n                    case 1:\n                        bestCaseQuoteInfo = _a.sent();\n                        return [4 /*yield*/, this._calculateQuoteInfoAsync(resultOrders, assetFillAmount, gasPrice, operation, true)];\n                    case 2:\n                        worstCaseQuoteInfo = _a.sent();\n                        breakdown = this._getSwapQuoteOrdersBreakdown(resultOrders, operation);\n                        quoteBase = {\n                            takerAssetData: takerAssetData,\n                            makerAssetData: makerAssetData,\n                            // Remove fill metadata.\n                            orders: resultOrders.map(function (o) { return _.omit(o, 'fill'); }),\n                            bestCaseQuoteInfo: bestCaseQuoteInfo,\n                            worstCaseQuoteInfo: worstCaseQuoteInfo,\n                            gasPrice: gasPrice,\n                            sourceBreakdown: breakdown,\n                        };\n                        if (operation === types_2.MarketOperation.Buy) {\n                            return [2 /*return*/, __assign({}, quoteBase, { type: types_2.MarketOperation.Buy, makerAssetFillAmount: assetFillAmount })];\n                        }\n                        else {\n                            return [2 /*return*/, __assign({}, quoteBase, { type: types_2.MarketOperation.Sell, takerAssetFillAmount: assetFillAmount })];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // tslint:disable-next-line: prefer-function-over-method\n    SwapQuoteCalculator.prototype._calculateQuoteInfoAsync = function (orders, assetFillAmount, gasPrice, operation, worstCase) {\n        if (worstCase === void 0) { worstCase = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (operation === types_2.MarketOperation.Buy) {\n                    return [2 /*return*/, this._calculateMarketBuyQuoteInfoAsync(orders, assetFillAmount, gasPrice, worstCase)];\n                }\n                else {\n                    return [2 /*return*/, this._calculateMarketSellQuoteInfoAsync(orders, assetFillAmount, gasPrice, worstCase)];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    SwapQuoteCalculator.prototype._calculateMarketSellQuoteInfoAsync = function (orders, takerAssetSellAmount, gasPrice, worstCase) {\n        if (worstCase === void 0) { worstCase = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var e_1, _a, e_2, _b, totalMakerAssetAmount, totalTakerAssetAmount, totalFeeTakerAssetAmount, remainingTakerAssetFillAmount, filledOrders, _orders, _orders_1, _orders_1_1, order, makerAssetAmount, takerAssetAmount, feeTakerAssetAmount, adjustedFillableMakerAssetAmount, adjustedFillableTakerAssetAmount, takerAssetAmountWithFees, takerAssetAmountBreakDown, makerAssetBridgeSlippage, takerAssetBridgeSlippage, subFills, subFills_1, subFills_1_1, subFill, partialTakerAssetAmount, partialMakerAssetAmount, partialTakerAssetFillAmount, partialMakerAssetFillAmount, protocolFeeInWeiAmount;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        totalMakerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                        totalTakerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                        totalFeeTakerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                        remainingTakerAssetFillAmount = takerAssetSellAmount;\n                        filledOrders = [];\n                        _orders = !worstCase ? orders : orders.slice().reverse();\n                        try {\n                            for (_orders_1 = __values(_orders), _orders_1_1 = _orders_1.next(); !_orders_1_1.done; _orders_1_1 = _orders_1.next()) {\n                                order = _orders_1_1.value;\n                                makerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                                takerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                                feeTakerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                                if (remainingTakerAssetFillAmount.lte(0)) {\n                                    break;\n                                }\n                                if (order.fill.source === types_3.ERC20BridgeSource.Native) {\n                                    adjustedFillableMakerAssetAmount = fillable_amounts_utils_1.fillableAmountsUtils.getMakerAssetAmountSwappedAfterOrderFees(order);\n                                    adjustedFillableTakerAssetAmount = fillable_amounts_utils_1.fillableAmountsUtils.getTakerAssetAmountSwappedAfterOrderFees(order);\n                                    takerAssetAmountWithFees = utils_1.BigNumber.min(remainingTakerAssetFillAmount, adjustedFillableTakerAssetAmount);\n                                    takerAssetAmountBreakDown = getTakerAssetAmountBreakDown(order, takerAssetAmountWithFees);\n                                    takerAssetAmount = takerAssetAmountBreakDown.takerAssetAmount;\n                                    feeTakerAssetAmount = takerAssetAmountBreakDown.feeTakerAssetAmount;\n                                    makerAssetAmount = takerAssetAmountWithFees\n                                        .div(adjustedFillableTakerAssetAmount)\n                                        .times(adjustedFillableMakerAssetAmount)\n                                        .integerValue(utils_1.BigNumber.ROUND_DOWN);\n                                }\n                                else {\n                                    makerAssetBridgeSlippage = !worstCase\n                                        ? constants_1.constants.ONE_AMOUNT\n                                        : order.makerAssetAmount.div(order.fill.totalMakerAssetAmount);\n                                    takerAssetBridgeSlippage = !worstCase\n                                        ? constants_1.constants.ONE_AMOUNT\n                                        : order.takerAssetAmount.div(order.fill.totalTakerAssetAmount);\n                                    subFills = !worstCase ? order.fill.subFills : order.fill.subFills.slice().reverse();\n                                    try {\n                                        for (subFills_1 = __values(subFills), subFills_1_1 = subFills_1.next(); !subFills_1_1.done; subFills_1_1 = subFills_1.next()) {\n                                            subFill = subFills_1_1.value;\n                                            if (remainingTakerAssetFillAmount.minus(takerAssetAmount).lte(0)) {\n                                                break;\n                                            }\n                                            partialTakerAssetAmount = subFill.takerAssetAmount.times(takerAssetBridgeSlippage);\n                                            partialMakerAssetAmount = subFill.makerAssetAmount.times(makerAssetBridgeSlippage);\n                                            partialTakerAssetFillAmount = utils_1.BigNumber.min(partialTakerAssetAmount, remainingTakerAssetFillAmount.minus(takerAssetAmount));\n                                            partialMakerAssetFillAmount = partialTakerAssetFillAmount\n                                                .div(partialTakerAssetAmount)\n                                                .times(partialMakerAssetAmount)\n                                                .integerValue(utils_1.BigNumber.ROUND_DOWN);\n                                            takerAssetAmount = takerAssetAmount.plus(partialTakerAssetFillAmount);\n                                            makerAssetAmount = makerAssetAmount.plus(partialMakerAssetFillAmount);\n                                        }\n                                    }\n                                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                                    finally {\n                                        try {\n                                            if (subFills_1_1 && !subFills_1_1.done && (_b = subFills_1.return)) _b.call(subFills_1);\n                                        }\n                                        finally { if (e_2) throw e_2.error; }\n                                    }\n                                }\n                                totalMakerAssetAmount = totalMakerAssetAmount.plus(makerAssetAmount);\n                                totalTakerAssetAmount = totalTakerAssetAmount.plus(takerAssetAmount);\n                                totalFeeTakerAssetAmount = totalFeeTakerAssetAmount.plus(feeTakerAssetAmount);\n                                remainingTakerAssetFillAmount = remainingTakerAssetFillAmount\n                                    .minus(takerAssetAmount)\n                                    .minus(feeTakerAssetAmount);\n                                filledOrders.push(order);\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (_orders_1_1 && !_orders_1_1.done && (_a = _orders_1.return)) _a.call(_orders_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        return [4 /*yield*/, this._protocolFeeUtils.calculateWorstCaseProtocolFeeAsync(!worstCase ? filledOrders : orders, gasPrice)];\n                    case 1:\n                        protocolFeeInWeiAmount = _c.sent();\n                        return [2 /*return*/, {\n                                feeTakerAssetAmount: totalFeeTakerAssetAmount,\n                                takerAssetAmount: totalTakerAssetAmount,\n                                totalTakerAssetAmount: totalFeeTakerAssetAmount.plus(totalTakerAssetAmount),\n                                makerAssetAmount: totalMakerAssetAmount,\n                                protocolFeeInWeiAmount: protocolFeeInWeiAmount,\n                            }];\n                }\n            });\n        });\n    };\n    SwapQuoteCalculator.prototype._calculateMarketBuyQuoteInfoAsync = function (orders, makerAssetBuyAmount, gasPrice, worstCase) {\n        if (worstCase === void 0) { worstCase = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var e_3, _a, e_4, _b, totalMakerAssetAmount, totalTakerAssetAmount, totalFeeTakerAssetAmount, remainingMakerAssetFillAmount, filledOrders, _orders, _orders_2, _orders_2_1, order, makerAssetAmount, takerAssetAmount, feeTakerAssetAmount, adjustedFillableMakerAssetAmount, adjustedFillableTakerAssetAmount, takerAssetAmountWithFees, takerAssetAmountBreakDown, makerAssetBridgeSlippage, takerAssetBridgeSlippage, subFills, subFills_2, subFills_2_1, subFill, partialTakerAssetAmount, partialMakerAssetAmount, partialMakerAssetFillAmount, partialTakerAssetFillAmount, protocolFeeInWeiAmount;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        totalMakerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                        totalTakerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                        totalFeeTakerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                        remainingMakerAssetFillAmount = makerAssetBuyAmount;\n                        filledOrders = [];\n                        _orders = !worstCase ? orders : orders.slice().reverse();\n                        try {\n                            for (_orders_2 = __values(_orders), _orders_2_1 = _orders_2.next(); !_orders_2_1.done; _orders_2_1 = _orders_2.next()) {\n                                order = _orders_2_1.value;\n                                makerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                                takerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                                feeTakerAssetAmount = constants_1.constants.ZERO_AMOUNT;\n                                if (remainingMakerAssetFillAmount.lte(0)) {\n                                    break;\n                                }\n                                if (order.fill.source === types_3.ERC20BridgeSource.Native) {\n                                    adjustedFillableMakerAssetAmount = fillable_amounts_utils_1.fillableAmountsUtils.getMakerAssetAmountSwappedAfterOrderFees(order);\n                                    adjustedFillableTakerAssetAmount = fillable_amounts_utils_1.fillableAmountsUtils.getTakerAssetAmountSwappedAfterOrderFees(order);\n                                    makerAssetAmount = utils_1.BigNumber.min(remainingMakerAssetFillAmount, adjustedFillableMakerAssetAmount);\n                                    takerAssetAmountWithFees = makerAssetAmount\n                                        .div(adjustedFillableMakerAssetAmount)\n                                        .multipliedBy(adjustedFillableTakerAssetAmount)\n                                        .integerValue(utils_1.BigNumber.ROUND_UP);\n                                    takerAssetAmountBreakDown = getTakerAssetAmountBreakDown(order, takerAssetAmountWithFees);\n                                    takerAssetAmount = takerAssetAmountBreakDown.takerAssetAmount;\n                                    feeTakerAssetAmount = takerAssetAmountBreakDown.feeTakerAssetAmount;\n                                }\n                                else {\n                                    makerAssetBridgeSlippage = !worstCase\n                                        ? constants_1.constants.ONE_AMOUNT\n                                        : order.makerAssetAmount.div(order.fill.totalMakerAssetAmount);\n                                    takerAssetBridgeSlippage = !worstCase\n                                        ? constants_1.constants.ONE_AMOUNT\n                                        : order.takerAssetAmount.div(order.fill.totalTakerAssetAmount);\n                                    subFills = !worstCase ? order.fill.subFills : order.fill.subFills.slice().reverse();\n                                    try {\n                                        for (subFills_2 = __values(subFills), subFills_2_1 = subFills_2.next(); !subFills_2_1.done; subFills_2_1 = subFills_2.next()) {\n                                            subFill = subFills_2_1.value;\n                                            if (remainingMakerAssetFillAmount.minus(makerAssetAmount).lte(0)) {\n                                                break;\n                                            }\n                                            partialTakerAssetAmount = subFill.takerAssetAmount.times(takerAssetBridgeSlippage);\n                                            partialMakerAssetAmount = subFill.makerAssetAmount.times(makerAssetBridgeSlippage);\n                                            partialMakerAssetFillAmount = utils_1.BigNumber.min(partialMakerAssetAmount, remainingMakerAssetFillAmount.minus(makerAssetAmount));\n                                            partialTakerAssetFillAmount = partialMakerAssetFillAmount\n                                                .div(partialMakerAssetAmount)\n                                                .times(partialTakerAssetAmount)\n                                                .integerValue(utils_1.BigNumber.ROUND_UP);\n                                            takerAssetAmount = takerAssetAmount.plus(partialTakerAssetFillAmount);\n                                            makerAssetAmount = makerAssetAmount.plus(partialMakerAssetFillAmount);\n                                        }\n                                    }\n                                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                                    finally {\n                                        try {\n                                            if (subFills_2_1 && !subFills_2_1.done && (_b = subFills_2.return)) _b.call(subFills_2);\n                                        }\n                                        finally { if (e_4) throw e_4.error; }\n                                    }\n                                }\n                                totalMakerAssetAmount = totalMakerAssetAmount.plus(makerAssetAmount);\n                                totalTakerAssetAmount = totalTakerAssetAmount.plus(takerAssetAmount);\n                                totalFeeTakerAssetAmount = totalFeeTakerAssetAmount.plus(feeTakerAssetAmount);\n                                remainingMakerAssetFillAmount = remainingMakerAssetFillAmount.minus(makerAssetAmount);\n                                filledOrders.push(order);\n                            }\n                        }\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                        finally {\n                            try {\n                                if (_orders_2_1 && !_orders_2_1.done && (_a = _orders_2.return)) _a.call(_orders_2);\n                            }\n                            finally { if (e_3) throw e_3.error; }\n                        }\n                        return [4 /*yield*/, this._protocolFeeUtils.calculateWorstCaseProtocolFeeAsync(!worstCase ? filledOrders : orders, gasPrice)];\n                    case 1:\n                        protocolFeeInWeiAmount = _c.sent();\n                        return [2 /*return*/, {\n                                feeTakerAssetAmount: totalFeeTakerAssetAmount,\n                                takerAssetAmount: totalTakerAssetAmount,\n                                totalTakerAssetAmount: totalFeeTakerAssetAmount.plus(totalTakerAssetAmount),\n                                makerAssetAmount: totalMakerAssetAmount,\n                                protocolFeeInWeiAmount: protocolFeeInWeiAmount,\n                            }];\n                }\n            });\n        });\n    };\n    // tslint:disable-next-line: prefer-function-over-method\n    SwapQuoteCalculator.prototype._getSwapQuoteOrdersBreakdown = function (orders, operation) {\n        // HACK: to shut up linter\n        var breakdown = {};\n        // total asset amount (accounting for slippage protection)\n        var totalAssetAmount = utils_1.BigNumber.sum.apply(utils_1.BigNumber, __spread([\n            constants_1.constants.ZERO_AMOUNT\n        ], orders.map(function (o) { return (operation === types_2.MarketOperation.Buy ? o.makerAssetAmount : o.takerAssetAmount); })));\n        return orders.reduce(function (acc, order) {\n            var _a;\n            var assetAmount = operation === types_2.MarketOperation.Buy ? order.makerAssetAmount : order.takerAssetAmount;\n            var source = order.fill.source;\n            return __assign({}, acc, (_a = {},\n                _a[source] = !!acc[source]\n                    ? acc[source].plus(assetAmount.dividedBy(totalAssetAmount))\n                    : assetAmount.dividedBy(totalAssetAmount),\n                _a));\n        }, breakdown);\n    };\n    return SwapQuoteCalculator;\n}());\nexports.SwapQuoteCalculator = SwapQuoteCalculator;\nfunction getTakerAssetAmountBreakDown(order, takerAssetAmountWithFees) {\n    if (utils_2.utils.isOrderTakerFeePayableWithTakerAsset(order)) {\n        var adjustedTakerAssetAmount = order.takerAssetAmount.plus(order.takerFee);\n        var filledRatio = takerAssetAmountWithFees.div(adjustedTakerAssetAmount);\n        var takerAssetAmount = filledRatio.multipliedBy(order.takerAssetAmount).integerValue(utils_1.BigNumber.ROUND_CEIL);\n        return {\n            takerAssetAmount: takerAssetAmount,\n            feeTakerAssetAmount: takerAssetAmountWithFees.minus(takerAssetAmount),\n        };\n    }\n    else if (utils_2.utils.isOrderTakerFeePayableWithMakerAsset(order)) {\n        if (takerAssetAmountWithFees.isZero()) {\n            return {\n                takerAssetAmount: constants_1.constants.ZERO_AMOUNT,\n                feeTakerAssetAmount: constants_1.constants.ZERO_AMOUNT,\n            };\n        }\n        var takerFeeAmount = order_utils_1.orderCalculationUtils.getTakerFeeAmount(order, takerAssetAmountWithFees);\n        var makerAssetFillAmount = order_utils_1.orderCalculationUtils.getMakerFillAmount(order, takerAssetAmountWithFees);\n        var takerAssetAmount = takerFeeAmount\n            .div(makerAssetFillAmount)\n            .multipliedBy(takerAssetAmountWithFees)\n            .integerValue(utils_1.BigNumber.ROUND_UP);\n        return {\n            takerAssetAmount: takerAssetAmount,\n            feeTakerAssetAmount: takerAssetAmountWithFees.minus(takerAssetAmount),\n        };\n    }\n    return {\n        feeTakerAssetAmount: constants_1.constants.ZERO_AMOUNT,\n        takerAssetAmount: takerAssetAmountWithFees,\n    };\n}\n//# sourceMappingURL=swap_quote_calculator.js.map"],"sourceRoot":""}