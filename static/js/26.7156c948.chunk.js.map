{"version":3,"sources":["components/Card/index.js","components/Row/index.tsx","components/Column/index.tsx","components/hoc/withWeb3Account.tsx","components/NumericalInput/index.tsx","components/SearchModal/styleds.tsx","components/Modal/index.tsx","assets/images/dropdown.svg","http/instantSwap/OneInch.js","http/instantSwap/Godex.js","http/instantSwap/dexAg.js","http/instantSwap/SimpleSwap.js","http/instantSwap/index.js","components/SwapSelectModal/CurrencyList.js","components/SwapSelectModal/index.js","components/SwapInputPanel/index.js","pages/InstantSwap/index.js"],"names":["Header","Card","Body","CustomCard","styled","theme","modalBG","margin","marginBottom","marginTop","RCard","CustomHeader","isTable","CustomBody","CustomTitle","h4","ResponsiveCard","props","header","title","children","body","Comp","Row","Box","align","padding","border","borderRadius","RowBetween","AutoRow","div","gap","justify","RowFixed","Column","ColumnCenter","AutoColumn","withWeb3Account","Component","context","useActiveWeb3React","toggleWalletModal","useWalletModalToggle","web3","StyledInput","input","error","red1","text1","size","reverse","noBorder","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","flexRowNoWrap","FadedSpan","primary1","PaddedColumn","MenuItem","disabled","bg2","selected","Separator","text2","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","AnimatedDialogContent","DialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","maxWidth","attrs","transparentize","shadow1","css","mediaWidth","upToMedium","upToSmall","Modal","onDismiss","initialFocusRef","fadeTransition","useTransition","config","duration","from","opacity","enter","leave","useEffect","PaddingWidth","scrollDiv","document","createElement","className","appendChild","scrollbarWidth","getBoundingClientRect","width","clientWidth","removeChild","_getScrollbarWidth","style","paddingRight","useSpring","y","mass","tension","friction","set","bind","useGesture","onDrag","state","down","movement","velocity","direction","map","item","key","setTimeout","isMobile","aria-label","tabIndex","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","stroke","SvgDropdown","_ref","svgRef","titleId","height","viewBox","fill","xmlns","ref","id","ForwardRef","OneInchApi","instance","axios","create","baseURL","payload","getTokens","getProtocols","getHealthcheck","getQuote","getSwap","getSpender","getApprove","get","query","encodeQuery","GodexApi","getRate","createTransaction","getTransaction","getTransactionStatus","post","DexAgApi","SimpleSwapApi","apiKey","process","interceptors","response","use","data","fetchAllCurrencies","fetchAllPairs","fetchCurrencyInfo","getExchange","getRange","getMarkets","Promise","resolve","reject","postNewExchange","obj","stringify","result","queryString","injectApiKey","amount","rate","range","min","max","JSON","headers","paraswap","ParaSwap","oneInch","godex","dexag","api","sdk","DEXAG","fromProvider","window","ethereum","simpleSwap","Logo","img","StyledBalanceText","Text","StyledText","Symbol","symbol","CurrencyRow","currency","onSelect","isSelected","onClick","src","logoURI","alt","name","fontWeight","justifySelf","CurrencyList","currencies","selectedCurrency","onCurrencySelect","fixedListRef","useCallback","index","address","itemKey","itemData","itemCount","itemSize","disable","StyledColumn","HeaderContainer","SwapSelectModal","useContext","ThemeContext","useState","searchQuery","setSearchQuery","fixedList","useRef","inputRef","filteredTokens","useMemo","filter","token","toLowerCase","includes","handleInput","current","scrollTo","handleCurrencySelect","flex","InputGroup","Prepend","SearchIcon","FormControl","disableWidth","InputRow","Label","span","Balance","InputContainer","LabelRow","StyledDropDown","DropDown","white","Aligner","InputPanel","flexColumnNoWrap","StyledTokenName","active","CurrencySelect","button","bg1","SwapInputPanel","label","hideInput","disableCurrencySelect","onChangeBalance","balance","undefined","Token","chainId","decimals","modalOpen","setModalOpen","account","selectedCurrencyBalance","useCurrencyBalance","ETHER","handleDismissSearch","toSignificant","Boolean","slice","NumericalInput","val","SwapButton","Button","StyledRow","RateText","ProgressContainer","PlatformCard","primary","BUY_STATES","InstantSwap","setState","promiseHandler","callback","then","catch","getParaswapSortedRates","rates","_","orderBy","others","getDexagSortedRates","getSortedRates","transformRates","apiRates","toTokenAmount","push","pair","destination","platform","forEach","supportedDEXes","exchange","unit","dex","Number","price","getSortedResult","sortedParts","transformedRates","sortBy","o","fetchPrices","a","deposit","loading","loadingState","all","loaded","fromAmount","dexagParams","to","fromTokenAddress","toTokenAddress","getPrice","fixed","SIMPLE_SWAP_FIXED","currency_from","currency_to","toFixed","toast","showMore","hasEnoughBalance","onSwapTokens","prevState","onUserInputHandler","selectRate","setBuyState","buyState","setDefaultBuyState","oneInchBuyHandler","spenderRes","spender","TokenAmount","contract","getContract","ERC20_ABI","library","functions","allowance","toString","lessThan","approve","raw","open","fromAddress","slippage","protocols","res","tx","eth","sendTransaction","err","transactionHash","code","isExchangeInProgress","success","status","paraSwapBuyHandler","canExchange","setWeb3Provider","toAmount","getAllowance","allowanceRes","approveToken","selectedRoute","find","txRoute","bestRoute","buildTx","txParams","dexagBuyHandler","valid","registerStatusHandler","getTrade","validate","trade","simpleSwapBuyHandler","address_to","message","showQrModal","simpleSwapOrder","godexBuyHandler","buyHandler","toggleShowMore","Web3","givenProvider","InstantSwapApi","typeTimeout","tokens","Page","Col","xs","md","offset","fontSize","ProgressBar","now","variant","toAbsoluteUrl","DEXesImages","DEXesName","display","flexBasis","minWidth","show","centered","onHide","paddingTop","paddingBottom","address_from","fgColor","bgColor","amount_from","toUpperCase","contextType","connect","user","userSlippageTolerance"],"mappings":"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","file":"static/js/26.7156c948.chunk.js","sourcesContent":["import { Card } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst { Header, Body } = Card;\n\nexport const CustomCard = styled(Card)`\n  background-color: ${({ theme }) => theme.modalBG };\n  color: white;\n  margin-bottom: ${({margin, marginBottom}) => marginBottom ? `${marginBottom}px` : margin ? `${margin}px` : '20px'};\n  margin-top:  ${({margin, marginTop}) => marginTop ? `${marginTop}px` : margin ? `${margin}px` : '0'};;\n  border-radius: 18px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n`\n\nexport const RCard = styled(CustomCard)`\n  @media (max-width: 767px) {\n      margin-left: -30px;\n      margin-right: -30px;\n      border-radius: 0;\n      \n      .card-body {\n        padding-left: 30px;\n        padding-right: 30px;\n      }\n  }\n \n`\n\nexport const CustomHeader = styled(Header)`\n  border-bottom-color: rgba(255, 255, 255, 0.5);\n  background-color: transparent;\n  padding: 20px;\n  \n  \n  @media (min-width: 768px) {\n  padding: ${({ isTable }) => isTable ? '30px 60px' : '30px'};\n  }\n`\n\nexport const CustomBody = styled(Body)`\n  padding: 20px;\n  background-color: transparent;\n  \n  \n  @media (min-width: 768px) {\n  padding: ${({ isTable }) => isTable ? '18px 48px' : '30px'};\n  }\n`\n\nexport const CustomTitle = styled.h4`\n    margin: 0;\n    font-weight: bold;\n    color: white;\n    font-size: 1.25rem;\n`\n\nconst Comp = props => {\n    return (\n        <CustomCard {...props}>\n            {props.header && (\n                <CustomHeader isTable={props.isTable}>\n                    {props.title && (\n                        <CustomTitle>{props.title}</CustomTitle>\n                    )}\n                    {props.header}\n                </CustomHeader>\n            )}\n            <CustomBody isTable={props.isTable}>\n                {props.children || props.body}\n            </CustomBody>\n        </CustomCard>\n    )\n}\nexport const ResponsiveCard = props => {\n    return (\n        <RCard {...props}>\n            {props.header && (\n                <CustomHeader isTable={props.isTable}>\n                    {props.title && (\n                        <CustomTitle>{props.title}</CustomTitle>\n                    )}\n                    {props.header}\n                </CustomHeader>\n            )}\n            <CustomBody isTable={props.isTable}>\n                {props.children || props.body}\n            </CustomBody>\n        </RCard>\n    )\n}\n\nexport default Comp;\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => (align ? align : 'center')};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import {useActiveWeb3React} from \"../../hooks\";\nimport {useWalletModalToggle} from \"../../state/application/hooks\";\n\nconst withWeb3Account = (Component: any) => {\n    return (props: any) => {\n        const context = useActiveWeb3React();\n        const toggleWalletModal = useWalletModalToggle()\n        return <Component\n            web3={context}\n            toggleWalletModal={toggleWalletModal}\n            { ...props }/>\n    }\n}\n\nexport default withWeb3Account;","import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string, noBorder?: boolean, reverse?: boolean, size?: string }>`\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  font-family: inherit;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: rgba(33, 36, 41, 0.5);\n  font-size: 1rem;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  height: ${({ size}) => size === 'sm' ? '48px' : '56px'};\n  border-bottom-right-radius: ${({ reverse }) => reverse ? '0' :  `1.125rem`};\n  border-top-right-radius: ${({ reverse }) => reverse ? '0' :  `1.125rem`};\n  border-bottom-left-radius: ${({ reverse }) => reverse ? '1.125rem' :  `0`};\n  border-top-left-radius: ${({ reverse }) => reverse ? '1.125rem' :  `0`};\n  padding-right: 0.625rem;\n  padding-left: ${({ noBorder, reverse }) => reverse ? '1.375rem' : noBorder ? '0.625rem' : `1.5rem`};\n  -webkit-appearance: textfield;\n  border-left: ${({ theme, noBorder }) => noBorder ? 'none' :  `3px solid ${theme.modalBG}`};\n  \n  @media (min-width: 768px) {\n    \n    padding-right: 4.5625rem;\n  }\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: rgba(255, 255, 255, .5);\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  size,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  size?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={event => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      size={size}\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import styled from 'styled-components'\nimport { AutoColumn } from '../Column'\nimport { RowBetween, RowFixed } from '../Row'\n\nexport const ModalInfo = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  padding: 1rem 1rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: center;\n  flex: 1;\n  user-select: none;\n`\n\nexport const FadedSpan = styled(RowFixed)`\n  color: ${({ theme }) => theme.primary1};\n  font-size: 14px;\n`\n\nexport const PaddedColumn = styled(AutoColumn)`\n  padding: 30px;\n  padding-bottom: 20px;\n`\n\nexport const MenuItem = styled(RowBetween)`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto minmax(0, 72px);\n  grid-gap: 16px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.bg2};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nexport const SearchInput = styled.input`\n  position: relative;\n  display: flex;\n  padding: 16px;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  border-radius: 20px;\n  color: ${({ theme }) => theme.text1};\n  border-style: solid;\n  border: 1px solid ${({ theme }) => theme.bg2};\n  -webkit-appearance: none;\n\n  font-size: 18px;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text2};\n  }\n  transition: border 100ms;\n  :focus {\n    border: 1px solid ${({ theme }) => theme.primary1};\n    outline: none;\n  }\n`\nexport const Separator = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: rgba(255, 255, 255, 0.5);\n`\n\nexport const SeparatorDark = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg2};\n`\n","import React, {useEffect} from 'react'\nimport styled, { css } from 'styled-components'\nimport { animated, useTransition, useSpring } from 'react-spring'\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\nimport { isMobile } from 'react-device-detect'\nimport '@reach/dialog/styles.css'\nimport { transparentize } from 'polished'\nimport { useGesture } from 'react-use-gesture'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 1100;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(33, 36, 41, 0.6);\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, maxWidth, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog'\n})`\n  overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    background-color: ${({ theme }) => theme.modalBG};\n    box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadow1)};\n    padding: 0;\n    width: 50vw;\n    overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n    overflow-x: hidden;\n\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    ${({ maxWidth }) =>\n    maxWidth &&\n    css`\n        max-width: ${maxWidth}px;\n      `}\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 18px\n    ;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      margin: 0;\n    `}\n    ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      ${mobile &&\n        css`\n          width: 100vw;\n          border-radius: 20px;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        `}\n    `}\n  }\n`\n\ninterface ModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  maxWidth?: number\n  initialFocusRef?: React.RefObject<any>\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 90,\n  maxWidth = 420,\n  initialFocusRef,\n  children\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 }\n  })\n\n  const _getScrollbarWidth = () => {\n    const scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    document.body.appendChild(scrollDiv)\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth\n    document.body.removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n  useEffect(() => {\n      if(isOpen){\n        const PaddingWidth = _getScrollbarWidth();\n        document.body.style.paddingRight = `${PaddingWidth}px`\n      }\n  }, [isOpen])\n\n  const [, set] = useSpring(() => ({ y: 0, config: { mass: 1, tension: 210, friction: 20 } }))\n  const bind = useGesture({\n    onDrag: state => {\n      set({\n        y: state.down ? state.movement[1] : 0\n      })\n      if (state.movement[1] > 300 || (state.velocity > 3 && state.direction[1] > 0)) {\n        onDismiss()\n      }\n    }\n  })\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogOverlay key={key} style={props} onDismiss={() => {\n              onDismiss()\n              setTimeout(() => {\n                document.body.style.paddingRight = `0`\n              }, 200)\n            }} initialFocusRef={initialFocusRef}>\n              <StyledDialogContent\n                {...(isMobile\n                  ? {\n                      ...bind(),\n                    }\n                  : {})}\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                maxWidth={maxWidth}\n                mobile={isMobile}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {children}\n              </StyledDialogContent>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.97168 1L6.20532 6L11.439 1\",\n  stroke: \"#AEAEAE\"\n});\n\nfunction SvgDropdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdown);\nexport default __webpack_public_path__ + \"static/media/dropdown.fef18eeb.svg\";\nexport { ForwardRef as ReactComponent };","import axios from 'axios';\nimport {encodeQuery} from \"../../lib/helper\";\n\nexport default class OneInchApi {\n    constructor() {\n        this.instance = axios.create({\n            baseURL: 'https://api.1inch.exchange/v2.0/'\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'tokens': {\n                return this.getTokens();\n            }\n            case 'protocols': {\n                return this.getProtocols();\n            }\n            case 'healthcheck': {\n                return this.getHealthcheck();\n            }\n            case 'quote': {\n                return this.getQuote(payload);\n            }\n            case 'swap': {\n                return this.getSwap(payload);\n            }\n            case 'spender': {\n                return this.getSpender();\n            }\n            case 'approve': {\n                return this.getApprove(payload);\n            }\n        }\n    }\n\n    getTokens() {\n        return this.instance.get('tokens');\n    }\n\n    getProtocols() {\n        return this.instance.get('protocols');\n    }\n    getHealthcheck() {\n        return this.instance.get('healthcheck');\n    }\n    getQuote(payload) {\n        let query = encodeQuery(payload);\n        return this.instance.get(`quote?${query}`);\n    }\n\n    getSwap(payload) {\n        let query = encodeQuery(payload);\n        return this.instance.get(`swap?${query}`);\n    }\n\n    getSpender() {\n        return this.instance.get('approve/spender')\n    }\n\n    getApprove(payload) {\n        let query = encodeQuery(payload);\n        return this.instance.get(`approve/calldata?${query}`);\n    }\n}\n","import axios from 'axios';\nimport {encodeQuery} from \"../../lib/helper\";\n\nexport default class GodexApi {\n    constructor() {\n        this.instance = axios.create({\n            baseURL: 'https://api.godex.io/api/v1/'\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'tokens': {\n                return this.getTokens();\n            }\n            case 'rate': {\n                return this.getRate(payload);\n            }\n            case 'transaction': {\n                return this.createTransaction(payload);\n            }\n            case 'getTransaction': {\n                return this.getTransaction(payload);\n            }\n            case 'getTransactionStatus': {\n                return this.getTransactionStatus(payload);\n            }\n        }\n    }\n\n    getTokens() {\n        return this.instance.get('coins');\n    }\n\n    getRate(payload) {\n        return this.instance.post('info', payload);\n    }\n    createTransaction(payload) {\n        return this.instance.post('transaction', payload);\n    }\n    getTransaction({ id }) {\n        return this.instance.get(`transaction/${id}`);\n    }\n    getTransactionStatus({ id }) {\n        return this.instance.get(`transaction/${id}/status`);\n    }\n}","import axios from 'axios';\nimport {encodeQuery} from \"../../lib/helper\";\n\nexport default class DexAgApi {\n    constructor() {\n        this.instance = axios.create({\n            baseURL: 'https://api-v2.dex.ag/'\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'tokens': {\n                return this.getTokens();\n            }\n        }\n    }\n\n    getTokens() {\n        return this.instance.get('token-list-full');\n    }\n\n}","import axios from 'axios';\nimport queryString from \"query-string\";\n\nexport default class SimpleSwapApi {\n    constructor(apiKey = process.env.REACT_APP_SIMPLESWAP_API_KEY) {\n        this.baseURL = 'https://api.simpleswap.io/v1/'\n        this.instance = axios.create({\n            baseURL: this.baseURL,\n        })\n        this.apiKey = apiKey;\n\n        this.instance.interceptors.response.use(response => {\n            if(response.hasOwnProperty('data')) {\n                return response.data;\n            }\n            return response;\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'currencies': {\n                return this.fetchAllCurrencies();\n            }\n            case 'pairs': {\n                return this.fetchAllPairs(payload);\n            }\n            case 'currencyInfo': {\n                return this.fetchCurrencyInfo(payload);\n            }\n            case 'rate': {\n                return this.getRate(payload);\n            }\n            case 'exchange': {\n                return this.getExchange(payload);\n            }\n            case 'range': {\n                return this.getRange(payload);\n            }\n            case 'markets': {\n                return this.getMarkets();\n            }\n            default: {\n                return new Promise((resolve, reject) => {\n                    reject('Unresolvable method called');\n                })\n            }\n        }\n    }\n\n    set(type, payload = {}) {\n        switch(type) {\n            case 'exchange': {\n                return this.postNewExchange(payload);\n            }\n            default: {\n                return new Promise((resolve, reject) => {\n                    reject('Unresolvable method called');\n                })\n            }\n        }\n    }\n\n    injectApiKey(obj, stringify = false) {\n        let result = {\n            ...obj,\n            'api_key': this.apiKey,\n        }\n\n        if(stringify) {\n            return queryString.stringify(result);\n        }\n\n        return result;\n    }\n\n    fetchAllCurrencies() {\n        let query = this.injectApiKey({}, true);\n\n        return this.instance.get(`get_all_currencies?${query}`)\n    }\n\n    fetchAllPairs(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`get_all_pairs?${query}`)\n    }\n\n    fetchCurrencyInfo(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`get_currency?${query}`)\n    }\n\n    getRate(payload) {\n        let query = this.injectApiKey(\n            payload.query ? {\n                ...payload.query,\n                amount: 1,\n            } : {},\n            true\n        );\n\n        return this.instance.get(`get_estimated?${query}`)\n    }\n\n    async getExchange(payload) {\n        try {\n            const rate = await this.getRate(payload);\n            const range = await this.getRange(payload);\n\n            return {\n                rate,\n                ...range,\n            }\n        } catch(e) {\n\n            return {\n                rate: null,\n                min: null,\n                max: null\n            }\n        }\n    }\n\n    getRange(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`get_ranges?${query}`)\n    }\n\n    getMarkets() {\n        let query = this.injectApiKey({}, true);\n\n        return this.instance.get(`get_market_info?${query}`)\n    }\n\n    postNewExchange(payload) {\n        let query = this.injectApiKey({}, true);\n        return this.instance.post(`create_exchange?${query}`, JSON.stringify(payload.data), {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'accept': 'application/json',\n            }\n        })\n    }\n}\n","import {ParaSwap} from \"paraswap\";\nimport DEXAG from 'dexag-sdk'\n\nimport OneInchApi from \"./OneInch\";\nimport GodexApi from './Godex';\nimport DexAgApi from \"./dexAg\";\nimport SimpleSwapApi from \"./SimpleSwap\";\n\nexport default {\n    paraswap: new ParaSwap(),\n    oneInch: new OneInchApi(),\n    godex: new GodexApi(),\n    dexag: {\n        api: new DexAgApi(),\n        sdk: DEXAG.fromProvider(window.ethereum),\n    },\n    simpleSwap: new SimpleSwapApi()\n}","import React, {useCallback} from 'react'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport Column from '../Column'\nimport {RowBetween} from '../Row'\n\nexport const MenuItem = styled(RowBetween)`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto ;\n  grid-gap: 16px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.bg2};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\n\nconst Logo = styled.img`\n  width: ${({size}) => size ? `${size}px` : '24px'};\n  height: ${({size}) => size ? `${size}px` : '24px'};\n  border-radius: ${({size}) => size ? `${size}px` : '24px'};\n  border: 2px solid white;\n  background-color: white;\n  margin-right: ${({ margin }) => margin ? '8px' : 0};\n  \n  @media (max-width: 1199px) {\n  \n      width: 24px;\n      height: 24px;\n  }\n`\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n  \n  \n  @media (max-width: 1199px) {\n    font-size: .875rem;\n    font-weight: 400;\n  }\n`\n\nconst StyledText = styled(Text)`\n  @media (max-width: 1199px) {\n    font-size: .875rem;\n    font-weight: 400;\n  }\n`\n\nfunction Symbol({ symbol }) {\n    return <StyledBalanceText>{symbol}</StyledBalanceText>\n}\n\n\nfunction CurrencyRow({\n    currency,\n    onSelect,\n    isSelected,\n    style,\n}) {\n    return (\n        <MenuItem\n            style={style}\n            className={`token-item-${currency.symbol}`}\n            onClick={() => (isSelected ? null : onSelect())}\n            disabled={isSelected}\n        >\n            <Logo src={currency.logoURI} size={24} alt={currency.symbol}/>\n            <Column>\n                <StyledText title={currency.name} fontWeight={500}>\n                    {currency.symbol}\n                </StyledText>\n            </Column>\n\n            <Column style={{ justifySelf: 'flex-end' }}>\n                <Symbol symbol={currency.name} />\n            </Column>\n        </MenuItem>\n    )\n\n}\n\nexport default function CurrencyList({\n    height,\n    currencies,\n    selectedCurrency,\n    onCurrencySelect,\n    fixedListRef,\n}) {\n\n    const Row = useCallback(\n        ({ data, index, style }) => {\n            const currency = data[index]\n            const handleSelect = () => onCurrencySelect(data[index])\n            const isSelected =  selectedCurrency ? (selectedCurrency.address === currency.address && selectedCurrency.symbol === currency.symbol) : false;\n            return (\n                <CurrencyRow\n                    style={style}\n                    currency={currency}\n                    onSelect={handleSelect}\n                    isSelected={isSelected}\n                />\n            )\n        },\n        [onCurrencySelect, selectedCurrency]\n    )\n\n    const itemKey = useCallback((index, data) => {\n        return data[index].address\n    }, [])\n\n    return (\n        <FixedSizeList\n            height={height}\n            ref={fixedListRef}\n            width=\"100%\"\n            itemData={currencies}\n            itemCount={currencies.length}\n            itemSize={56}\n            itemKey={itemKey}\n        >\n            {Row}\n        </FixedSizeList>\n    )\n}\n","import React, {useCallback, useContext, useEffect, useMemo, useRef, useState} from 'react'\nimport Modal from '../Modal'\nimport Column from \"../Column\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport CurrencyList from \"./CurrencyList\";\nimport {PaddedColumn, Separator} from \"../SearchModal/styleds\";\nimport {Col, Form, FormControl, InputGroup} from \"react-bootstrap\";\nimport styled, {ThemeContext} from \"styled-components\";\nimport SearchIcon from \"../../assets/images/search.svg\";\n\nconst BaseWrapper = styled.div`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.bg2)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.bg2};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.bg2};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nconst StyledColumn = styled(Column)`\n  padding: 15px;\n  @media (min-width: 991px) {\n  padding: 67px 90px 10px;\n  }\n`\n\nconst HeaderContainer = styled.div`\n  margin-bottom: 51px;\n  \n  @media (max-width: 1199px) {\n  margin-bottom: 14px;\n  }\n`\n\nexport default function SwapSelectModal({\n    isOpen,\n    onDismiss,\n    onCurrencySelect,\n    selectedCurrency,\n    currencies,\n    type\n}) {\n    const theme = useContext(ThemeContext);\n    const [searchQuery, setSearchQuery] = useState('')\n    const fixedList = useRef()\n    const inputRef = useRef();\n\n    const filteredTokens = useMemo(() => {\n        return currencies.filter(token => JSON.stringify(token).toLowerCase().includes(searchQuery) || !searchQuery);\n    }, [currencies, searchQuery])\n\n    const titles = useMemo(() => {\n        return currencies.map((token, index) => {\n            return {\n                ...token, index\n            }\n        }).filter(token => token.type === 'title');\n    }, [currencies])\n\n    useEffect(() => {\n        if (isOpen) {\n            setSearchQuery('')\n        }\n    }, [isOpen])\n\n    const handleInput = useCallback(event => {\n        const input = event.target.value\n        setSearchQuery(input.toLowerCase())\n        fixedList.current.scrollTo(0)\n    }, [])\n\n    const handleCurrencySelect = useCallback(\n        (currency) => {\n            onCurrencySelect(currency, type)\n            onDismiss()\n        },\n        [onDismiss, onCurrencySelect]\n    )\n\n\n    return (\n        <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={80} minHeight={80} maxWidth={530}>\n\n\n            <StyledColumn style={{ width: '100%', flex: '1 1', minHeight: '100px' }}>\n                <HeaderContainer>\n                    <InputGroup className={'w-auto'}>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>\n                                <img src={SearchIcon} alt=\"search\"/>\n                            </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                             id=\"token-search-input\"\n                             placeholder={'Search'}\n                             value={searchQuery}\n                             ref={inputRef}\n                             onChange={handleInput}/>\n                    </InputGroup>\n\n                </HeaderContainer>\n\n\n                <div style={{ flex: '1' }}>\n                    <AutoSizer disableWidth>\n                        {({ height }) => (\n                            <CurrencyList\n                                height={height}\n                                currencies={filteredTokens}\n                                onCurrencySelect={handleCurrencySelect}\n                                selectedCurrency={selectedCurrency}\n                                fixedListRef={fixedList}\n                            />\n                        )}\n                    </AutoSizer>\n                </div>\n\n            </StyledColumn>\n        </Modal>\n    )\n}\n","import React, {useCallback, useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\n\nimport { RowBetween } from '../Row'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport {ReactComponent as DropDown} from \"../../assets/images/dropdown.svg\";\nimport SwapSelectModal from \"../SwapSelectModal\";\nimport {ETHER, Token} from \"@uniswap/sdk\";\nimport {useActiveWeb3React} from \"../../hooks\";\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  \n  padding: 1rem 0 1.25rem;\n  \n  \n  @media (min-width: 768px) {\n    padding-top: 0.75rem;\n  }\n`\n\nconst Label = styled.span`\n  color: white;\n  font-weight: 400;\n  font-size: .875rem;\n  padding: 0 ;\n  \n  @media (min-width: 768px) {\n    padding: 0 1.5rem;\n  }\n`\n\nconst Balance = styled.span`\n  color: white;\n  font-weight: 400;\n  font-size: .75rem;\n  padding: 0 ;\n  margin-bottom: -6px;\n  \n  \n  @media (min-width: 768px) {\n  font-size: .875rem;\n  font-weight: 500;\n  margin-bottom: 0;\n  }\n  \n`\n\n\nconst InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  flex: 1;\n  \n`\n\nconst Logo = styled.img`\n  width: ${({ size }) => size || '100%'};\n  height: ${({ size }) => size || '100%'};\n  border-radius: ${({ size }) => size || '100%'};\n  border: 2px solid white;\n  color: white;\n  margin-right: ${({ margin }) => margin ? '8px' : 0};\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0;\n`\n\nconst StyledDropDown = styled(DropDown)`\n  margin: 0 0.25rem 0 0.5rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n    stroke-width: 1.5px;\n  }\n`\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  position: relative;\n  border-radius: 0.42rem;\n`\n\n\nconst StyledTokenName = styled.span`\n  margin-right: auto;\n  padding-left: ${({ active }) => active ? '0.625rem' : '0'};\n  font-size:  1rem;\n  \n  \n  @media (min-width: 768px) {\n  padding-left: ${({ active }) => active ? '0.75rem' : '0'};\n  }\n\n`\n\n\nconst CurrencySelect = styled.button`\n  align-items: center;\n  height: 56px;\n  font-size: 0.875rem;\n  font-weight: 500;\n  background-color: rgba(33, 36, 41, 0.5);\n  color: white;\n  border-bottom-left-radius: 18px;\n  border-top-left-radius: 18px;\n  box-shadow: none;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0.875rem 0.625rem;\n  min-width: 116px;\n  width: 116px;\n  \n  \n  @media (min-width: 768px) {\n  min-width: 178px;\n  width: 178px;\n  padding: .625rem 1.5rem;\n  font-size: 1rem;\n  font-weight: 700;\n  }\n\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => theme.bg1};\n    outline: none;\n  }\n`\n\nexport default function SwapInputPanel({\n    value,\n    onUserInput,\n    label = 'Input',\n    onSelect,\n    disable = false,\n    selected,\n    hideInput = false,\n    id,\n    currencies,\n    type,\n    disableCurrencySelect = false,\n    onChangeBalance = (balance) => balance\n}) {\n    let currency = undefined;\n    if(selected) {\n        currency = new Token(selected.chainId, selected.address, selected.decimals, selected.symbol, selected.name);\n    }\n    const [modalOpen, setModalOpen] = useState(false)\n    const { account } = useActiveWeb3React()\n    const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, selected && selected.symbol === 'ETH' ? ETHER : currency)\n\n    useEffect(() => {\n        onChangeBalance(selectedCurrencyBalance)\n    }, [selected])\n\n    const handleDismissSearch = useCallback(() => {\n        setModalOpen(false)\n    }, [setModalOpen])\n\n    return (\n        <InputPanel id={id}>\n            <div>\n                {!hideInput && (\n                    <LabelRow>\n                        <RowBetween>\n                            <Label>\n                                {label}\n                            </Label>\n\n                            {account && (\n                                <Balance\n                                >\n                                  {!!currency && selectedCurrencyBalance\n                                      ? ('Balance: ') + selectedCurrencyBalance?.toSignificant(6)\n                                      : ' -'}\n                                </Balance>\n                            )}\n                        </RowBetween>\n                    </LabelRow>\n                )}\n                <InputRow style={hideInput ? { padding: '0', borderRadius: '0.42rem' } : {}} selected={disable}>\n\n                    <CurrencySelect\n                        selected={!!selected}\n                        className=\"open-currency-select-button\"\n                        onClick={() => {\n                            if (!disableCurrencySelect) {\n                                setModalOpen(true)\n                            }\n                        }}\n                    >\n                        <Aligner>\n                            {selected ? (\n                                <Logo src={selected.logoURI} size={`24px`} alt={selected.symbol}/>\n                            ) : null}\n                            <StyledTokenName className=\"token-symbol-container\" active={Boolean(selected && selected?.symbol)}>\n                                {(selected && selected?.symbol && selected?.symbol.length > 20\n                                    ? selected?.symbol.slice(0, 4) +\n                                    '...' +\n                                    selected?.symbol.slice(selected?.symbol.length - 5, selected?.symbol.length)\n                                    : selected?.symbol) || `Select`}\n                            </StyledTokenName>\n                            {!disableCurrencySelect && <StyledDropDown selected={!!selected} />}\n                        </Aligner>\n                    </CurrencySelect>\n\n                    {!hideInput && (\n                        <InputContainer>\n                            <NumericalInput\n                                className=\"token-amount-input\"\n                                value={value}\n                                onUserInput={val => {\n                                    onUserInput(val, type, selectedCurrencyBalance)\n                                }}\n                            />\n                        </InputContainer>\n                    )}\n                </InputRow>\n            </div>\n\n\n            {!disableCurrencySelect && onSelect && (\n                <SwapSelectModal\n                    isOpen={modalOpen}\n                    onDismiss={handleDismissSearch}\n                    onCurrencySelect={onSelect}\n                    selectedCurrency={selected}\n                    currencies={currencies}\n                    type={type}\n                />\n            )}\n        </InputPanel>\n    )\n}\n","import React from 'react';\nimport {Row, Col, Button, ProgressBar, Modal} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport styled, {ThemeContext} from \"styled-components\";\nimport _ from 'lodash';\nimport { Text } from 'rebass'\nimport { isMobile } from 'react-device-detect';\nimport QRCode from \"react-qr-code\";\n\nimport {ResponsiveCard} from \"../../components/Card\";\nimport withWeb3Account from \"../../components/hoc/withWeb3Account\";\nimport {DEXesImages, DEXesName, SIMPLE_SWAP_FIXED, supportedDEXes} from \"../../constants\";\nimport InstantSwapApi from '../../http/instantSwap';\nimport SwapInputPanel from \"../../components/SwapInputPanel\";\nimport {walletTokens as tokens} from '../../constants/spot-config/mainnet/config.json';\nimport {toAbsoluteUrl} from \"../../lib/helper\";\nimport ERC20_ABI from '../../constants/abis/erc20.json';\nimport {getContract} from \"../../utils\";\nimport {ETHER, Token, TokenAmount} from \"@uniswap/sdk\";\nimport Page from \"../../components/Page\";\nimport Web3 from \"web3\";\nimport {RowBetween} from \"../../components/Row\";\nimport {CloseIcon} from \"../../theme\";\nimport {toast} from \"react-hot-toast\";\n\nconst SwapButton = styled(Button)`\n  height: 56px;\n  min-width: 250px;\n  align-self: center;\n  \n  \n  @media (max-width: 767px) {\n    width: 100%;\n  }\n`\n\n\nconst StyledRow = styled(Row)`\n  margin-top: 86px;\n  \n  @media (max-width: 767px) {\n    margin-top: 20px;\n  }\n`\n\n\nconst CustomCard = styled(ResponsiveCard)`\n  margin-top: 70px;\n  \n  & .card-body {\n  \n    @media (min-width: 768px) {\n    \n      padding: 42px 50px 32px;\n    }\n  }\n`\n\nconst RateText = styled(Text)`\n  color: white;\n  \n  @media (max-width: 767px) {\n    font-size: 12px;\n  }\n`\n\nconst Logo = styled.img`\n  width: ${({size}) => size ? `${size}px` : '24px'};\n  height: ${({size}) => size ? `${size}px` : '24px'};\n  border-radius: ${({size}) => size ? `${size}px` : '24px'};\n  background-color: white;\n  border: 2px solid white;\n  margin-right: 15px;\n`\n\nconst ProgressContainer = styled.div`\n  background: rgba(135, 220, 225, 0.15);\n  border-radius: 18px;\n  padding: 26px 20px;\n  margin-top: 10px;\n  \n  .progress {\n    height: 5px;\n    background-color: rgba(135, 220, 225, 0.15);\n    border-radius: 15px;\n    \n    &-bar {\n      border-radius: 15px;\n    }\n  }\n`\n\nconst PlatformCard = styled.div`\n  padding: 8px 8px 8px 20px;\n  border-radius: 18px;\n  background-color: rgba(135, 220, 225, 0.15);\n  margin-bottom: 10px;\n  min-height: 56px;\n  border: 1px solid transparent;\n  transition: all ease 0.4s;\n  cursor: pointer;\n  \n  \n  &:hover {\n    background-color: ${({theme}) => theme.bg2};\n    border-color: ${({theme}) => theme.primary};\n  }\n  \n  @media (max-width: 767px) {\n    padding: 8px 8px 8px 10px;\n  }\n`\n\nconst BUY_STATES = {\n    'not_started': 'Instant Exchange',\n    'initializing': 'Initializing...',\n    'allowance': 'Checking Allowance',\n    'approving': 'Creating Approve Transaction',\n    'validation': 'Validating...',\n    'create_tx': 'Creating Transaction',\n    'send_tx': 'Sending Transaction',\n    'submitted': \"Order Submitted\",\n    'pending': 'Pending...',\n    'failed': \"Transaction failed\",\n}\n\nclass InstantSwap extends React.Component {\n    static contextType = ThemeContext\n\n    constructor(props) {\n        super(props);\n        this.web3 = new Web3(Web3.givenProvider || process.env.REACT_APP_WSS_URL)\n        this.api = InstantSwapApi;\n        this.typeTimeout = undefined;\n        this.isExchangeInProgress = false;\n\n        this.state = {\n            loading: false,\n            loadingState: {\n                all: 32,\n                loaded: 0,\n            },\n            tokens: [],\n            pair: {\n                deposit: {\n                    token: null,\n                    value: '',\n                },\n                destination: {\n                    token: null,\n                    value: '',\n                },\n            },\n            hasEnoughBalance: true,\n            rates: [],\n            rate: undefined,\n            showMore: false,\n            buyState: 'not_started',\n            max: 0,\n            showQrModal: false,\n            simpleSwapOrder: {}\n        }\n    }\n\n\n    onChangeBalance = (balance) => {\n        this.setState({\n            max: balance,\n        })\n    }\n\n    promiseHandler = (callback) => {\n        return new Promise((resolve) => {\n            callback()\n                .then(response => resolve(response))\n                .catch(error => resolve(undefined));\n        })\n    }\n\n    getParaswapSortedRates = rates => {\n        return _.orderBy(rates.others, ['rate'], ['desc'])\n    }\n\n    getDexagSortedRates = rates => {\n        return _.orderBy(rates, ['price'], ['desc'])\n    }\n\n    getSortedRates = (response, type) => {\n        if(!response) return [];\n        switch(type) {\n            case 'paraswap': {\n                return this.getParaswapSortedRates(response);\n            }\n            case 'dexag': {\n                return this.getDexagSortedRates(response);\n            }\n            default: {\n                return response.hasOwnProperty('data') ? response.data : response;\n            }\n        }\n    }\n\n    transformRates = (rates) => {\n        let result = [];\n        for(let i in rates) {\n            const key = rates[i][0];\n            const apiRates = rates[i][1];\n            switch(key) {\n                case '1inch': {\n                    if(apiRates && typeof apiRates.toTokenAmount === 'string') {\n                        result.push({\n                            rate: apiRates.toTokenAmount / (10 ** this.state.pair.destination.token.decimals),\n                            platform: 'oneInch',\n                            source: '1inch',\n                        })\n                    }\n                    break;\n                }\n                case 'paraswap': {\n                    if(apiRates) {\n\n                        apiRates.forEach(rate => {\n                            if(supportedDEXes['paraswap'].includes(rate.exchange)) {\n                                result.push({\n                                    rate: rate.unit / (10 ** this.state.pair.destination.token.decimals),\n                                    platform: rate.exchange,\n                                    source: 'paraswap',\n                                })\n                            }\n                        })\n                    }\n                    break;\n                }\n                case 'dexag': {\n                    if(apiRates) {\n\n                        apiRates.forEach(rate => {\n                            if(supportedDEXes['dexag'].includes(rate.dex)) {\n                                result.push({\n                                    rate: Number(rate.price),\n                                    platform: rate.dex,\n                                    source: 'dexag',\n                                })\n                            }\n                        })\n                    }\n                    break;\n                }\n                case 'simpleSwap': {\n                    if(apiRates.rate !== null) {\n                        result.push({\n                            rate: Number(apiRates.rate),\n                            min: Number(apiRates.min || 0),\n                            max: Number(apiRates.max || 0),\n                            platform: 'simpleSwap',\n                            source: 'simpleSwap',\n                        })\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    getSortedResult = (response) => {\n        let sortedParts = Object.keys(response).map(key => [key, this.getSortedRates(response[key], key)]);\n        let transformedRates = this.transformRates(sortedParts);\n        return _.sortBy(transformedRates, (o) => -o.rate);\n    }\n\n    fetchPrices = async (pair) => {\n        let { deposit, destination } = pair;\n\n        if(deposit.token !== null && destination.token !== null) {\n            this.setState({\n                loading: true,\n                loadingState: {\n                    all: 32,\n                    loaded: 0,\n                }\n            })\n            let fromAmount = (10 ** deposit.token.decimals);\n\n            let dexagParams = {\n                to: destination.token.symbol,\n                from: deposit.token.symbol,\n                dex: 'all',\n                fromAmount: 1\n            }\n\n            let oneInch = await this.promiseHandler(() => this.api.oneInch.get('quote', {\n                fromTokenAddress: deposit.token.address,\n                toTokenAddress: destination.token.address,\n                amount: fromAmount,\n            }))\n\n            this.setState({\n                loadingState: {\n                    all: 32,\n                    loaded: 14,\n                }\n            })\n\n            let paraswap = await this.promiseHandler(() => this.api.paraswap.getRate(deposit.token.address, destination.token.address, fromAmount));\n\n            this.setState({\n                loadingState: {\n                    all: 32,\n                    loaded: 20,\n                }\n            })\n\n            let dexag = await this.promiseHandler(() => this.api.dexag.sdk.getPrice(dexagParams))\n\n            this.setState({\n                loadingState: {\n                    all: 32,\n                    loaded: 28,\n                }\n            })\n            let godex = await this.promiseHandler(() => this.api.godex.get('rate', {\n                to: destination.token.symbol,\n                from: deposit.token.symbol,\n                amount: 1,\n            }))\n\n            this.setState({\n                loadingState: {\n                    all: 32,\n                    loaded: 30,\n                }\n            })\n\n            let simpleSwap = await this.promiseHandler(() => this.api.simpleSwap.get('exchange', {\n                query: {\n                    fixed: SIMPLE_SWAP_FIXED,\n                    currency_from: deposit.token.symbol.toLowerCase(),\n                    currency_to: destination.token.symbol.toLowerCase()\n                }\n            }))\n\n\n            let response = {\n                '1inch': oneInch,\n                'paraswap': paraswap,\n                'dexag': dexag,\n                'godex': godex,\n                'simpleSwap': simpleSwap,\n            }\n\n            let result = this.getSortedResult(response);\n\n            if(result.length > 0) {\n                if(deposit.value) {\n                    pair.destination.value = (deposit.value * result[0].rate).toFixed(6);\n                } else if(destination.value) {\n                    pair.deposit.value = (destination.value / result[0].rate).toFixed(6);\n                }\n            } else {\n                toast.error('This Pair is not available.')\n            }\n\n\n            this.setState({\n                pair,\n                rates: result,\n                rate: result.length > 0 ? result[0] : undefined,\n                loading: false,\n                showMore: false,\n                hasEnoughBalance: !this.state.max || Number(pair.deposit.value) <= Number(this.state.max.toSignificant(6))\n            })\n\n        } else {\n            this.setState({\n                pair,\n                showMore: false\n            })\n        }\n    }\n\n    onSelect = async (token, type) => {\n        let pair = this.state.pair;\n\n        pair[type].token = token;\n        this.setState({\n            pair\n        }, this.fetchPrices.bind(this, this.state.pair))\n    }\n\n    onSwapTokens = () => {\n        let pair;\n        this.setState(prevState => {\n            pair = {\n                deposit: {\n                    ...prevState.pair.destination,\n                },\n                destination: {\n                    ...prevState.pair.deposit,\n                }\n            }\n            return {\n                pair\n            }\n        }, () => this.fetchPrices(pair));\n    }\n\n    onUserInputHandler = (value, type, max) => {\n        this.setState(prevState => {\n            const pair = prevState.pair;\n            pair[type].value = value;\n            if(prevState.rate) {\n                if(type === 'deposit') {\n                    pair.destination.value = (value * prevState.rate.rate).toFixed(6);\n                } else if(type === 'destination') {\n                    pair.deposit.value = (value / prevState.rate.rate).toFixed(6);\n                }\n            }\n            return {\n                pair,\n                hasEnoughBalance: !max || Number(value) <= Number(max.toSignificant(6))\n            }\n        })\n    }\n\n    selectRate = (rate) => {\n        this.setState(prevState => {\n            let pair = {\n                ...prevState.pair\n            };\n            if(pair.deposit.value) {\n                pair.destination.value = (pair.deposit.value * rate.rate).toFixed(6);\n            } else if(pair.destination.value) {\n                pair.deposit.value = (pair.destination.value / rate.rate).toFixed(6);\n            }\n\n            return {\n                pair,\n                rate\n            }\n        })\n    }\n\n    setBuyState = (state = 'not_started') => {\n        this.setState({\n            buyState: state,\n        })\n    }\n\n    setDefaultBuyState = () => {\n        setTimeout(this.setBuyState, 4000)\n    }\n\n    oneInchBuyHandler = async (pair, rate) => {\n        try {\n            this.setBuyState('initializing')\n            let { deposit, destination } = pair;\n            let allowance;\n            let token = deposit.token.symbol === 'ETH' ? ETHER : new Token(deposit.token.chainId, deposit.token.address, deposit.token.decimals, deposit.token.symbol, deposit.token.name);\n\n            const spenderRes = await this.api.oneInch.get('spender');\n            const spender = spenderRes.data.address;\n\n            let fromAmount = deposit.value * (10 ** deposit.token.decimals);\n            const amount = new TokenAmount(token, `${fromAmount}`);\n\n            if(deposit.token.symbol !== 'ETH') {\n                this.setBuyState('allowance')\n\n                let contract = getContract(deposit.token.address, ERC20_ABI, this.props.web3.library, this.props.web3.account);\n\n                allowance = await contract.functions.allowance(this.props.web3.account, spender);\n                allowance = new TokenAmount(token, allowance.toString())\n\n                if(!amount.lessThan(allowance)) {\n                    this.setBuyState('approving')\n\n                    let approve = await contract.functions.approve(spender, amount.raw.toString());\n\n                    if(approve) {\n                        window.open(`https://etherscan.io/tx/${approve}`, '_blank')\n                    }\n                }\n            }\n\n            if(deposit.token.symbol === 'ETH' || amount.lessThan(allowance)) {\n                this.setBuyState('create_tx')\n\n                const res = await this.api.oneInch.get('swap', {\n                    fromTokenAddress: deposit.token.address,\n                    toTokenAddress: destination.token.address,\n                    amount: fromAmount,\n                    fromAddress: this.props.web3.account,\n                    slippage: this.props.slippage,\n                    protocols: rate.platform,\n                })\n                const tx = res.data.tx;\n\n                this.setBuyState('send_tx')\n\n                this.web3.eth.sendTransaction(tx, async (err, transactionHash) => {\n                    if (err) {\n                        this.setBuyState('failed')\n\n                        this.setDefaultBuyState()\n\n                        if(err.code === 4001){\n                            toast.error('You canceled exchange process')\n                        } else {\n                            toast.error('An Error was occurred')\n                        }\n                        this.isExchangeInProgress = false;\n                        return false;\n                    }\n\n                    this.setBuyState('submitted')\n\n                    this.setDefaultBuyState()\n                    this.isExchangeInProgress = false;\n                    toast.success('Your Exchange order submitted successfully');\n                    window.open(`https://etherscan.io/tx/${transactionHash}`, '_blank');\n                });\n            } else {\n                toast.error('Token approval is pending or rejected');\n            }\n            this.isExchangeInProgress = false;\n\n        } catch(e) {\n            this.setBuyState('failed')\n\n            this.setDefaultBuyState()\n\n            this.isExchangeInProgress = false;\n\n            if(e.hasOwnProperty('code')) {\n                if(e.code === 4001) {\n                    toast.error('You canceled exchange process')\n                } else {\n                    toast.error('An Error was occurred')\n                }\n            } else {\n                if(e.hasOwnProperty('response')) {\n                    if(e.response.status === 500) {\n                        toast.error('This pair is not available on this platform, Please select another one.')\n                    } else {\n                        toast.error('An Error was occurred')\n                    }\n                } else {\n                    toast.error('An Error was occurred')\n                }\n            }\n        }\n    }\n\n    paraSwapBuyHandler = async (pair, rate) => {\n        try {\n            this.setBuyState('initializing')\n\n            let { deposit, destination } = pair;\n            let canExchange = false;\n            const paraswap = this.api.paraswap.setWeb3Provider(window.ethereum);\n\n            let fromAmount = (deposit.value * (10 ** deposit.token.decimals)).toFixed(0);\n            let toAmount = (destination.value * (10 ** destination.token.decimals)).toFixed(0);\n\n            this.setBuyState('allowance')\n            const allowanceRes = await paraswap.getAllowance(this.props.web3.account, deposit.token.address);\n            if(Number(allowanceRes.allowance) < fromAmount) {\n                this.setBuyState('approving')\n                const approve = await paraswap.approveToken(fromAmount, this.props.web3.account, deposit.token.address);\n\n                if(approve) {\n                    window.open(`https://etherscan.io/tx/${approve}`, '_blank')\n                }\n            } else {\n                canExchange = true;\n            }\n\n            if(canExchange) {\n                this.setBuyState('create_tx')\n                const rates = await paraswap.getRate(deposit.token.address, destination.token.address, fromAmount);\n                const selectedRoute = rates.others.find(item => item.exchange === rate.platform);\n                const txRoute = [\n                    {\n                        ...rates.bestRoute[0],\n                        ...selectedRoute\n                    }\n                ]\n                rates.bestRoute = txRoute;\n                const txParams = await paraswap.buildTx(deposit.token.address, destination.token.address, fromAmount, toAmount, rates, this.props.web3.account, process.env.REACT_APP_NAME, '');\n\n\n                this.setBuyState('send_tx')\n                this.web3.eth.sendTransaction(txParams, async (err, transactionHash) => {\n                    if (err) {\n                        this.setBuyState('failed')\n\n                        this.setDefaultBuyState()\n\n                        if(err.code === 4001){\n                            toast.error('You canceled exchange process')\n                        } else {\n                            toast.error('An Error was occurred')\n                        }\n\n                        this.isExchangeInProgress = false;\n                        return false;\n                    }\n                    this.setBuyState('submitted')\n\n                    this.setDefaultBuyState()\n                    this.isExchangeInProgress = false;\n                    toast.success('Your Exchange order submitted successfully');\n                    window.open(`https://etherscan.io/tx/${transactionHash}`, '_blank');\n                });\n            } else {\n                this.setBuyState('pending')\n\n                this.setDefaultBuyState()\n            }\n        } catch(e) {\n            this.setBuyState('failed')\n\n            this.setDefaultBuyState()\n\n            if(e.hasOwnProperty('code')) {\n                if(e.code === 4001) {\n                    toast.error('You canceled exchange process')\n                } else {\n                    toast.error('An Error was occurred')\n                }\n            } else {\n                toast.error('An Error was occurred')\n            }\n            this.isExchangeInProgress = false;\n        }\n    }\n\n    dexagBuyHandler = async (pair, rate) => {\n        let valid = false;\n        try {\n            this.setBuyState('initializing')\n\n            let { deposit, destination } = pair;\n\n            const sdk = this.api.dexag.sdk;\n            sdk.registerStatusHandler((status, data) => {\n                switch(status) {\n                    case 'rejected': {\n                        this.setBuyState('failed')\n                        this.setDefaultBuyState()\n                        toast.error('You canceled exchange process');\n                        break;\n                    }\n                    case 'network': {\n                        toast.error('Please change your network to mainnet to continue')\n                        break;\n                    }\n                    case 'send_trade': {\n                        this.setBuyState('submitted')\n                        this.setDefaultBuyState()\n                        window.open(`https://etherscan.io/tx/${data}`, '_blank');\n                        break;\n                    }\n                    case 'failed': {\n                        this.setBuyState('failed')\n                        this.setDefaultBuyState()\n                        toast.error('Your transaction was failed');\n                        window.open(`https://etherscan.io/tx/${data}`, '_blank');\n                        break;\n                    }\n                }\n            });\n\n            this.setBuyState('create_tx')\n            const tx = await sdk.getTrade({to: destination.token.symbol, from: deposit.token.symbol, fromAmount: deposit.value, dex: rate.platform});\n\n\n            this.setBuyState('validation')\n            valid = await sdk.validate(tx);\n\n            if (valid) {\n                sdk.trade(tx);\n            }\n\n        } catch(e) {\n            this.setBuyState('failed')\n            this.setDefaultBuyState()\n\n            if(e.hasOwnProperty('code')) {\n                if(e.code !== 4001) {\n                    toast.error('An Error was occurred')\n                }\n\n                if(!valid) {\n                    toast.error('Transaction failed please try again later or select another platform')\n                }\n            } else {\n\n                if(!valid) {\n                    toast.error('Transaction failed please try again later or select another platform')\n                }\n                toast.error('An Error was occurred')\n            }\n\n            this.isExchangeInProgress = false;\n        }\n\n    }\n\n    simpleSwapBuyHandler = async (pair, rate) => {\n        try {\n            this.setBuyState('initializing')\n            let { deposit, destination } = pair;\n\n\n            this.setBuyState('validation')\n            if(deposit.value < rate.min || (rate.max > 0 && deposit.value >= rate.max)) {\n                toast.error(deposit.value < rate.min ? `The minimum value for this transaction is ${rate.min}` : `The maximum value for this transaction is ${rate.max}`)\n                this.setBuyState('failed')\n                this.setDefaultBuyState()\n                return;\n            }\n\n            this.setBuyState('create_tx')\n            const res = await this.api.simpleSwap.set('exchange', {\n                data: {\n                    fixed: SIMPLE_SWAP_FIXED,\n                    currency_from: deposit.token.symbol.toLowerCase(),\n                    currency_to: destination.token.symbol.toLowerCase(),\n                    amount: deposit.value,\n                    address_to: this.props.web3.account,\n                }\n            })\n\n            if(res) {\n                if(res.code && res.code !== 200) {\n                    toast.error(res.message);\n                } else {\n                    toast.success('Your order submitted successfully!')\n                    this.setBuyState('submitted')\n                    this.setState({\n                        showQrModal: true,\n                        simpleSwapOrder: res,\n                    })\n                    this.setDefaultBuyState()\n                }\n            }\n\n        } catch(e) {\n            toast.error('An Error was occurred')\n            this.setBuyState('failed')\n            this.setDefaultBuyState()\n        }\n    }\n\n    godexBuyHandler = (pair, rate) => {\n\n    }\n\n    buyHandler = async () => {\n        if(!this.props.web3.account) {\n            this.props.toggleWalletModal();\n        } else {\n            if(!this.isExchangeInProgress) {\n                this.isExchangeInProgress = true;\n\n                const { pair, rate } = this.state;\n                let result;\n\n                switch(rate.source) {\n                    case '1inch': {\n                        result = await this.oneInchBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'paraswap': {\n                        result = await this.paraSwapBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'dexag': {\n                        result = await this.dexagBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'simpleSwap': {\n                        result = await this.simpleSwapBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'godex': {\n                        result = await this.godexBuyHandler(pair, rate);\n                        break;\n                    }\n                }\n\n                this.isExchangeInProgress = false;\n            }\n        }\n\n    }\n    toggleShowMore = () => {\n        this.setState(prevState => {\n            return {\n                showMore: !prevState.showMore,\n            }\n        })\n    }\n\n    render() {\n        const {pair, rate, hasEnoughBalance, rates, loading, loadingState, buyState} = this.state;\n\n        return (\n            <Page>\n                <StyledRow>\n                    <Col xs={12} md={{ offset: 3, span: 6}}>\n                        <CustomCard>\n                            <Row>\n                                <Col xs={12} style={{ marginBottom: 20 }}>\n                                    <SwapInputPanel\n                                        value={pair.deposit.value}\n                                        onUserInput={this.onUserInputHandler}\n                                        label='You Pay'\n                                        onSelect={this.onSelect}\n                                        selected={pair.deposit.token}\n                                        currencies={tokens}\n                                        type={'deposit'}\n                                        id={'deposit'}\n                                        onChangeBalance={this.onChangeBalance}\n                                    />\n                                </Col>\n                                <Col xs={12} className={'gutter-b'} style={{ marginBottom: !rate ? '40px' : '0'}}>\n                                    <SwapInputPanel\n                                        value={pair.destination.value}\n                                        onUserInput={this.onUserInputHandler}\n                                        label='You Receive (estimated)'\n                                        onSelect={this.onSelect}\n                                        selected={pair.destination.token}\n                                        currencies={tokens}\n                                        type={'destination'}\n                                        id={'destination'}\n                                    />\n                                </Col>\n                                {!!rate ? (\n                                    <Col xs={12} className={'d-flex justify-content-between align-items-center gutter-b'} style={{ marginBottom: 60 }}>\n                                        <RateText fontWeight={400} fontSize={isMobile ? 12 : 14}>\n                                            Exchange Rate\n                                        </RateText>\n                                        <RateText fontWeight={isMobile ? 400 : 500} fontSize={isMobile ? 12 : 16}>\n                                            {pair.deposit.token && pair.destination.token ? `1 ${pair.deposit.token.symbol || pair.deposit.token.code} = ${rate.rate.toFixed(4)} ${pair.destination.token.symbol || pair.destination.token.code}` : null}\n                                        </RateText>\n                                    </Col>\n                                ) : ''}\n\n                                <Col xs={12} className={'d-flex flex-column align-items-stretch align-items-md-center justify-content-center'}>\n                                    {loading  ? (\n                                        <div className={`d-flex flex-column align-items-stretch justify-content-center align-self-stretch`}>\n                                            <RateText\n                                                fontWeight={400}\n                                                fontSize={isMobile ? 12 : 16}\n                                            >\n                                                We are searching in {loadingState.loaded} of {loadingState.all} exchanges\n                                            </RateText>\n                                            <ProgressContainer>\n                                                <ProgressBar\n                                                    now={(loadingState.loaded / loadingState.all * 100).toFixed(0)}\n                                                    variant={loadingState.loaded === loadingState.all ? 'success' : 'primary'}\n                                                    className={'align-self-stretch w-100 progress-xs'} />\n                                            </ProgressContainer>\n\n                                        </div>\n                                    ) : (\n                                        <SwapButton\n                                                onClick={this.buyHandler}\n                                                className={'py-3'}\n                                                disabled={this.props.web3.account && (!(pair.deposit.token && pair.destination.token && pair.deposit.value && pair.destination.value && hasEnoughBalance && Number(pair.deposit.value) > 0 && rate) || rate.platform === 'godex')}\n                                                variant={\n                                                    pair.deposit.token && pair.destination.token && pair.deposit.value && pair.destination.value && hasEnoughBalance && Number(pair.deposit.value) > 0 && rate ? 'primary' : 'outline-primary'\n                                                }\n                                        >\n                                            {\n                                                !this.props.web3.account ? 'Connect Wallet' :\n                                                !pair.deposit.token || !pair.destination.token ? 'Select a pair' :\n                                                    !hasEnoughBalance ? `Insufficient ${pair.deposit.token.symbol} Balance` :\n                                                        !pair.deposit.value || !pair.destination.value ? 'Please Enter Amount' :\n                                                            !rate && !loading ? 'This pair is not available' :\n                                                                rate.platform === 'godex' ? 'This pair is not available on this platform to exchange' :\n                                                                    Number(pair.deposit.value) > 0 ? BUY_STATES[buyState] : 'Please Enter Amount'\n                                            }\n                                        </SwapButton>\n                                    )}\n\n                                </Col>\n                                {rates.length > 0 && !loading && (\n                                    <Col xs={12} className={'d-flex flex-column'} style={{ marginTop: 36 }}>\n                                        {rates.map((item, index) => {\n                                            return (\n                                                <PlatformCard key={`show-all-${item.platform}`} onClick={this.selectRate.bind(this, item)} className={`d-flex align-items-center justify-content-between`}>\n                                                    <div className={'d-flex align-items-center'} style={{ flex: 1}}>\n                                                        <Logo src={toAbsoluteUrl(`/media/dex/${DEXesImages[item.platform]}`)} size={30} alt={item.platform}/>\n                                                        <RateText fontSize={isMobile ? 12 : 16} fontWeight={isMobile ? 400 : 500} style={{ flex: 1}}>\n                                                            {DEXesName[item.platform]}\n                                                        </RateText>\n                                                    </div>\n\n                                                    <div className={'d-flex flex-row align-items-center justify-content-center'} style={{ flex: 1}}>\n                                                        <RateText fontWeight={500} fontSize={isMobile ? 12 : 16} className={isMobile ? 'mr-2' : 'mr-3'}>\n                                                            {item.rate.toFixed(6)} {pair.destination.token.symbol}/{pair.deposit.token.symbol}\n                                                        </RateText>\n                                                        {index === 0 ? (\n                                                            <span className=\"label label-inline label-lg label-light-primary\">Best</span>\n                                                        ) : (\n                                                            <span style={{ display: 'block', flexBasis: 55, minWidth: 55}}/>\n                                                        )}\n                                                    </div>\n                                                </PlatformCard>\n                                            )\n                                        })}\n                                    </Col>\n                                )}\n                            </Row>\n                        </CustomCard>\n                    </Col>\n                </StyledRow>\n                <Modal\n                    show={this.state.showQrModal}\n                    centered\n                    onHide={() => {\n                        this.setState({\n                            showQrModal: false,\n                        })\n                    }}\n                    size={'lg'}\n                >\n                    <Modal.Body className={'d-flex flex-column'} style={{ minHeight: 480, padding: '30px 60px' }}>\n                        <RowBetween style={{ padding: '8px 0 24px' }}>\n                            <div />\n                            <CloseIcon onClick={() => {\n                                this.setState({\n                                    showQrModal: false,\n                                })\n                            }} />\n                        </RowBetween>\n                        <div className=\"d-flex flex-column flex-grow-1 justify-content-start align-items-center\">\n                            <h4 className=\"font-weight-bold text-white mt-0 mb-0\" style={{ paddingTop: 30 }}>Order Submitted</h4>\n                                <div style={{ paddingTop: 40, paddingBottom: 45, marginBottom: 'auto' }}>\n                                    <QRCode value={this.state.simpleSwapOrder?.address_from || ''} fgColor={'#fff'} bgColor={'transparent'}/>\n                                </div>\n                                <div className=\"d-flex flex-column align-items-stretch align-self-stretch mb-4\">\n                                    <span className=\"text-white font-size-large mb-2 d-block\">Send {this.state.simpleSwapOrder?.amount_from} {this.state.simpleSwapOrder?.currency_from?.toUpperCase()} to the address below</span>\n                                    <span className=\"text-white-50 font-size-sm\">Exchange will automatically initiate once deposit is detected on below address</span>\n                                </div>\n\n                                <div className={'align-self-stretch d-flex flex-column mb-3'}>\n                                    <span className=\"text-white-50 mb-2\">ADDRESS</span>\n                                    <span className=\"text-white font-weight-bold\">{this.state.simpleSwapOrder?.address_from}</span>\n                                </div>\n                                <div className={'align-self-stretch d-flex flex-column'}>\n                                    <span className=\"text-white-50 mb-2\">Order ID</span>\n                                    <span className=\"text-white\">{this.state.simpleSwapOrder?.id}</span>\n                                </div>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        slippage: state.user.userSlippageTolerance\n    }\n}\n\nexport default connect(mapStateToProps)(\n    withWeb3Account(\n        InstantSwap\n    )\n);\n"],"sourceRoot":""}