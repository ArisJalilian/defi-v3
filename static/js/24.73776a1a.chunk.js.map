{"version":3,"sources":["components/Card/index.js","components/Row/index.tsx","components/hoc/withWeb3Account.tsx","components/NumericalInput/index.tsx","hooks/useTokenToBalance.js","components/hoc/withBalance.js","components/BookOption/index.js","components/UI/Dropdown/index.js","assets/images/global/dropdown.svg","utils/spot/numberUtils.js","pages/MarketMaker/components/Orderbook/index.js","pages/MarketMaker/components/Provider/index.js","pages/MarketMaker/components/MarketFills/index.js","pages/MarketMaker/components/OrderHistory/index.js","pages/MarketMaker/components/MarketStats/index.js","utils/spot/swap.js","utils/spot/marketMaker.js","utils/spot/types.js","components/MarketMakerInputPanel/index.js","pages/MarketMaker/components/MakerContainer/MarketMakerDetails.js","pages/MarketMaker/components/MakerContainer/index.js","hooks/debounce.js","pages/MarketMaker/index.js"],"names":["Header","Card","Body","CustomCard","styled","theme","modalBG","text1","margin","marginBottom","marginTop","text4","RCard","CustomHeader","text3","isTable","CustomBody","CustomTitle","h4","ResponsiveCard","props","header","title","children","body","Comp","Row","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","withWeb3Account","Component","context","useActiveWeb3React","toggleWalletModal","useWalletModalToggle","web3","StyledInput","input","error","red1","bg3","size","reverse","noBorder","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","useSpotBalances","account","library","baseToken","useSelector","getBaseToken","quoteToken","getQuoteToken","knownTokens","useMemo","getKnownTokens","tokens","getTokens","wethToken","getWethToken","allBalances","address","useState","balances","setBalances","fetchBalances","a","tokensToTokenBalances","res","useEffect","length","useTokenToBalance","window","ethereum","ethBalance","useETHBalances","wethBalance","find","b","token","symbol","tokensBalance","filter","ethereumBalance","ETH","toExact","bn","BigNumber","currency","undefined","balance","totalEthBalance","total","plus","baseTokenBalance","searchToken","tokenBalances","wethTokenBalance","tokenToFind","quoteTokenBalance","withBalance","Wrapper","active","Cell","variant","BookOption","onClick","isSell","isBuy","Button","button","secondary2","primary","darken","ButtonText","span","DropdownList","isOpen","DropdownItem","Dropdown","items","setActive","open","setOpen","toggleModal","useCallback","changeActiveHandler","item","hasOwnProperty","src","require","default","map","i","bind","padRightSplitted","numBg","decimals","UI_DECIMALS_DISPLAYED_ORDER_SIZE","numBgToFixed","toFixed","numBgToString","toString","decimalPlaces","split","diff","num","isZero","Container","EmptyText","BookOptionType","StyledBookOption","HeaderRow","TitleRow","TableRow","Title","Result","TR","CustomHead","InnerTR","TH","SpreadTitle","TD","TBody","lighten","depthItems","OrderToRow","this","order","index","priceColor","mySizeOrders","currencyPair","basePrecision","config","pricePrecision","tokenAmountInUnits","price","mySize","reduce","sumSize","mySizeItem","eq","ZERO","mySizeConverted","isMySizeEmpty","numSplitted","parseFloat","OrderToRowContainer","connect","dispatch","onSetOrderPriceSelected","orderPriceSelected","setOrderPriceSelected","onSetOrderBuyPriceSelected","setOrderBuyPriceSelected","onSetOrderSellPriceSelected","setOrderSellPriceSelected","onSetMakerAmountSelected","makerAmountSelected","setMakerAmountSelected","Orderbook","state","depth","defaultDepth","bookOption","_spreadRowScrollable","createRef","_spreadRowFixed","_itemsScroll","content","orderBook","absoluteSpread","percentageSpread","totalQuoteBuyOrders","totalBaseSellOrders","serverState","sellOrders","buyOrders","mySizeSellArray","side","OrderSide","Sell","mySizeBuyArray","Buy","getColor","ServerState","NotLoaded","spreadAbsFixed","spreadPercentFixed","UI_DECIMALS_DISPLAYED_SPREAD_PERCENT","totalBase","totalQuote","baseSymbol","formatTokenSymbol","quoteSymbol","bookOptionState","handleBookOption","option","setState","className","Number","slice","count","orders","Loading","height","id","spot","userOrders","relayer","orderBookState","getOrderBook","getSpread","getSpreadInPercentage","getTotalQuoteBuyOrders","getTotalBaseSellOrders","getOrderbookState","Web3","givenProvider","providers","HttpProvider","process","Provider","_deactivatePollingUpdates","_updateStoreInterval","clearInterval","_updatePriceEtherInterval","_updatePriceTokensInterval","_updateERC20MarketsInterval","_activatePollingUpdates","onUpdateERC20Markets","onUpdateMarketPriceTokens","onUpdateMarketPriceEther","onUpdateMarketPriceQuote","onUpdateERC20Store","currentProvider","UI_UPDATE_CHECK_INTERVAL","setInterval","isActiveCheckUpdates","UPDATE_ETHER_PRICE_INTERVAL","UPDATE_TOKENS_PRICE_INTERVAL","UPDATE_ERC20_MARKETS","componentWillUnmount","render","onSubscribeMarketMakerStates","withRouter","updateMarketPriceEther","updateMarketPriceQuote","updateMarketPriceTokens","updateERC20Markets","updateERC20Store","subscribeToRelayerWebsocketFillEvents","TableContainer","marketFills","spotUI","marketFillsState","changeMarket","Object","keys","marketToStringFromTokens","market","tokenQuoteSymbol","isWeth","toUpperCase","tokenBaseSymbol","marketFill","fill","amountBase","USE_RELAYER_MARKET_UPDATES","tokenBase","displayDecimals","displayAmountBase","getCurrencyPairByTokensSymbol","tokenQuote","timestamp","toISOString","fillToRow","CardTitle","Content","InnerContent","ordersToShow","status","OrderStatus","Fillable","sideLabel","filled","getCurrencyPairFromTokens","orderToRow","isMobile","swapService","InnerContainer","Column","Label","Value","fieldsStatsMap","label","field","marketMakerStats","getMarketMakerStats","getCurrencyPair","filteredMarketMakerStats","m","toLowerCase","marketToString","f","computeOrderSizeFromInventoryBalance","amount","inventoryBalance","multipliedBy","minus","computePriceFromQuote","quote","bestQuote","bestCaseQuoteInfo","quoteTokenAmount","makerAssetAmount","takerAssetAmount","baseTokenAmount","quoteTokenAmountUnits","baseTokenAmountUnits","computeSpreadPercentage","buyPrice","sellPrice","OrderPrunerPermittedFeeTypes","ExtensionContractType","SwapService","orderbook","provider","_provider","swapQuoterOpts","chainId","CHAIN_ID","expiryBufferMs","QUOTE_ORDER_EXPIRATION_BUFFER_MS","permittedOrderFeeTypes","Set","_swapQuoter","SwapQuoter","_swapQuoteConsumer","SwapQuoteConsumer","_web3Wrapper","isETHSell","extensionContractType","executeSwapQuoteOrThrowAsync","useExtensionContract","extensionContractOpts","feeRecipient","FEE_RECIPIENT","feePercentage","FEE_PERCENTAGE","params","sellAmount","buyAmount","buyTokenAddress","sellTokenAddress","slippagePercentage","providedGasPrice","gasPrice","assetSwapperOpts","ASSET_SWAPPER_MARKET_ORDERS_OPTS","getMarketSellSwapQuoteAsync","swapQuote","getMarketBuySwapQuoteAsync","Error","attributedSwapQuote","_attributeSwapQuoteOrders","from","totalTakerAssetAmount","protocolFee","protocolFeeInWeiAmount","getCalldataOrThrowAsync","data","calldataHexString","ethAmount","to","toAddress","_estimateGasOrThrowRevertErrorAsync","gas","_fetchTokenDecimalsIfRequiredAsync","buyTokenDecimals","sellTokenDecimals","unitMakerAssetAmount","toUnitAmount","unitTakerAssetAMount","dividedBy","apiSwapQuote","_cleanSignedOrderFields","txData","estimateGasPromise","estimateGasAsync","callAsync","callResult","throwIfRevertError","attributedOrders","o","decodedAssetData","assetDataUtils","decodeAssetDataOrThrow","makerAssetData","isBridgeAssetData","feeRecipientAddress","err","exchangeAddress","makerAddress","takerAddress","senderAddress","makerFee","takerFee","expirationTimeSeconds","salt","takerAssetData","makerFeeAssetData","takerFeeAssetData","signature","tokenAddress","known_tokens","getTokenByAddress","e","getAssetSwapper","getRelayer","web3Wrapper","Web3Wrapper","getOrderbook","getProvider","result","revertError","RevertError","decode","InputRow","flexRowNoWrap","InputContainer","LabelRow","Aligner","InputPanel","flexColumnNoWrap","StyledTokenName","Logo","img","CurrencySelect","bg1","BalanceRow","MarketMakerInputPanel","disable","selected","hideInput","valueFixedDecimals","min","showBalance","balanceText","valueStr","setValueStr","style","toAbsoluteUrl","icon","Boolean","NumericalInput","newValue","unitsInTokenAmount","isLessThan","h3","HeaderTitle","Price","InnerRow","Btn","MarketMakerDetails","quoteBuyTokenAmount","quoteSellTokenAmount","baseBuyTokenAmount","baseSellTokenAmount","canOrderBeFilled","maxAmount","priceBuy","priceSell","geckoPrice","componentDidUpdate","prevProps","newProps","tokenAmount","sellQuote","buyQuote","quoteState","SwapQuoteState","Done","_updateOrderDetailsState","componentDidMount","tokenPrices","inventoryBalanceBN","bestBuyQuote","bestSellQuote","tokenPriceQuote","t","c_id","tokenPriceBase","price_usd","_getCostStringForRender","quoteInUSD","tokenPrice","quoteSellTokenAmountUnits","costSellAmount","quotePriceAmountUSD","quoteBuyTokenAmountUnits","costBuyAmount","_getBaseCostStringForRender","_getMedianPriceStringForRender","priceDisplay","toFormat","_getCostLabelStringForRender","qouteInUSD","_getBaseCostLabelStringForRender","_getPriceMarketRender","gt","_onTrackerPriceClick","onTrackerPriceClick","costBuy","costSell","costBuyText","costSellText","costBaseBuy","costBaseSell","costBaseBuyText","costBaseSellText","priceBuyMedianText","priceSellMedianText","priceMarketTrackerText","disabled","buyDisabled","onBuy","sellDisabled","onSell","getQuoteInUsd","getTokensPrice","onFetchTakerAndMakerFee","fetchTakerAndMakerFee","Form","Control","text2","FormGroup","TopContainer","BottomContainer","getOrderPriceSelected","onSubmitLimitOrder","orderFeeData","startBuySellLimitSteps","onSubmitMultipleLimitOrders","amountBuy","orderBuyFeeData","amountSell","orderSellFeeData","startMultipleBuySellLimitSteps","onSetOrderSecondsExpirationTime","seconds","setOrderSecondsExpirationTime","marketQuoteState","setMarketQuoteState","setBuyQuote","setSellQuote","setBuyPrice","setSellPrice","selectedSpread","setSelectedSpread","orderExpireTime","setOrderExpireTime","selectedInventoryBalance","setSelectedInventoryBalance","btnMsg","cardMsg","errorState","setErrorState","makerAmountState","setMakerAmountState","web3State","selectedBuyPrice","getOrderBuyPriceSelected","selectedSellPrice","getOrderSellPriceSelected","minOrderExpirationTimeOnOrderBook","getMinOrderExpireTimeOnBooks","useDispatch","queryToken","URLSearchParams","useLocation","search","get","findTokenOrFetchIt","setMarketTokens","fetchToken","isWethQuote","isWethBase","quoteUnits","tokenAmountInUnitsToBigNumber","baseBalance","stepAmount","pow","String","isMakerAmountEmpty","isBuyOrderTypeLimitOverflow","isSellOrderTypeLimitOverflow","isOrderTypeMarketIsEmpty","_reset","toNumber","onCalculateSwapQuote","amt","buyParams","sellParams","assetSwapper","getSwapQuoteAsync","bQuote","sQuote","sPrice","bPrice","debouncedAmount","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","isGreaterThan","handleSubmitError","message","onSubmitBuyOrder","makerAmount","orderSide","onSubmitSellOrder","listed","Col","xs","lg","step","max","newSpread","currentTarget","prices","newSpreadPercentage","newSpreadUnits","incrementPrice","getPricesFromSpread","justDesktop","justMobile","ContainerCard","MarketMaker","Page","morePadding"],"mappings":"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","file":"static/js/24.73776a1a.chunk.js","sourcesContent":["import { Card } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst { Header, Body } = Card;\n\nexport const CustomCard = styled(Card)`\n\tbackground-color: ${({ theme }) => theme.modalBG};\n\tcolor: ${({ theme }) => theme.text1};\n\tmargin-bottom: ${({ margin, marginBottom }) =>\n\t\tmarginBottom ? `${marginBottom}px` : margin ? `${margin}px` : \"20px\"};\n\tmargin-top: ${({ margin, marginTop }) => (marginTop ? `${marginTop}px` : margin ? `${margin}px` : \"0\")};\n\tborder-radius: 18px;\n\tborder: 1px solid ${({ theme }) => theme.text4};\n`;\n\nexport const RCard = styled(CustomCard)`\n\t@media (max-width: 767px) {\n\t\tmargin-left: -30px;\n\t\tmargin-right: -30px;\n\t\tborder-radius: 0;\n\n\t\t.card-body {\n\t\t\tpadding-left: 30px;\n\t\t\tpadding-right: 30px;\n\t\t}\n\t}\n`;\n\nexport const CustomHeader = styled(Header)`\n\tborder-bottom-color: ${({ theme }) => theme.text3};\n\tbackground-color: transparent;\n\tpadding: 20px;\n\n\t@media (min-width: 768px) {\n\t\tpadding: ${({ isTable }) => (isTable ? \"30px 60px\" : \"30px\")};\n\t}\n`;\n\nexport const CustomBody = styled(Body)`\n\tpadding: 20px;\n\tbackground-color: transparent;\n\n\t@media (min-width: 768px) {\n\t\tpadding: ${({ isTable }) => (isTable ? \"18px 48px\" : \"30px\")};\n\t}\n`;\n\nexport const CustomTitle = styled.h4`\n\tmargin: 0;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.text1};\n\tfont-size: 1.25rem;\n`;\n\nconst Comp = (props) => {\n\treturn (\n\t\t<CustomCard {...props}>\n\t\t\t{props.header && (\n\t\t\t\t<CustomHeader isTable={props.isTable}>\n\t\t\t\t\t{props.title && <CustomTitle>{props.title}</CustomTitle>}\n\t\t\t\t\t{props.header}\n\t\t\t\t</CustomHeader>\n\t\t\t)}\n\t\t\t<CustomBody isTable={props.isTable}>{props.children || props.body}</CustomBody>\n\t\t</CustomCard>\n\t);\n};\nexport const ResponsiveCard = (props) => {\n\treturn (\n\t\t<RCard {...props}>\n\t\t\t{props.header && (\n\t\t\t\t<CustomHeader isTable={props.isTable}>\n\t\t\t\t\t{props.title && <CustomTitle>{props.title}</CustomTitle>}\n\t\t\t\t\t{props.header}\n\t\t\t\t</CustomHeader>\n\t\t\t)}\n\t\t\t<CustomBody isTable={props.isTable}>{props.children || props.body}</CustomBody>\n\t\t</RCard>\n\t);\n};\n\nexport default Comp;\n","import styled from \"styled-components\";\nimport { Box } from \"rebass/styled-components\";\n\nconst Row = styled(Box)<{\n\twidth?: string;\n\talign?: string;\n\tjustify?: string;\n\tpadding?: string;\n\tborder?: string;\n\tborderRadius?: string;\n}>`\n\twidth: ${({ width }) => width ?? \"100%\"};\n\tdisplay: flex;\n\tpadding: 0;\n\talign-items: ${({ align }) => align ?? \"center\"};\n\tjustify-content: ${({ justify }) => justify ?? \"flex-start\"};\n\tpadding: ${({ padding }) => padding};\n\tborder: ${({ border }) => border};\n\tborder-radius: ${({ borderRadius }) => borderRadius};\n`;\n\nexport const RowBetween = styled(Row)`\n\tjustify-content: space-between;\n`;\n\nexport const RowFlat = styled.div`\n\tdisplay: flex;\n\talign-items: flex-end;\n`;\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n\tflex-wrap: wrap;\n\tmargin: ${({ gap }) => gap && `-${gap}`};\n\tjustify-content: ${({ justify }) => justify && justify};\n\n\t& > * {\n\t\tmargin: ${({ gap }) => gap} !important;\n\t}\n`;\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n\twidth: fit-content;\n\tmargin: ${({ gap }) => gap && `-${gap}`};\n`;\n\nexport default Row;\n","import { useActiveWeb3React } from \"../../hooks\";\nimport { useWalletModalToggle } from \"../../state/application/hooks\";\n\nconst withWeb3Account = (Component: any) => {\n\treturn (props: any) => {\n\t\tconst context = useActiveWeb3React();\n\t\tconst toggleWalletModal = useWalletModalToggle();\n\t\treturn <Component web3={context} toggleWalletModal={toggleWalletModal} {...props} />;\n\t};\n};\n\nexport default withWeb3Account;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { escapeRegExp } from \"../../utils\";\n\nconst StyledInput = styled.input<{\n\terror?: boolean;\n\tfontSize?: string;\n\talign?: string;\n\tnoBorder?: boolean;\n\treverse?: boolean;\n\tsize?: string;\n}>`\n\tcolor: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n\twidth: 0;\n\tposition: relative;\n\tfont-weight: 500;\n\tfont-family: inherit;\n\toutline: none;\n\tborder: none;\n\tflex: 1 1 auto;\n\tbackground-color: ${({ theme }) => theme.bg3};\n\tfont-size: 1rem;\n\ttext-align: ${({ align }) => align && align};\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\theight: ${({ size }) => (size === \"sm\" ? \"48px\" : \"56px\")};\n\tborder-bottom-right-radius: ${({ reverse }) => (reverse ? \"0\" : `1.125rem`)};\n\tborder-top-right-radius: ${({ reverse }) => (reverse ? \"0\" : `1.125rem`)};\n\tborder-bottom-left-radius: ${({ reverse }) => (reverse ? \"1.125rem\" : `0`)};\n\tborder-top-left-radius: ${({ reverse }) => (reverse ? \"1.125rem\" : `0`)};\n\tpadding-right: 0.625rem;\n\tpadding-left: ${({ noBorder, reverse }) => (reverse ? \"1.375rem\" : noBorder ? \"0.625rem\" : `1.5rem`)};\n\t-webkit-appearance: textfield;\n\tborder-left: ${({ theme, noBorder }) => (noBorder ? \"none\" : `3px solid ${theme.modalBG}`)};\n\n\t@media (min-width: 768px) {\n\t\tpadding-right: 4.5625rem;\n\t}\n\n\t::-webkit-search-decoration {\n\t\t-webkit-appearance: none;\n\t}\n\n\t[type=\"number\"] {\n\t\t-moz-appearance: textfield;\n\t}\n\n\t::-webkit-outer-spin-button,\n\t::-webkit-inner-spin-button {\n\t\t-webkit-appearance: none;\n\t}\n\n\t::placeholder {\n\t\tcolor: ${({ theme }) => theme.text3};\n\t}\n`;\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`); // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n\tvalue,\n\tonUserInput,\n\tplaceholder,\n\tsize,\n\t...rest\n}: {\n\tvalue: string | number;\n\tonUserInput: (input: string) => void;\n\terror?: boolean;\n\tfontSize?: string;\n\tsize?: string;\n\talign?: \"right\" | \"left\";\n} & Omit<React.HTMLProps<HTMLInputElement>, \"ref\" | \"onChange\" | \"as\">) {\n\tconst enforcer = (nextUserInput: string) => {\n\t\tif (nextUserInput === \"\" || inputRegex.test(escapeRegExp(nextUserInput))) {\n\t\t\tonUserInput(nextUserInput);\n\t\t}\n\t};\n\n\treturn (\n\t\t<StyledInput\n\t\t\t{...rest}\n\t\t\tvalue={value}\n\t\t\tonChange={(event) => {\n\t\t\t\t// replace commas with periods, because uniswap exclusively uses period as the decimal separator\n\t\t\t\tenforcer(event.target.value.replace(/,/g, \".\"));\n\t\t\t}}\n\t\t\t// universal input options\n\t\t\tinputMode=\"decimal\"\n\t\t\ttitle=\"Token Amount\"\n\t\t\tautoComplete=\"off\"\n\t\t\tautoCorrect=\"off\"\n\t\t\tsize={size}\n\t\t\t// text-specific options\n\t\t\ttype=\"text\"\n\t\t\tpattern=\"^[0-9]*[.,]?[0-9]*$\"\n\t\t\tplaceholder={placeholder || \"0.0\"}\n\t\t\tminLength={1}\n\t\t\tmaxLength={79}\n\t\t\tspellCheck=\"false\"\n\t\t/>\n\t);\n});\n\nexport default Input;\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import { useMemo, useState, useEffect } from \"react\";\nimport { tokensToTokenBalances } from \"../utils/spot/tokens\";\nimport { useActiveWeb3React } from \"./index\";\nimport { useSelector } from \"react-redux\";\nimport { getBaseToken, getQuoteToken, searchToken } from \"../state/selectors\";\nimport { getKnownTokens } from \"../utils/known_tokens\";\nimport { useETHBalances } from \"../state/wallet/hooks\";\nimport { BigNumber } from \"@0x/utils\";\n\nexport const useTokenToBalance = (tokens, address, library) => {\n\tconst [balances, setBalances] = useState([]);\n\n\tconst fetchBalances = async () => {\n\t\tif (address) {\n\t\t\tconst res = await tokensToTokenBalances(tokens, address, library);\n\t\t\tsetBalances(res);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tfetchBalances();\n\t}, [address, tokens]);\n\n\treturn useMemo(() => {\n\t\tif (balances.length > 0) {\n\t\t\treturn balances;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}, [address, balances, tokens]);\n};\n\nexport const useSpotBalances = () => {\n\tconst { account, library } = useActiveWeb3React();\n\n\tconst baseToken = useSelector(getBaseToken);\n\tconst quoteToken = useSelector(getQuoteToken);\n\n\tconst knownTokens = useMemo(() => {\n\t\treturn getKnownTokens();\n\t}, []);\n\tconst tokens = useMemo(() => {\n\t\treturn knownTokens.getTokens();\n\t}, []);\n\n\tconst wethToken = useMemo(() => {\n\t\treturn knownTokens.getWethToken();\n\t}, []);\n\n\tconst t = useMemo(() => {\n\t\treturn [...tokens, wethToken];\n\t}, [wethToken, tokens]);\n\tconst allBalances = useTokenToBalance(t, account, window.ethereum || library);\n\n\tconst ethBalance = useETHBalances([account]);\n\n\tconst wethBalance = useMemo(() => {\n\t\treturn allBalances.find((b) => b.token.symbol === wethToken.symbol);\n\t}, [allBalances]);\n\n\tconst tokensBalance = useMemo(() => {\n\t\treturn allBalances.filter((b) => b.token.symbol !== wethToken.symbol);\n\t}, [allBalances]);\n\n\tconst ethereumBalance = useMemo(() => {\n\t\tconst ETH = ethBalance[account] ? ethBalance[account].toExact() : null;\n\t\tconst bn = new BigNumber(ETH * 10 ** 18);\n\n\t\treturn {\n\t\t\ttoken: ethBalance[account] ? ethBalance[account].currency : undefined,\n\t\t\tbalance: bn,\n\t\t};\n\t}, [ethBalance]);\n\n\tconst totalEthBalance = useMemo(() => {\n\t\tif (wethBalance && ethereumBalance) {\n\t\t\tlet total = wethBalance.balance;\n\t\t\tif (ethereumBalance.token !== undefined) {\n\t\t\t\ttotal = ethereumBalance.balance.plus(wethBalance.balance);\n\t\t\t}\n\n\t\t\treturn total;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}, [ethereumBalance, wethBalance]);\n\n\tconst baseTokenBalance = useMemo(() => {\n\t\treturn searchToken({ tokenBalances: tokensBalance, wethTokenBalance: wethBalance, tokenToFind: baseToken });\n\t}, [baseToken, tokensBalance, wethBalance]);\n\n\tconst quoteTokenBalance = useMemo(() => {\n\t\treturn searchToken({ tokenBalances: tokensBalance, wethTokenBalance: wethBalance, tokenToFind: quoteToken });\n\t}, [quoteToken, tokensBalance, wethBalance]);\n\n\treturn useMemo(() => {\n\t\treturn {\n\t\t\tquoteTokenBalance,\n\t\t\tbaseTokenBalance,\n\t\t\ttotalEthBalance,\n\t\t\tethBalance: ethereumBalance,\n\t\t\twethBalance,\n\t\t\ttokensBalance,\n\t\t};\n\t}, [account, baseToken, quoteToken, allBalances, baseTokenBalance, quoteTokenBalance]);\n};\n","import { useSpotBalances } from \"../../hooks/useTokenToBalance\";\n\nconst withBalance = (Component) => {\n\treturn (props) => {\n\t\tconst balances = useSpotBalances();\n\t\treturn <Component {...props} {...balances} />;\n\t};\n};\n\nexport default withBalance;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tjustify-content: space-between;\n\twidth: 30px;\n\theight: 30px;\n\tmin-width: 30px;\n\tmin-height: 30px;\n\tpadding: 10px 6px;\n\tbackground-color: ${({ theme }) => theme.bg3};\n\tborder-radius: 30px;\n\topacity: ${({ active }) => (active ? \"1\" : \"0.5\")};\n\tcursor: pointer;\n`;\n\nconst Cell = styled.div`\n\theight: 2px;\n\tborder-radius: 9px;\n\twidth: 13px;\n\tbackground-color: ${({ theme, variant }) => (variant ? theme[variant] : \"#D3D6E8\")};\n\n\t&:not(:last-child) {\n\t\twidth: 17px;\n\t}\n`;\n\nconst BookOption = (props) => {\n\treturn (\n\t\t<Wrapper active={props.active} onClick={props.onChange} {...props}>\n\t\t\t<Cell variant={props.isSell && \"danger\"} />\n\t\t\t<Cell />\n\t\t\t<Cell variant={props.isBuy && \"success\"} />\n\t\t</Wrapper>\n\t);\n};\n\nexport default BookOption;\n","import styled from \"styled-components\";\nimport { useState, useCallback } from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport { darken } from \"polished\";\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\tz-index: 2;\n\tperspective: 800px;\n`;\n\nconst Button = styled.button`\n\theight: ${({ size }) => (size === \"sm\" ? \"32px\" : \"56px\")};\n\tpadding-left: ${({ size }) => (size === \"sm\" ? \"16px\" : \"20px\")};\n\tpadding-right: ${({ size }) => (size === \"sm\" ? \"22px\" : \"24px\")};\n\tborder-radius: ${({ size }) => (size === \"sm\" ? \"12px\" : \"18px\")};\n\tbackground-color: ${({ variant }) =>\n\t\tvariant === \"secondary\" ? \"rgba(121, 133, 246, 0.15)\" : \"rgba(135, 220, 225, 0.15)\"};\n\ttransition: 0.4s ease all;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tcolor: ${({ variant, theme }) => (variant === \"secondary\" ? theme.secondary2 : theme.primary)};\n\tborder: none;\n\n\t&:hover {\n\t\tbackground-color: ${({ variant, theme }) => (variant === \"secondary\" ? theme.secondary2 : theme.primary)};\n\t\tcolor: ${({ theme }) => theme.text1};\n\t}\n\n\t&:focus,\n\t&:active {\n\t\toutline: none;\n\t\tbackground-color: ${({ variant, theme }) =>\n\t\t\tvariant === \"secondary\" ? darken(0.1, theme.secondary2) : darken(0.1, theme.primary)};\n\t\tbox-shadow: 0 0 0 5px\n\t\t\t${({ variant }) => (variant === \"secondary\" ? \"rgba(121, 133, 246, 0.15)\" : \"rgba(135, 220, 225, 0.15)\")};\n\t\tcolor: ${({ theme }) => theme.text1};\n\t}\n\n\t@media (max-width: 991px) {\n\t\theight: 32px;\n\t\tfont-size: 0.875rem;\n\t\tborder-radius: 12px;\n\t\tpadding-left: 15px;\n\t\tpadding-right: 21px;\n\t}\n`;\n\nconst ButtonText = styled.span`\n\tcolor: currentColor;\n\tfont-weight: 500;\n\tfont-size: 1rem;\n\tpadding-right: 1rem;\n\n\t@media (max-width: 991px) {\n\t\tpadding-right: 0.5rem;\n\t}\n`;\n\nconst DropdownList = styled.div`\n\tbackground-image: linear-gradient(346.84deg, #9aa7d0 1.12%, #b7c2e4 78.56%);\n\tbox-shadow: -1px 11px 43px rgba(0, 0, 0, 0.12);\n\tborder-radius: 12px;\n\tposition: absolute;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tright: 0;\n\ttop: ${({ size }) => (size === \"sm\" ? `42px` : `66px`)};\n\tmin-width: 100%;\n\tpadding: ${({ size }) => (size === \"sm\" ? `14px` : `20px`)};\n\ttransition: 0.5s ease all;\n\ttransform-style: preserve-3d;\n\ttransform-origin: top center;\n\ttransform: ${({ isOpen }) => (isOpen ? `translateY(0) scale(1)` : `translateY(20px) scale(0.8)`)};\n\topacity: ${({ isOpen }) => (isOpen ? `1` : `0`)};\n\tvisibility: ${({ isOpen }) => (isOpen ? `visible` : `hidden`)};\n\n\t@media (max-width: 991px) {\n\t\ttop: 42px;\n\t}\n`;\n\nconst DropdownItem = styled.button`\n\tborder: none;\n\tbackground-color: transparent;\n\tfont-weight: 500;\n\tfont-size: 1rem;\n\tcolor: #232429;\n\twhite-space: nowrap;\n\tpadding: 0;\n\n\t@media (max-width: 991px) {\n\t\tfont-size: 0.875rem;\n\t}\n\n\t&:hover,\n\t&:focus,\n\t&:active {\n\t\toutline: none;\n\t\ttext-decoration: none;\n\t\tbox-shadow: none;\n\t}\n\n\t&:not(:last-child) {\n\t\tmargin-bottom: ${({ size }) => (size === \"sm\" ? `14px` : `20px`)};\n\t}\n`;\n\nconst Dropdown = (props) => {\n\tconst [active, setActive] = useState(props.items[props.active] || null);\n\tconst [open, setOpen] = useState(false);\n\n\tconst toggleModal = useCallback(() => {\n\t\tsetOpen((open) => !open);\n\t}, []);\n\n\tconst changeActiveHandler = useCallback(\n\t\t(item) => {\n\t\t\tsetActive(item);\n\t\t\tsetOpen(false);\n\t\t\tif (props.hasOwnProperty(\"onChange\")) {\n\t\t\t\tprops.onChange(item.value);\n\t\t\t}\n\t\t},\n\t\t[props.onChange]\n\t);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Button variant={props.variant} onClick={toggleModal} isOpen={open} size={props.size || \"md\"}>\n\t\t\t\t<ButtonText>{active ? active.title : props.placeholder || \"Select\"}</ButtonText>\n\t\t\t\t<SVG src={require(\"../../../assets/images/global/dropdown.svg\").default} />\n\t\t\t</Button>\n\t\t\t<DropdownList isOpen={open} size={props.size || \"md\"}>\n\t\t\t\t{props.items.map((item, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<DropdownItem size={\"sm\"} onClick={changeActiveHandler.bind(this, item)} key={`dropdown-${i}`}>\n\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</DropdownList>\n\t\t</Wrapper>\n\t);\n};\n\nexport default Dropdown;\n","export default __webpack_public_path__ + \"static/media/dropdown.4a406929.svg\";","import { UI_DECIMALS_DISPLAYED_ORDER_SIZE } from \"../../constants\";\n\nexport const padRightSplitted = (numBg, decimals = UI_DECIMALS_DISPLAYED_ORDER_SIZE) => {\n\tconst numBgToFixed = numBg.toFixed(decimals);\n\tconst numBgToString = numBg.toString();\n\n\tconst decimalPlaces = (numBgToString.split(\".\")[1] || []).length;\n\n\tlet diff = \"\";\n\tlet num = numBgToFixed;\n\tif (!numBg.isZero() && decimalPlaces < decimals) {\n\t\tdiff = numBgToFixed.replace(numBgToString, \"\");\n\t\tnum = numBgToString;\n\t}\n\n\treturn {\n\t\tnum,\n\t\tdiff,\n\t};\n};\n\nexport const truncateAddress = (address) => {\n\treturn `${address.slice(0, 7)}...${address.slice(address.length - 5)}`;\n};\n","import { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { lighten } from \"polished\";\nimport { BigNumber } from \"@0x/utils\";\n\nimport {\n\tgetOrderBook,\n\tgetOrderbookState,\n\tgetSpread,\n\tgetSpreadInPercentage,\n\tgetTotalBaseSellOrders,\n\tgetTotalQuoteBuyOrders,\n} from \"../../../../state/selectors\";\nimport { ZERO, UI_DECIMALS_DISPLAYED_SPREAD_PERCENT, OrderSide, ServerState } from \"../../../../constants\";\nimport { formatTokenSymbol, tokenAmountInUnits } from \"../../../../utils/spot/tokens\";\nimport {\n\tsetMakerAmountSelected,\n\tsetOrderBuyPriceSelected,\n\tsetOrderPriceSelected,\n\tsetOrderSellPriceSelected,\n} from \"../../../../state/spotUI/actions\";\nimport React, { Component } from \"react\";\nimport Loading from \"../../../../components/Loading\";\nimport BookOption from \"../../../../components/BookOption\";\nimport Dropdown from \"../../../../components/UI/Dropdown\";\nimport { padRightSplitted } from \"../../../../utils/spot/numberUtils\";\n\nconst Container = styled.div`\n\twidth: 330px;\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t@media (max-width: 1400px) {\n\t\twidth: 100%;\n\t}\n`;\n\nconst EmptyText = styled.span`\n\tfont-size: 0.875rem;\n\tfont-weight: 400;\n\tcolor: ${({ theme }) => theme.text1};\n`;\nconst BookOptionType = {\n\tBuySellBook: 0,\n\tSellBook: 1,\n\tBuyBook: 2,\n};\n\nconst StyledBookOption = styled(BookOption)`\n\t&:not(:last-child) {\n\t\tmargin-right: 10px;\n\t}\n`;\n\nconst HeaderRow = styled.div`\n\ttop: 20px;\n\tleft: 20px;\n\tright: 20px;\n\tposition: absolute;\n\n\t@media (max-width: 1400px) {\n\t\tposition: relative;\n\t\ttop: initial;\n\t\tleft: auto;\n\t\tright: auto;\n\t\tmargin-bottom: 34px;\n\t}\n`;\nconst TitleRow = styled.div`\n\ttop: 96px;\n\tleft: 20px;\n\tright: 20px;\n\tposition: absolute;\n\n\t@media (max-width: 1400px) {\n\t\tposition: relative;\n\t\ttop: initial;\n\t\tleft: auto;\n\t\tright: auto;\n\t\tmargin-bottom: 20px;\n\t\tline-height: 1;\n\t}\n`;\nconst TableRow = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tmax-height: 814px;\n\tflex-direction: column;\n\tmargin-bottom: 20px;\n\n\t@media (max-width: 1400px) {\n\t\tmax-height: initial;\n\t\tmargin-bottom: 0;\n\t}\n`;\n\nconst Title = styled.span`\n\tcolor: ${({ theme }) => theme.text1};\n\tfont-weight: bold;\n\tfont-size: 1rem;\n`;\n\nconst Result = styled.span`\n\tcolor: ${({ theme }) => theme.text1};\n\tfont-weight: 500;\n\tfont-size: 1rem;\n\n\t@media (max-width: 768px) {\n\t\tfont-size: 0.875rem;\n\t}\n`;\n\nconst TR = styled.div`\n\tpadding: 19px 20px;\n\tborder-radius: 18px;\n\tmargin-bottom: 15px;\n\tmax-height: 56px;\n\tmargin-right: 10px;\n\theight: 56px;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 1fr 1fr;\n\n\t@media (max-width: 1400px) {\n\t\tmargin-right: 0;\n\t}\n`;\nconst CustomHead = styled(TR)`\n\tbackground-color: ${({ theme }) => theme.text1}10;\n`;\n\nconst InnerTR = styled(TR)`\n\tbackground-color: transparent;\n\tcursor: pointer;\n\ttransition: all ease 0.3s;\n\n\t&:hover {\n\t\tbackground-color: ${({ theme }) => theme.text1}06;\n\t}\n`;\n\nconst TH = styled.span`\n\tcolor: ${({ theme }) => theme.text1};\n\tfont-size: 0.75rem;\n\tfont-weight: 400;\n\twhite-space: nowrap;\n`;\n\nconst SpreadTitle = styled.span`\n\tcolor: ${({ theme }) => theme.text1};\n\tfont-size: 0.75rem;\n\tfont-weight: 500;\n\twhite-space: nowrap;\n`;\nconst TD = styled.span`\n\tcolor: ${({ theme, variant }) => (variant ? theme[variant] : theme.text1)};\n\tfont-size: 0.75rem;\n\tfont-weight: 400;\n\tpadding-right: 5px;\n`;\n\nconst TBody = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\tmax-height: 831px;\n\tmin-height: 831px;\n\toverflow-x: hidden;\n\toverflow-y: auto;\n\n\t@media (max-width: 1400px) {\n\t\tmin-height: initial;\n\t\tmax-height: initial;\n\t}\n\n\t/* width */\n\t::-webkit-scrollbar {\n\t\twidth: 3px;\n\t}\n\n\t/* Track */\n\t::-webkit-scrollbar-track {\n\t\tbox-shadow: none;\n\t\tbackground-color: transparent;\n\t\tborder-radius: 10px;\n\t\tpadding: 0 6px;\n\t\tmargin: 0 6px;\n\t\tborder-right: 1px solid ${({ theme }) => theme.text1};\n\t}\n\n\t/* Handle */\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: ${({ theme }) => theme.text1};\n\t\tborder-radius: 10px;\n\t\twidth: 4px !important;\n\t}\n\n\t/* Handle on hover */\n\t::-webkit-scrollbar-thumb:hover {\n\t\tbackground: ${({ theme }) => lighten(0.08, theme.text1)};\n\t}\n`;\n\nconst depthItems = [\n\t{\n\t\tvalue: 5,\n\t\ttitle: \"5\",\n\t},\n\t{\n\t\tvalue: 10,\n\t\ttitle: \"10\",\n\t},\n\t{\n\t\tvalue: 20,\n\t\ttitle: \"20\",\n\t},\n\t{\n\t\tvalue: 50,\n\t\ttitle: \"50\",\n\t},\n];\n\nclass OrderToRow extends Component {\n\trender() {\n\t\tconst { order, index, baseToken, priceColor, mySizeOrders = [], currencyPair } = this.props;\n\t\tconst basePrecision = currencyPair.config.basePrecision;\n\t\tconst pricePrecision = currencyPair.config.pricePrecision;\n\n\t\tconst size = tokenAmountInUnits(order.size, baseToken.decimals, basePrecision);\n\t\tconst price = order.price.toString();\n\n\t\tconst mySize = mySizeOrders.reduce((sumSize, mySizeItem) => {\n\t\t\tif (mySizeItem.price.eq(order.price)) {\n\t\t\t\treturn sumSize.plus(mySizeItem.size);\n\t\t\t}\n\t\t\treturn sumSize;\n\t\t}, ZERO);\n\n\t\tconst mySizeConverted = tokenAmountInUnits(mySize, baseToken.decimals, basePrecision);\n\t\tconst isMySizeEmpty = mySize.eq(new BigNumber(0));\n\t\tconst numSplitted = padRightSplitted(new BigNumber(size), basePrecision);\n\n\t\treturn (\n\t\t\t<InnerTR>\n\t\t\t\t<TD>{numSplitted.num}</TD>\n\t\t\t\t<TD variant={priceColor}>{parseFloat(price).toFixed(pricePrecision)}</TD>\n\t\t\t\t<TD>{isMySizeEmpty ? \"-\" : mySizeConverted}</TD>\n\t\t\t</InnerTR>\n\t\t);\n\t}\n}\n\nconst mapOrderToRowDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSetOrderPriceSelected: (orderPriceSelected) => dispatch(setOrderPriceSelected(orderPriceSelected)),\n\t\tonSetOrderBuyPriceSelected: (orderPriceSelected) => dispatch(setOrderBuyPriceSelected(orderPriceSelected)),\n\t\tonSetOrderSellPriceSelected: (orderPriceSelected) => dispatch(setOrderSellPriceSelected(orderPriceSelected)),\n\t\tonSetMakerAmountSelected: (makerAmountSelected) => dispatch(setMakerAmountSelected(makerAmountSelected)),\n\t};\n};\n\nconst OrderToRowContainer = connect(null, mapOrderToRowDispatchToProps)(OrderToRow);\n\nclass Orderbook extends Component {\n\tstate = {\n\t\tdepth: { value: this.props.defaultDepth || 5 },\n\t\tbookOption: BookOptionType.BuySellBook,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis._spreadRowScrollable = React.createRef();\n\t\tthis._spreadRowFixed = React.createRef();\n\t\tthis._itemsScroll = React.createRef();\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\torderBook,\n\t\t\tbaseToken,\n\t\t\tquoteToken,\n\t\t\tabsoluteSpread,\n\t\t\tpercentageSpread,\n\t\t\tcurrencyPair,\n\t\t\ttotalQuoteBuyOrders,\n\t\t\ttotalBaseSellOrders,\n\t\t\tserverState,\n\t\t} = this.props;\n\t\tconst { sellOrders, buyOrders, mySizeOrders } = orderBook;\n\t\tconst mySizeSellArray = mySizeOrders.filter((order) => {\n\t\t\treturn order.side === OrderSide.Sell;\n\t\t});\n\t\tconst mySizeBuyArray = mySizeOrders.filter((order) => {\n\t\t\treturn order.side === OrderSide.Buy;\n\t\t});\n\t\tconst getColor = (order) => {\n\t\t\treturn order.side === OrderSide.Buy ? \"success\" : \"danger\";\n\t\t};\n\t\tlet content;\n\n\t\tif (!baseToken || !quoteToken || serverState === ServerState.NotLoaded) {\n\t\t\tcontent = (\n\t\t\t\t<div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n\t\t\t\t\t<Loading width={40} height={40} id={\"orderbooks\"} active />\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if ((!buyOrders.length && !sellOrders.length) || !baseToken || !quoteToken) {\n\t\t\tcontent = (\n\t\t\t\t<div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n\t\t\t\t\t<EmptyText>There are no orders to show</EmptyText>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\tconst spreadAbsFixed = absoluteSpread.toFixed(currencyPair.config.pricePrecision);\n\t\t\tconst spreadPercentFixed = percentageSpread.toFixed(UI_DECIMALS_DISPLAYED_SPREAD_PERCENT);\n\t\t\tconst basePrecision = currencyPair.config.basePrecision;\n\n\t\t\tconst totalBase = tokenAmountInUnits(totalBaseSellOrders, baseToken.decimals, basePrecision);\n\n\t\t\tconst totalQuote = tokenAmountInUnits(totalQuoteBuyOrders, quoteToken.decimals, 2);\n\n\t\t\tconst baseSymbol = formatTokenSymbol(baseToken.symbol);\n\t\t\tconst quoteSymbol = formatTokenSymbol(quoteToken.symbol);\n\n\t\t\tconst handleDepth = (value) => {\n\t\t\t\tthis.setState({ depth: { value: Number(value) } });\n\t\t\t};\n\n\t\t\tconst bookOptionState = this.state.bookOption;\n\t\t\tconst handleBookOption = (option) => {\n\t\t\t\tthis.setState({ bookOption: option });\n\t\t\t};\n\n\t\t\tcontent = (\n\t\t\t\t<>\n\t\t\t\t\t<HeaderRow className=\"d-flex align-items-start justify-content-between\">\n\t\t\t\t\t\t<div className={\"d-flex align-items-center\"}>\n\t\t\t\t\t\t\t<StyledBookOption\n\t\t\t\t\t\t\t\tactive={bookOptionState === BookOptionType.BuySellBook}\n\t\t\t\t\t\t\t\tonChange={() => handleBookOption(BookOptionType.BuySellBook)}\n\t\t\t\t\t\t\t\tisSell={true}\n\t\t\t\t\t\t\t\tisBuy\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<StyledBookOption\n\t\t\t\t\t\t\t\tactive={bookOptionState === BookOptionType.BuyBook}\n\t\t\t\t\t\t\t\tonChange={() => handleBookOption(BookOptionType.BuyBook)}\n\t\t\t\t\t\t\t\tisBuy\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<StyledBookOption\n\t\t\t\t\t\t\t\tactive={bookOptionState === BookOptionType.SellBook}\n\t\t\t\t\t\t\t\tonChange={() => handleBookOption(BookOptionType.SellBook)}\n\t\t\t\t\t\t\t\tisSell\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Dropdown items={depthItems} placeholder={\"Depth\"} onChange={handleDepth} />\n\t\t\t\t\t</HeaderRow>\n\t\t\t\t\t<TitleRow className=\"d-flex align-items-center justify-content-between\">\n\t\t\t\t\t\t<Title>Asks</Title>\n\t\t\t\t\t\t<Result>{`Total: ${totalBase} ${baseSymbol}`}</Result>\n\t\t\t\t\t</TitleRow>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<CustomHead>\n\t\t\t\t\t\t\t<TH>Trade Size</TH>\n\t\t\t\t\t\t\t<TH>Price ({formatTokenSymbol(quoteToken.symbol)})</TH>\n\t\t\t\t\t\t\t<TH>My Size</TH>\n\t\t\t\t\t\t</CustomHead>\n\t\t\t\t\t\t<TBody>\n\t\t\t\t\t\t\t{(bookOptionState === BookOptionType.BuySellBook ||\n\t\t\t\t\t\t\t\tbookOptionState === BookOptionType.SellBook) &&\n\t\t\t\t\t\t\t\tsellOrders\n\t\t\t\t\t\t\t\t\t.slice(sellOrders.length - this.state.depth.value, sellOrders.length)\n\t\t\t\t\t\t\t\t\t.map((order, index) => (\n\t\t\t\t\t\t\t\t\t\t<OrderToRowContainer\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\torder={order}\n\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\t\tcount={sellOrders.length}\n\t\t\t\t\t\t\t\t\t\t\torders={sellOrders}\n\t\t\t\t\t\t\t\t\t\t\tbaseToken={baseToken}\n\t\t\t\t\t\t\t\t\t\t\tpriceColor={getColor(order)}\n\t\t\t\t\t\t\t\t\t\t\tmySizeOrders={mySizeSellArray}\n\t\t\t\t\t\t\t\t\t\t\tcurrencyPair={currencyPair}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t<CustomHead>\n\t\t\t\t\t\t\t\t<SpreadTitle>Spread</SpreadTitle>\n\t\t\t\t\t\t\t\t<SpreadTitle>{spreadAbsFixed}</SpreadTitle>\n\t\t\t\t\t\t\t\t<SpreadTitle>{spreadPercentFixed}%</SpreadTitle>\n\t\t\t\t\t\t\t</CustomHead>\n\n\t\t\t\t\t\t\t{(bookOptionState === BookOptionType.BuyBook ||\n\t\t\t\t\t\t\t\tbookOptionState === BookOptionType.BuySellBook) &&\n\t\t\t\t\t\t\t\tbuyOrders\n\t\t\t\t\t\t\t\t\t.slice(0, this.state.depth.value)\n\t\t\t\t\t\t\t\t\t.map((order, index) => (\n\t\t\t\t\t\t\t\t\t\t<OrderToRowContainer\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\torder={order}\n\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\t\tcount={buyOrders.length}\n\t\t\t\t\t\t\t\t\t\t\torders={buyOrders}\n\t\t\t\t\t\t\t\t\t\t\tbaseToken={baseToken}\n\t\t\t\t\t\t\t\t\t\t\tpriceColor={getColor(order)}\n\t\t\t\t\t\t\t\t\t\t\tmySizeOrders={mySizeBuyArray}\n\t\t\t\t\t\t\t\t\t\t\tcurrencyPair={currencyPair}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TBody>\n\n\t\t\t\t\t\t<CustomHead>\n\t\t\t\t\t\t\t<SpreadTitle>Bids</SpreadTitle>\n\t\t\t\t\t\t\t<SpreadTitle>{`${totalQuote} ${quoteSymbol}`}</SpreadTitle>\n\t\t\t\t\t\t\t<SpreadTitle> </SpreadTitle>\n\t\t\t\t\t\t</CustomHead>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\n\t\treturn <Container>{content}</Container>;\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tbaseToken: state.spot.baseToken,\n\t\tcurrencyPair: state.spot.currencyPair,\n\t\tquoteToken: state.spot.quoteToken,\n\t\tuserOrders: state.relayer.userOrders,\n\t\torderBookState: state.relayer.orderBookState,\n\t\torderBook: getOrderBook(state),\n\t\tabsoluteSpread: getSpread(state),\n\t\tpercentageSpread: getSpreadInPercentage(state),\n\t\ttotalQuoteBuyOrders: getTotalQuoteBuyOrders(state),\n\t\ttotalBaseSellOrders: getTotalBaseSellOrders(state),\n\t\tserverState: getOrderbookState(state),\n\t};\n};\n\nexport default connect(mapStateToProps)(Orderbook);\n","import { withRouter } from \"react-router-dom\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n\tupdateERC20Markets,\n\tupdateERC20Store,\n\tupdateMarketPriceEther,\n\tupdateMarketPriceQuote,\n\tupdateMarketPriceTokens,\n} from \"../../../../state/spot/actions\";\nimport withWeb3Account from \"../../../../components/hoc/withWeb3Account\";\nimport {\n\tUI_UPDATE_CHECK_INTERVAL,\n\tUPDATE_ERC20_MARKETS,\n\tUPDATE_ETHER_PRICE_INTERVAL,\n\tUPDATE_TOKENS_PRICE_INTERVAL,\n} from \"../../../../constants\";\nimport { subscribeToRelayerWebsocketFillEvents } from \"../../../../state/relayer/actions\";\nimport Web3 from \"web3\";\n\nconst web3 = new Web3(Web3.givenProvider || Web3.providers.HttpProvider(process.env.REACT_APP_NETWORK_URL));\n\nclass Provider extends Component {\n\t_deactivatePollingUpdates = () => {\n\t\tif (this._updateStoreInterval) {\n\t\t\tclearInterval(this._updateStoreInterval);\n\t\t\tthis._updateStoreInterval = undefined;\n\t\t}\n\n\t\tif (this._updatePriceEtherInterval) {\n\t\t\tclearInterval(this._updatePriceEtherInterval);\n\t\t\tthis._updatePriceEtherInterval = undefined;\n\t\t}\n\t\tif (this._updatePriceTokensInterval) {\n\t\t\tclearInterval(this._updatePriceTokensInterval);\n\t\t\tthis._updatePriceTokensInterval = undefined;\n\t\t}\n\t\tif (this._updateERC20MarketsInterval) {\n\t\t\tclearInterval(this._updateERC20MarketsInterval);\n\t\t\tthis._updateERC20MarketsInterval = undefined;\n\t\t}\n\t};\n\n\t_activatePollingUpdates = () => {\n\t\tthis.props.onUpdateERC20Markets();\n\t\tthis.props.onUpdateMarketPriceTokens();\n\t\tthis.props.onUpdateMarketPriceEther();\n\t\tthis.props.onUpdateMarketPriceQuote();\n\t\tthis.props.onUpdateERC20Store(this.props.web3.account, web3.currentProvider);\n\t\tthis.props.onUpdateMarketPriceQuote();\n\t\t// Enables realtime updates of the store using polling\n\t\tif (UI_UPDATE_CHECK_INTERVAL !== 0 && !this._updateStoreInterval) {\n\t\t\tthis._updateStoreInterval = window.setInterval(async () => {\n\t\t\t\tthis.props.onUpdateERC20Store(this.props.web3.account, web3.currentProvider);\n\t\t\t\tthis.props.onUpdateMarketPriceQuote();\n\t\t\t\tthis.setState({\n\t\t\t\t\tisActiveCheckUpdates: true,\n\t\t\t\t});\n\t\t\t}, UI_UPDATE_CHECK_INTERVAL);\n\t\t}\n\n\t\t// Enables realtime updates of the price ether and quote token using polling\n\t\tif (!this._updatePriceEtherInterval && UPDATE_ETHER_PRICE_INTERVAL !== 0) {\n\t\t\tthis._updatePriceEtherInterval = window.setInterval(async () => {\n\t\t\t\tthis.props.onUpdateMarketPriceEther();\n\t\t\t\tthis.props.onUpdateMarketPriceQuote();\n\t\t\t}, UPDATE_ETHER_PRICE_INTERVAL);\n\t\t}\n\t\t// Enables realtime updates of token prices\n\t\tif (!this._updatePriceTokensInterval && UPDATE_TOKENS_PRICE_INTERVAL !== 0) {\n\t\t\tthis._updatePriceTokensInterval = window.setInterval(async () => {\n\t\t\t\tthis.props.onUpdateMarketPriceTokens();\n\t\t\t}, UPDATE_TOKENS_PRICE_INTERVAL);\n\t\t}\n\t\t// Enables realtime updates of the token markets\n\t\tif (!this._updateERC20MarketsInterval && UPDATE_ERC20_MARKETS !== 0) {\n\t\t\tthis._updateERC20MarketsInterval = window.setInterval(async () => {\n\t\t\t\tthis.props.onUpdateERC20Markets();\n\t\t\t}, UPDATE_ERC20_MARKETS);\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tconst { web3, onSubscribeMarketMakerStates } = this.props;\n\n\t\tonSubscribeMarketMakerStates(web3.account);\n\n\t\tif (this.props.web3.account) {\n\t\t\tthis._activatePollingUpdates();\n\t\t} else {\n\t\t\t// If the user is currently using the dApp with the interval and the metamask status changed, the polling is removed\n\t\t\tthis._deactivatePollingUpdates();\n\t\t}\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tclearInterval(this._updateStoreInterval);\n\t\tclearInterval(this._updatePriceEtherInterval);\n\t\tclearInterval(this._updatePriceTokensInterval);\n\t\tclearInterval(this._updateERC20MarketsInterval);\n\t};\n\n\trender = () => this.props.children;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonUpdateMarketPriceEther: () => dispatch(updateMarketPriceEther()),\n\t\tonUpdateMarketPriceQuote: () => dispatch(updateMarketPriceQuote()),\n\t\tonUpdateMarketPriceTokens: () => dispatch(updateMarketPriceTokens()),\n\t\tonUpdateERC20Markets: () => dispatch(updateERC20Markets()),\n\t\tonUpdateERC20Store: (account, library) => dispatch(updateERC20Store(account, library)),\n\t\tonSubscribeMarketMakerStates: (account) => dispatch(subscribeToRelayerWebsocketFillEvents(account)),\n\t};\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(withWeb3Account(Provider)));\n","import { connect } from \"react-redux\";\n\nimport { OrderSide, ServerState, USE_RELAYER_MARKET_UPDATES } from \"../../../../constants\";\nimport { changeMarket } from \"../../../../state/spot/actions\";\nimport { isWeth } from \"../../../../utils/known_tokens\";\nimport { getCurrencyPairByTokensSymbol } from \"../../../../utils/spot/knownCurrencyPair\";\nimport { marketToStringFromTokens } from \"../../../../utils/spot/market\";\nimport { formatTokenSymbol, tokenAmountInUnits } from \"../../../../utils/spot/tokens\";\nimport Loading from \"../../../../components/Loading\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { lighten } from \"polished\";\n\nconst EmptyText = styled.span`\n\tfont-size: 0.875rem;\n\tfont-weight: 400;\n\tcolor: ${({ theme }) => theme.text1};\n`;\nconst Container = styled.div`\n\twidth: 330px;\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t@media (max-width: 1400px) {\n\t\twidth: 100%;\n\t}\n`;\n\nconst TR = styled.div`\n\tpadding: 19px 20px;\n\tborder-radius: 18px;\n\tmargin-bottom: 15px;\n\tmax-height: 56px;\n\tmargin-right: 10px;\n\theight: 56px;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 1fr 1fr;\n\n\t@media (max-width: 1400px) {\n\t\tmargin-right: 0;\n\t}\n`;\nconst CustomHead = styled(TR)`\n\tbackground-color: ${({ theme }) => theme.text1}10;\n`;\n\nconst TH = styled.span`\n\tcolor: ${({ theme }) => theme.text1};\n\tfont-size: 0.75rem;\n\tfont-weight: 400;\n`;\n\nconst TD = styled.span`\n\tcolor: ${({ theme, variant }) => (variant ? theme[variant] : theme.text1)};\n\tfont-size: 0.75rem;\n\tfont-weight: 400;\n\tpadding-right: 5px;\n`;\n\nconst TBody = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\tmax-height: 887px;\n\tmin-height: 887px;\n\toverflow-x: hidden;\n\toverflow-y: auto;\n\n\t@media (max-width: 1400px) {\n\t\tmax-height: initial;\n\t\tmin-height: initial;\n\t}\n\n\t/* width */\n\t::-webkit-scrollbar {\n\t\twidth: 3px;\n\t}\n\n\t/* Track */\n\t::-webkit-scrollbar-track {\n\t\tbox-shadow: none;\n\t\tbackground-color: transparent;\n\t\tborder-radius: 10px;\n\t\tpadding: 0 6px;\n\t\tmargin: 0 6px;\n\t\tborder-right: 1px solid ${({ theme }) => theme.text1};\n\t}\n\n\t/* Handle */\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: ${({ theme }) => theme.text1};\n\t\tborder-radius: 10px;\n\t\twidth: 4px !important;\n\t}\n\n\t/* Handle on hover */\n\t::-webkit-scrollbar-thumb:hover {\n\t\tbackground: ${({ theme }) => lighten(0.08, theme.text1)};\n\t}\n`;\n\nconst TableContainer = styled.div`\n\tpadding-left: 10px;\n\n\t@media (max-width: 1400px) {\n\t\tpadding-left: 0;\n\t}\n`;\n\nconst fillToRow = (fill, index) => {\n\tlet amountBase;\n\tUSE_RELAYER_MARKET_UPDATES\n\t\t? (amountBase = fill.amountBase.toFixed(fill.tokenBase.displayDecimals))\n\t\t: (amountBase = tokenAmountInUnits(fill.amountBase, fill.tokenBase.decimals, fill.tokenBase.displayDecimals));\n\n\tconst displayAmountBase = `${amountBase} ${formatTokenSymbol(fill.tokenBase.symbol)}`;\n\tlet currencyPair;\n\ttry {\n\t\tcurrencyPair = getCurrencyPairByTokensSymbol(fill.tokenBase.symbol, fill.tokenQuote.symbol);\n\t} catch {\n\t\treturn null;\n\t}\n\tconst price = parseFloat(fill.price.toString()).toFixed(currencyPair.config.pricePrecision);\n\n\treturn (\n\t\t<TR key={index}>\n\t\t\t<TD variant={fill.side === OrderSide.Buy ? \"success\" : \"danger\"}>{price}</TD>\n\t\t\t<TD>{displayAmountBase}</TD>\n\t\t\t<TD>{fill.timestamp.toISOString().slice(-13, -5)}</TD>\n\t\t</TR>\n\t);\n};\nconst MarketFills = (props) => {\n\tlet content;\n\tconst { marketFills, baseToken, quoteToken, marketFillsState } = props;\n\tif (!baseToken || !quoteToken || marketFillsState === ServerState.NotLoaded) {\n\t\tcontent = (\n\t\t\t<div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n\t\t\t\t<Loading width={40} height={40} id={\"market-fills\"} active />\n\t\t\t</div>\n\t\t);\n\t} else if (\n\t\t!Object.keys(marketFills).length ||\n\t\t!baseToken ||\n\t\t!quoteToken ||\n\t\t!marketFills[marketToStringFromTokens(baseToken, quoteToken)]\n\t) {\n\t\tcontent = (\n\t\t\t<div className={\"d-flex flex-column\"}>\n\t\t\t\t<div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n\t\t\t\t\t<EmptyText>There are no trades to show</EmptyText>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tconst market = marketToStringFromTokens(baseToken, quoteToken);\n\t\tconst tokenQuoteSymbol = isWeth(quoteToken.symbol) ? \"ETH\" : quoteToken.symbol.toUpperCase();\n\t\tconst tokenBaseSymbol = isWeth(baseToken.symbol) ? \"ETH\" : baseToken.symbol.toUpperCase();\n\n\t\tcontent = (\n\t\t\t<TableContainer className=\"d-flex flex-column\">\n\t\t\t\t<CustomHead>\n\t\t\t\t\t<TH>Price ({tokenQuoteSymbol})</TH>\n\t\t\t\t\t<TH>Amount ({tokenBaseSymbol})</TH>\n\t\t\t\t\t<TH>Time</TH>\n\t\t\t\t</CustomHead>\n\t\t\t\t<TBody>{marketFills[market].map((marketFill, index) => fillToRow(marketFill, index))}</TBody>\n\t\t\t</TableContainer>\n\t\t);\n\t}\n\n\treturn <Container>{content}</Container>;\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tbaseToken: state.spot.baseToken,\n\t\tmarketFills: state.spotUI.marketFills,\n\t\tquoteToken: state.spot.quoteToken,\n\t\tmarketFillsState: state.relayer.marketFillsState,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tchangeMarket: (currencyPair) => dispatch(changeMarket(currencyPair)),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarketFills);\n","import { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { OrderStatus } from \"@0x/types\";\nimport { lighten } from \"polished\";\n\nimport { isWeth } from \"../../../../utils/known_tokens\";\nimport { tokenAmountInUnits } from \"../../../../utils/spot/tokens\";\nimport { OrderSide } from \"../../../../constants\";\nimport { getCurrencyPairFromTokens } from \"../../../../utils/spot/knownCurrencyPair\";\nimport Loading from \"../../../../components/Loading\";\nimport { ResponsiveCard } from \"../../../../components/Card\";\n\nconst Card = styled(ResponsiveCard)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n\tmargin-bottom: 10px;\n\tmin-height: 457px;\n\n\t& .card-body {\n\t\tpadding: 20px 30px 30px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t@media (min-width: 1400px) {\n\t\twidth: 580px;\n\t\theight: 447px;\n\t\tmin-height: 447px;\n\n\t\t& .card-body {\n\t\t\tpadding: 15px;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t}\n\t}\n`;\n\nconst CardTitle = styled.h4`\n\tmargin-top: 0;\n\tpadding: 0;\n\tmargin-bottom: 20px;\n\tfont-size: 1.25rem;\n\tfont-weight: 700;\n\tcolor: ${({ theme }) => theme.text1};\n`;\n\nconst Content = styled.div`\n\tbackground-color: ${({ theme }) => theme.bg3};\n\tborder-radius: 18px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\tmax-height: 363px;\n\toverflow: hidden;\n`;\n\nconst InnerContent = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tmax-height: 100%;\n\toverflow-x: hidden;\n\toverflow-y: auto;\n\tflex: 1;\n\tpadding: 12px;\n\n\t@media (max-width: 1400px) {\n\t\tpadding: 20px;\n\t}\n\n\t/* width */\n\t::-webkit-scrollbar {\n\t\twidth: 3px;\n\t}\n\n\t/* Track */\n\t::-webkit-scrollbar-track {\n\t\tbox-shadow: none;\n\t\tbackground-color: transparent;\n\t\tborder-radius: 10px;\n\t\tpadding: 0 6px;\n\t\tmargin: 0 6px;\n\t\tborder-right: 1px solid ${({ theme }) => theme.text1};\n\t}\n\n\t/* Handle */\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: ${({ theme }) => theme.text1};\n\t\tborder-radius: 10px;\n\t\twidth: 4px !important;\n\t}\n\n\t/* Handle on hover */\n\t::-webkit-scrollbar-thumb:hover {\n\t\tbackground: ${({ theme }) => lighten(0.08, theme.text1)};\n\t}\n`;\n\nconst EmptyText = styled.span`\n\tfont-size: 0.875rem;\n\tfont-weight: 400;\n\tcolor: ${({ theme }) => theme.text1};\n`;\n\nconst TR = styled.div`\n\tpadding: 8px 16px;\n\tborder-radius: 12px;\n\tmargin-bottom: 20px;\n\tmax-height: 32px;\n\theight: 32px;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n`;\nconst CustomHead = styled(TR)`\n\tbackground-color: ${({ theme }) => theme.text1}10;\n\tmax-height: 40px;\n\theight: 40px;\n\tpadding: 12px 16px;\n\tmargin-bottom: 12px;\n`;\n\nconst TH = styled.span`\n\tcolor: ${({ theme }) => theme.text1};\n\tfont-size: 0.75rem;\n\tfont-weight: 400;\n`;\n\nconst TD = styled.span`\n\tcolor: ${({ theme, variant }) => (variant ? theme[variant] : theme.text1)};\n\tfont-size: 0.875rem;\n\tfont-weight: 400;\n\tpadding-right: 5px;\n`;\n\nconst TBody = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\n\t/* width */\n\t::-webkit-scrollbar {\n\t\twidth: 3px;\n\t}\n\n\t/* Track */\n\t::-webkit-scrollbar-track {\n\t\tbox-shadow: none;\n\t\tbackground-color: transparent;\n\t\tborder-radius: 10px;\n\t\tpadding: 0 6px;\n\t\tmargin: 0 6px;\n\t\tborder-right: 1px solid ${({ theme }) => theme.text1};\n\t}\n\n\t/* Handle */\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: ${({ theme }) => theme.text1};\n\t\tborder-radius: 10px;\n\t\twidth: 4px !important;\n\t}\n\n\t/* Handle on hover */\n\t::-webkit-scrollbar-thumb:hover {\n\t\tbackground: ${({ theme }) => lighten(0.08, theme.text1)};\n\t}\n`;\n\nconst orderToRow = (order, index, baseToken, quoteToken) => {\n\tconst sideLabel = order.side === OrderSide.Sell ? \"Sell\" : \"Buy\";\n\tconst size = tokenAmountInUnits(order.size, baseToken.decimals, baseToken.displayDecimals);\n\tlet status = \"--\";\n\tlet isOrderFillable = false;\n\n\tconst filled = order.filled\n\t\t? tokenAmountInUnits(order.filled, baseToken.decimals, baseToken.displayDecimals)\n\t\t: null;\n\tif (order.status) {\n\t\tisOrderFillable = order.status === OrderStatus.Fillable;\n\t\tstatus = isOrderFillable ? \"Open\" : \"Filled\";\n\t}\n\tconst currencyPair = getCurrencyPairFromTokens(baseToken, quoteToken);\n\tconst price = parseFloat(order.price.toString()).toFixed(currencyPair.config.pricePrecision);\n\n\treturn (\n\t\t<TR key={index}>\n\t\t\t<TD variant={order.side === OrderSide.Buy ? \"success\" : \"danger\"}>{sideLabel}</TD>\n\t\t\t<TD>{size}</TD>\n\t\t\t<TD>{filled}</TD>\n\t\t\t<TD>{price}</TD>\n\t\t\t<TD>{status}</TD>\n\t\t</TR>\n\t);\n};\n\nconst OrderHistory = (props) => {\n\tconst { orders, baseToken, quoteToken } = props;\n\tconst ordersToShow = orders.filter((order) => order.status === OrderStatus.Fillable);\n\n\tlet content;\n\n\tif (!baseToken || !quoteToken) {\n\t\tcontent = (\n\t\t\t<div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n\t\t\t\t<Loading width={40} height={40} id={`order-history-${props.isMobile ? \"mobile\" : \"desktop\"}`} active />\n\t\t\t</div>\n\t\t);\n\t} else if (!ordersToShow.length || !baseToken || !quoteToken) {\n\t\tcontent = (\n\t\t\t<div className=\"w-100 h-100 d-flex align-items-center justify-content-xl-center\">\n\t\t\t\t<EmptyText>There are no orders to show</EmptyText>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tconst tokenQuoteSymbol = isWeth(quoteToken.symbol) ? \"ETH\" : quoteToken.symbol.toUpperCase();\n\t\tconst tokenBaseSymbol = isWeth(baseToken.symbol) ? \"ETH\" : baseToken.symbol.toUpperCase();\n\n\t\tcontent = (\n\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t<CustomHead>\n\t\t\t\t\t<TH>Side</TH>\n\t\t\t\t\t<TH>\n\t\t\t\t\t\tSize <span className=\"d-none d-lg-inline-block\">({tokenBaseSymbol})</span>\n\t\t\t\t\t</TH>\n\t\t\t\t\t<TH>\n\t\t\t\t\t\tFilled <span className=\"d-none d-lg-inline-block\">({tokenBaseSymbol})</span>\n\t\t\t\t\t</TH>\n\t\t\t\t\t<TH>\n\t\t\t\t\t\tPrice <span className=\"d-none d-lg-inline-block\">({tokenQuoteSymbol})</span>\n\t\t\t\t\t</TH>\n\t\t\t\t\t<TH>Status</TH>\n\t\t\t\t</CustomHead>\n\t\t\t\t<TBody>{ordersToShow.map((order, index) => orderToRow(order, index, baseToken, quoteToken))}</TBody>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Card>\n\t\t\t<CardTitle>Open Orders</CardTitle>\n\t\t\t<Content>\n\t\t\t\t<InnerContent>{content}</InnerContent>\n\t\t\t</Content>\n\t\t</Card>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tbaseToken: state.spot.baseToken,\n\t\torders: state.relayer.userOrders,\n\t\tquoteToken: state.spot.quoteToken,\n\t};\n};\n\nexport default connect(mapStateToProps)(OrderHistory);\n","import { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport React, { useMemo } from \"react\";\nimport { OrderStatus } from \"@0x/types\";\nimport { lighten } from \"polished\";\n\nimport { isWeth } from \"../../../../utils/known_tokens\";\nimport Loading from \"../../../../components/Loading\";\nimport { ResponsiveCard } from \"../../../../components/Card\";\nimport { getCurrencyPair, getMarketMakerStats } from \"../../../../state/selectors\";\nimport { marketToString } from \"../../../../utils/spot/market\";\nimport { useActiveWeb3React } from \"../../../../hooks\";\n\nconst Card = styled(ResponsiveCard)`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n\tmargin-bottom: 20px;\n\n\t@media (min-width: 1400px) {\n\t\twidth: 700px;\n\t\theight: 447px;\n\n\t\t& .card-body {\n\t\t\tpadding: 20px;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t}\n\t}\n`;\n\nconst CardTitle = styled.h4`\n\tmargin-top: 0;\n\tpadding: 0;\n\tmargin-bottom: 20px;\n\tfont-size: 1.25rem;\n\tfont-weight: 700;\n\tcolor: ${({ theme }) => theme.text1};\n`;\n\nconst Content = styled.div`\n\tbackground-color: ${({ theme }) => theme.bg3};\n\tborder-radius: 18px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\tmax-height: 363px;\n\toverflow: hidden;\n\n\t@media (max-width: 1400px) {\n\t\tmax-height: initial;\n\t}\n`;\n\nconst InnerContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tmax-height: 100%;\n\toverflow-x: hidden;\n\toverflow-y: auto;\n\tdisplay: grid;\n\tflex: 1;\n\tpadding: 20px;\n\tgrid-template-columns: 1fr 1fr;\n\tgap: 32px 65px;\n\n\t@media (max-width: 1400px) {\n\t\tgrid-template-columns: auto;\n\t}\n\n\t/* width */\n\t::-webkit-scrollbar {\n\t\twidth: 3px;\n\t}\n\n\t/* Track */\n\t::-webkit-scrollbar-track {\n\t\tbox-shadow: none;\n\t\tbackground-color: transparent;\n\t\tborder-radius: 10px;\n\t\tpadding: 0 6px;\n\t\tmargin: 0 6px;\n\t\tborder-right: 1px solid ${({ theme }) => theme.text1};\n\t}\n\n\t/* Handle */\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: ${({ theme }) => theme.text1};\n\t\tborder-radius: 10px;\n\t\twidth: 4px !important;\n\t}\n\n\t/* Handle on hover */\n\t::-webkit-scrollbar-thumb:hover {\n\t\tbackground: ${({ theme }) => lighten(0.08, theme.text1)};\n\t}\n`;\n\nconst Column = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\n\t&:last-child {\n\t\tpadding-bottom: 30px;\n\t}\n`;\n\nconst Label = styled.span`\n\tfont-weight: 400;\n\tfont-size: 16px;\n\tcolor: ${({ theme }) => theme.text1};\n`;\n\nconst Value = styled.span`\n\tfont-weight: 500;\n\tfont-size: 16px;\n\tcolor: ${({ theme }) => theme.text1};\n\topacity: 0.5;\n`;\n\nconst fieldsStatsMap = [\n\t{\n\t\tlabel: \"Protocol Fees\",\n\t\tfield: \"protocolFeesCollected\",\n\t},\n\t{\n\t\tlabel: \"Weth Fees\",\n\t\tfield: \"totalWethFeesCollected\",\n\t},\n\t{\n\t\tlabel: \"Total Orders\",\n\t\tfield: \"totalOrders\",\n\t},\n\t{\n\t\tlabel: \"Total Buy Orders\",\n\t\tfield: \"totalBuyOrders\",\n\t},\n\t{\n\t\tlabel: \"Total Sell Orders\",\n\t\tfield: \"totalSellOrders\",\n\t},\n\t{\n\t\tlabel: \"Median Buy Price\",\n\t\tfield: \"medianBuyPrice\",\n\t},\n\t{\n\t\tlabel: \"Median Sell Price\",\n\t\tfield: \"medianSellPrice\",\n\t},\n\t{\n\t\tlabel: \"Total Buy Base Volume\",\n\t\tfield: \"totalBuyBaseVolume\",\n\t},\n\t{\n\t\tlabel: \"Total Sell Base Volume\",\n\t\tfield: \"totalSellBaseVolume\",\n\t},\n\t{\n\t\tlabel: \"Total Buy Quote Volume\",\n\t\tfield: \"totalBuyQuoteVolume\",\n\t},\n\t{\n\t\tlabel: \"Total Sell Quote Volume\",\n\t\tfield: \"totalSellQuoteVolume\",\n\t},\n\t{\n\t\tlabel: \"Total Quote Volume\",\n\t\tfield: \"totalQuoteVolume\",\n\t},\n\t{\n\t\tlabel: \"Total Base Volume\",\n\t\tfield: \"totalBaseVolume\",\n\t},\n];\n\nconst MarketStats = (props) => {\n\tconst { account } = useActiveWeb3React();\n\tconst { marketMakerStats, currencyPair } = props;\n\tlet content;\n\n\tconst filteredMarketMakerStats = useMemo(() => {\n\t\treturn marketMakerStats.find(\n\t\t\t(m) => m.account.toLowerCase() === account.toLowerCase() && m.market === marketToString(currencyPair)\n\t\t);\n\t}, [marketMakerStats]);\n\n\tcontent = fieldsStatsMap.map((f, index) => (\n\t\t<Column key={index}>\n\t\t\t<Label>{f.label}</Label>\n\t\t\t<Value>{filteredMarketMakerStats ? filteredMarketMakerStats[f.field].toString() : 0}</Value>\n\t\t</Column>\n\t));\n\n\treturn (\n\t\t<Card>\n\t\t\t<CardTitle>Market Maker Stats</CardTitle>\n\t\t\t<Content>\n\t\t\t\t<InnerContainer>{content}</InnerContainer>\n\t\t\t</Content>\n\t\t</Card>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tmarketMakerStats: getMarketMakerStats(state),\n\t\tcurrencyPair: getCurrencyPair(state),\n\t};\n};\n\nexport default connect(mapStateToProps)(MarketStats);\n","import { getRelayer } from \"../../common/relayer\";\nimport {\n\tASSET_SWAPPER_MARKET_ORDERS_OPTS,\n\tCHAIN_ID,\n\tFEE_PERCENTAGE,\n\tFEE_RECIPIENT,\n\tQUOTE_ORDER_EXPIRATION_BUFFER_MS,\n} from \"../../constants\";\nimport { toUnitAmount } from \"../../lib/helper\";\nimport { assetDataUtils } from \"@0x/order-utils\";\nimport { getKnownTokens } from \"../known_tokens\";\nimport { BigNumber, RevertError } from \"@0x/utils\";\nimport { ExtensionContractType, OrderPrunerPermittedFeeTypes } from \"./types\";\nimport { isBridgeAssetData } from \"./orders\";\nimport { SwapQuoteConsumer, SwapQuoter } from \"@0x/asset-swapper\";\nimport { Web3Wrapper } from \"@0x/web3-wrapper\";\n\nexport class SwapService {\n\t_provider;\n\t_swapQuoter;\n\t_swapQuoteConsumer;\n\t_web3Wrapper;\n\tconstructor(orderbook, provider, web3) {\n\t\tthis._provider = provider;\n\t\tconst swapQuoterOpts = {\n\t\t\tchainId: CHAIN_ID,\n\t\t\texpiryBufferMs: QUOTE_ORDER_EXPIRATION_BUFFER_MS,\n\t\t\tpermittedOrderFeeTypes: new Set([\n\t\t\t\tOrderPrunerPermittedFeeTypes.NoFees,\n\t\t\t\t//  OrderPrunerPermittedFeeTypes.MakerDenominatedTakerFee,\n\t\t\t\tOrderPrunerPermittedFeeTypes.TakerDenominatedTakerFee,\n\t\t\t]),\n\t\t};\n\t\tthis._swapQuoter = new SwapQuoter(this._provider, orderbook, swapQuoterOpts);\n\t\tthis._swapQuoteConsumer = new SwapQuoteConsumer(this._provider);\n\t\tthis._web3Wrapper = web3;\n\t}\n\tgetSwapQuoteConsumer() {\n\t\treturn this._swapQuoteConsumer;\n\t}\n\tasync executeSwapQuote(isETHSell, quote) {\n\t\t// TODO: if ETH was specified as the token to sell but we have enought WETH, not use the forwarder\n\t\t// If ETH was specified as the token to sell then we use the Forwarder\n\t\tconst extensionContractType = isETHSell ? ExtensionContractType.Forwarder : ExtensionContractType.None;\n\t\treturn this._swapQuoteConsumer.executeSwapQuoteOrThrowAsync(quote, {\n\t\t\tuseExtensionContract: extensionContractType,\n\t\t\textensionContractOpts: {\n\t\t\t\t// Apply the Fee Recipient for the Forwarder\n\t\t\t\tfeeRecipient: FEE_RECIPIENT,\n\t\t\t\tfeePercentage: Number(FEE_PERCENTAGE),\n\t\t\t},\n\t\t});\n\t}\n\n\tasync getSwapQuoteAsync(params) {\n\t\tlet swapQuote;\n\t\tconst {\n\t\t\tsellAmount,\n\t\t\tbuyAmount,\n\t\t\tbuyTokenAddress,\n\t\t\tsellTokenAddress,\n\t\t\tslippagePercentage,\n\t\t\tgasPrice: providedGasPrice,\n\t\t} = params;\n\n\t\tconst assetSwapperOpts = {\n\t\t\tslippagePercentage,\n\t\t\tgasPrice: providedGasPrice,\n\t\t\t...ASSET_SWAPPER_MARKET_ORDERS_OPTS,\n\t\t};\n\t\tif (sellAmount !== undefined) {\n\t\t\tswapQuote = await this._swapQuoter.getMarketSellSwapQuoteAsync(\n\t\t\t\tbuyTokenAddress,\n\t\t\t\tsellTokenAddress,\n\t\t\t\tsellAmount,\n\t\t\t\tassetSwapperOpts\n\t\t\t);\n\t\t} else if (buyAmount !== undefined) {\n\t\t\tswapQuote = await this._swapQuoter.getMarketBuySwapQuoteAsync(\n\t\t\t\tbuyTokenAddress,\n\t\t\t\tsellTokenAddress,\n\t\t\t\tbuyAmount,\n\t\t\t\tassetSwapperOpts\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Error(\"sellAmount or buyAmount required\");\n\t\t}\n\t\tconst attributedSwapQuote = this._attributeSwapQuoteOrders(swapQuote);\n\t\treturn attributedSwapQuote;\n\t}\n\n\tasync calculateSwapQuoteAsync(params) {\n\t\tlet swapQuote;\n\t\tconst {\n\t\t\tsellAmount,\n\t\t\tbuyAmount,\n\t\t\tbuyTokenAddress,\n\t\t\tsellTokenAddress,\n\t\t\tslippagePercentage,\n\t\t\tgasPrice: providedGasPrice,\n\t\t\tisETHSell,\n\t\t\tfrom,\n\t\t} = params;\n\n\t\tconst assetSwapperOpts = {\n\t\t\tslippagePercentage,\n\t\t\tgasPrice: providedGasPrice,\n\t\t\t...ASSET_SWAPPER_MARKET_ORDERS_OPTS,\n\t\t};\n\t\tif (sellAmount !== undefined) {\n\t\t\tswapQuote = await this._swapQuoter.getMarketSellSwapQuoteAsync(\n\t\t\t\tbuyTokenAddress,\n\t\t\t\tsellTokenAddress,\n\t\t\t\tsellAmount,\n\t\t\t\tassetSwapperOpts\n\t\t\t);\n\t\t} else if (buyAmount !== undefined) {\n\t\t\tswapQuote = await this._swapQuoter.getMarketBuySwapQuoteAsync(\n\t\t\t\tbuyTokenAddress,\n\t\t\t\tsellTokenAddress,\n\t\t\t\tbuyAmount,\n\t\t\t\tassetSwapperOpts\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Error(\"sellAmount or buyAmount required\");\n\t\t}\n\t\tconst attributedSwapQuote = this._attributeSwapQuoteOrders(swapQuote);\n\t\tconst {\n\t\t\tmakerAssetAmount,\n\t\t\ttotalTakerAssetAmount,\n\t\t\tprotocolFeeInWeiAmount: protocolFee,\n\t\t} = attributedSwapQuote.bestCaseQuoteInfo;\n\t\tconst { orders, gasPrice } = attributedSwapQuote;\n\n\t\t// If ETH was specified as the token to sell then we use the Forwarder\n\t\tconst extensionContractType = isETHSell ? ExtensionContractType.Forwarder : ExtensionContractType.None;\n\t\tconst {\n\t\t\tcalldataHexString: data,\n\t\t\tethAmount: value,\n\t\t\ttoAddress: to,\n\t\t} = await this._swapQuoteConsumer.getCalldataOrThrowAsync(attributedSwapQuote, {\n\t\t\tuseExtensionContract: extensionContractType,\n\t\t\textensionContractOpts: {\n\t\t\t\t// Apply the Fee Recipient for the Forwarder\n\t\t\t\tfeeRecipient: FEE_RECIPIENT,\n\t\t\t\tfeePercentage: FEE_PERCENTAGE,\n\t\t\t},\n\t\t});\n\n\t\tlet gas;\n\t\tif (from) {\n\t\t\tgas = await this._estimateGasOrThrowRevertErrorAsync({\n\t\t\t\tto,\n\t\t\t\tdata,\n\t\t\t\tfrom,\n\t\t\t\tvalue,\n\t\t\t\tgasPrice,\n\t\t\t});\n\t\t}\n\n\t\tconst buyTokenDecimals = await this._fetchTokenDecimalsIfRequiredAsync(buyTokenAddress);\n\t\tconst sellTokenDecimals = await this._fetchTokenDecimalsIfRequiredAsync(sellTokenAddress);\n\t\tconst unitMakerAssetAmount = toUnitAmount(makerAssetAmount, buyTokenDecimals);\n\t\tconst unitTakerAssetAMount = toUnitAmount(totalTakerAssetAmount, sellTokenDecimals);\n\t\tconst price =\n\t\t\tbuyAmount === undefined\n\t\t\t\t? unitMakerAssetAmount.dividedBy(unitTakerAssetAMount).decimalPlaces(sellTokenDecimals)\n\t\t\t\t: unitTakerAssetAMount.dividedBy(unitMakerAssetAmount).decimalPlaces(buyTokenDecimals);\n\n\t\tconst apiSwapQuote = {\n\t\t\tprice,\n\t\t\tto,\n\t\t\tdata,\n\t\t\tvalue,\n\t\t\tgas,\n\t\t\tfrom,\n\t\t\tgasPrice,\n\t\t\tprotocolFee,\n\t\t\tbuyAmount: makerAssetAmount,\n\t\t\tsellAmount: totalTakerAssetAmount,\n\t\t\torders: this._cleanSignedOrderFields(orders),\n\t\t};\n\t\treturn apiSwapQuote;\n\t}\n\n\tasync _estimateGasOrThrowRevertErrorAsync(txData) {\n\t\t// Perform this concurrently\n\t\t// if the call fails the gas estimation will also fail, we can throw a more helpful\n\t\t// error message than gas estimation failure\n\t\tconst estimateGasPromise = this._web3Wrapper.estimateGasAsync(txData);\n\t\tconst callResult = await this._web3Wrapper.callAsync(txData);\n\t\tthrowIfRevertError(callResult);\n\t\tconst gas = await estimateGasPromise;\n\t\treturn new BigNumber(gas);\n\t}\n\n\t// tslint:disable-next-line:prefer-function-over-method\n\t_attributeSwapQuoteOrders(swapQuote) {\n\t\t// Where possible, attribute any fills of these orders to the Fee Recipient Address\n\t\tconst attributedOrders = swapQuote.orders.map((o) => {\n\t\t\ttry {\n\t\t\t\tconst decodedAssetData = assetDataUtils.decodeAssetDataOrThrow(o.makerAssetData);\n\t\t\t\tif (isBridgeAssetData(decodedAssetData)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...o,\n\t\t\t\t\t\tfeeRecipientAddress: FEE_RECIPIENT,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// tslint:disable-next-line:no-empty\n\t\t\t} catch (err) {}\n\t\t\t// Default to unmodified order\n\t\t\treturn o;\n\t\t});\n\t\tconst attributedSwapQuote = {\n\t\t\t...swapQuote,\n\t\t\torders: attributedOrders,\n\t\t};\n\t\treturn attributedSwapQuote;\n\t}\n\n\t// tslint:disable-next-line:prefer-function-over-method\n\t_cleanSignedOrderFields(orders) {\n\t\treturn orders.map((o) => ({\n\t\t\tchainId: o.chainId,\n\t\t\texchangeAddress: o.exchangeAddress,\n\t\t\tmakerAddress: o.makerAddress,\n\t\t\ttakerAddress: o.takerAddress,\n\t\t\tfeeRecipientAddress: o.feeRecipientAddress,\n\t\t\tsenderAddress: o.senderAddress,\n\t\t\tmakerAssetAmount: o.makerAssetAmount,\n\t\t\ttakerAssetAmount: o.takerAssetAmount,\n\t\t\tmakerFee: o.makerFee,\n\t\t\ttakerFee: o.takerFee,\n\t\t\texpirationTimeSeconds: o.expirationTimeSeconds,\n\t\t\tsalt: o.salt,\n\t\t\tmakerAssetData: o.makerAssetData,\n\t\t\ttakerAssetData: o.takerAssetData,\n\t\t\tmakerFeeAssetData: o.makerFeeAssetData,\n\t\t\ttakerFeeAssetData: o.takerFeeAssetData,\n\t\t\tsignature: o.signature,\n\t\t}));\n\t}\n\tasync _fetchTokenDecimalsIfRequiredAsync(tokenAddress) {\n\t\t// HACK(dekz): Our ERC20Wrapper does not have decimals as it is optional\n\t\t// so we must encode this ourselves\n\t\tconst known_tokens = getKnownTokens();\n\t\tlet decimals = 18;\n\t\t// let decimals = findTokenDecimalsIfExists(tokenAddress, CHAIN_ID);\n\t\ttry {\n\t\t\tdecimals = known_tokens.getTokenByAddress(tokenAddress).decimals;\n\t\t} catch (e) {\n\t\t\t//\n\t\t}\n\n\t\treturn decimals;\n\t}\n}\n\nlet swapService;\nexport const getAssetSwapper = async (library, web3) => {\n\tconst relayer = getRelayer();\n\n\tif (!swapService && library) {\n\t\tconst web3Wrapper = new Web3Wrapper(library);\n\t\tswapService = new SwapService(relayer.getOrderbook(), web3Wrapper.getProvider(), web3Wrapper);\n\t}\n\n\treturn swapService;\n};\n\nconst throwIfRevertError = (result) => {\n\tlet revertError;\n\ttry {\n\t\trevertError = RevertError.decode(result, false);\n\t} catch (e) {\n\t\t// No revert error\n\t}\n\tif (revertError) {\n\t\tthrow revertError;\n\t}\n};\n","import { BigNumber } from \"@0x/utils\";\nimport { tokenAmountInUnits } from \"./tokens\";\n\nexport const computeOrderSizeFromInventoryBalance = (amount, inventoryBalance, isBuy) => {\n\tif (isBuy) {\n\t\treturn amount.multipliedBy(2).multipliedBy(inventoryBalance);\n\t} else {\n\t\treturn amount.multipliedBy(2).multipliedBy(new BigNumber(1).minus(inventoryBalance));\n\t}\n};\n\nexport const computePriceFromQuote = (isSell, quote, baseToken, quoteToken) => {\n\tconst bestQuote = quote.bestCaseQuoteInfo;\n\tconst quoteTokenAmount = isSell ? bestQuote.makerAssetAmount : bestQuote.takerAssetAmount;\n\tconst baseTokenAmount = isSell ? bestQuote.takerAssetAmount : bestQuote.makerAssetAmount;\n\tconst quoteTokenAmountUnits = new BigNumber(tokenAmountInUnits(quoteTokenAmount, quoteToken.decimals, 18));\n\tconst baseTokenAmountUnits = new BigNumber(tokenAmountInUnits(baseTokenAmount, baseToken.decimals, 18));\n\tconst price = quoteTokenAmountUnits.div(baseTokenAmountUnits);\n\treturn price;\n};\n\nexport const computeSpreadPercentage = (buyPrice, sellPrice) => {\n\treturn sellPrice.minus(buyPrice).div(sellPrice).multipliedBy(100);\n};\n\nexport const getPricesFromSpread = (buyPrice, sellPrice, newSpreadPercentage) => {\n\tconst newSpreadUnits = newSpreadPercentage.dividedBy(100);\n\t// Increment = (BuyPrice - SellPrice *(1-newSpread))/(2 - newSpread)\n\tconst incrementPrice = buyPrice\n\t\t.minus(sellPrice.multipliedBy(new BigNumber(1).minus(newSpreadUnits)))\n\t\t.dividedBy(new BigNumber(2).minus(newSpreadUnits));\n\tconst newBuyPrice = buyPrice.minus(incrementPrice);\n\tconst newSellPrice = sellPrice.plus(incrementPrice);\n\treturn [newBuyPrice, newSellPrice];\n};\n","/**\n * Represents varying order takerFee types that can be pruned for by OrderPruner.\n */\nexport const OrderPrunerPermittedFeeTypes = {\n\tNoFees: \"NO_FEES\",\n\tMakerDenominatedTakerFee: \"MAKER_DENOMINATED_TAKER_FEE\",\n\tTakerDenominatedTakerFee: \"TAKER_DENOMINATED_TAKER_FEE\",\n};\n\n/**\n * Represents the varying smart contracts that can consume a valid swap quote\n */\nexport const ExtensionContractType = {\n\tForwarder: \"FORWARDER\",\n\tNone: \"NONE\",\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { RowBetween } from \"../Row\";\nimport { Input as NumericalInput } from \"../NumericalInput\";\nimport { tokenAmountInUnits, unitsInTokenAmount } from \"../../utils/spot/tokens\";\nimport { ZERO } from \"../../constants\";\nimport { ETHER, Token } from \"@uniswap/sdk\";\nimport { useCurrencyBalance } from \"../../state/wallet/hooks\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { toAbsoluteUrl } from \"../../lib/helper\";\n\nconst InputRow = styled.div`\n\t${({ theme }) => theme.flexRowNoWrap};\n\talign-items: center;\n\n\tpadding: 1rem 0 0;\n\n\t@media (min-width: 768px) {\n\t\tpadding-top: 0.75rem;\n\t}\n`;\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 40px;\n`;\n\nconst Label = styled.span`\n\tcolor: ${({ theme }) => theme.text1};\n\tfont-weight: 400;\n\tfont-size: 0.875rem;\n\tpadding: 0;\n\n\t@media (min-width: 768px) {\n\t\tpadding: 0 1rem;\n\t}\n\n\t@media (max-width: 1400px) {\n\t\tfont-weight: 400;\n\t}\n`;\n\nconst InputContainer = styled.div`\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\tflex-wrap: nowrap;\n\tflex: 1;\n`;\n\nconst LabelRow = styled.div`\n\t${({ theme }) => theme.flexRowNoWrap};\n\talign-items: center;\n\tcolor: ${({ theme }) => theme.text1};\n\tfont-size: 0.75rem;\n\tline-height: 1rem;\n\tpadding: 0;\n`;\n\nconst Aligner = styled.span`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nconst InputPanel = styled.div`\n\t${({ theme }) => theme.flexColumnNoWrap};\n\tposition: relative;\n\tborder-radius: 0.42rem;\n`;\n\nconst StyledTokenName = styled.span`\n\tmargin-right: auto;\n\tfont-size: 1rem;\n\tfont-weight: 500;\n\n\t@media (max-width: 1400px) {\n\t\tfont-size: 0.875rem;\n\t}\n`;\n\nconst Logo = styled.img`\n\twidth: 34px;\n\theight: 34px;\n\tmin-width: 34px;\n\tborder-radius: 200px;\n\tborder: 2px solid ${({ theme }) => theme.text1};\n\tmargin-right: 15px;\n\n\t@media (max-width: 1400px) {\n\t\twidth: 24px;\n\t\theight: 24px;\n\t\tmargin-right: 12px;\n\t\tmin-width: 24px;\n\t}\n`;\n\nconst CurrencySelect = styled.button`\n\tdisplay: flex;\n\talign-items: center;\n\theight: 56px;\n\tfont-size: 0.875rem;\n\tfont-weight: 500;\n\tbackground-color: ${({ theme }) => theme.bg3};\n\tcolor: ${({ theme }) => theme.text1};\n\tborder-bottom-left-radius: 18px;\n\tborder-top-left-radius: 18px;\n\tbox-shadow: none;\n\toutline: none;\n\tcursor: pointer;\n\tuser-select: none;\n\tborder: none;\n\tpadding: 0.875rem 0.625rem;\n\tmin-width: 116px;\n\twidth: 116px;\n\n\t@media (min-width: 768px) {\n\t\tmin-width: 178px;\n\t\twidth: 178px;\n\t\tpadding: 0.625rem 1rem;\n\t\tfont-size: 1rem;\n\t\tfont-weight: 700;\n\t}\n\n\t:focus,\n\t:hover {\n\t\tbackground-color: ${({ theme }) => theme.bg1};\n\t\toutline: none;\n\t}\n`;\n\nlet BalanceRow = styled.div`\n\t${({ theme }) => theme.flexRowNoWrap};\n\talign-items: center;\n\tmargin-top: 10px;\n\tcolor: ${({ theme }) => theme.text1};\n\tfont-size: 0.75rem;\n\tfont-weight: 400;\n\tline-height: 1rem;\n\tpadding: 0 1rem;\n`;\n\nexport default function MarketMakerInputPanel({\n\tvalue,\n\tonUserInput,\n\tlabel = \"Input\",\n\tdisable = false,\n\tselected,\n\thideInput = false,\n\tid,\n\tdecimals,\n\tvalueFixedDecimals,\n\tmin = ZERO,\n\tshowBalance = true,\n\tbalanceText,\n}) {\n\tconst [valueStr, setValueStr] = useState(value ? tokenAmountInUnits(value, decimals, valueFixedDecimals) : \"\");\n\n\tconst _updateValue = (value) => {\n\t\tconst newValue = unitsInTokenAmount(value || \"0\", decimals);\n\t\tconst invalidValue = min && newValue.isLessThan(min);\n\t\tif (invalidValue) {\n\t\t\treturn;\n\t\t}\n\n\t\tonUserInput(newValue);\n\t\tsetValueStr(value);\n\t};\n\n\tuseEffect(() => {\n\t\tsetValueStr(value ? tokenAmountInUnits(value, decimals, valueFixedDecimals) : \"\");\n\t}, [value]);\n\n\treturn (\n\t\t<InputPanel id={id}>\n\t\t\t<Container>\n\t\t\t\t{!hideInput && (\n\t\t\t\t\t<LabelRow>\n\t\t\t\t\t\t<RowBetween>\n\t\t\t\t\t\t\t<Label>{label}</Label>\n\t\t\t\t\t\t</RowBetween>\n\t\t\t\t\t</LabelRow>\n\t\t\t\t)}\n\t\t\t\t<InputRow style={hideInput ? { padding: \"0\", borderRadius: \"0.42rem\" } : {}} selected={disable}>\n\t\t\t\t\t<CurrencySelect selected={!!selected} className=\"open-currency-select-button\">\n\t\t\t\t\t\t{selected && <Logo src={toAbsoluteUrl(`/${selected.icon}`)} />}\n\t\t\t\t\t\t<Aligner>\n\t\t\t\t\t\t\t<StyledTokenName className=\"token-symbol-container\" active={Boolean(selected)}>\n\t\t\t\t\t\t\t\t{(selected && selected?.symbol?.length > 20\n\t\t\t\t\t\t\t\t\t? selected?.symbol?.slice(0, 4) +\n\t\t\t\t\t\t\t\t\t  \"...\" +\n\t\t\t\t\t\t\t\t\t  selected?.symbol\n\t\t\t\t\t\t\t\t\t\t\t?.slice(selected?.symbol?.length - 5, selected?.symbol?.length)\n\t\t\t\t\t\t\t\t\t\t\t.toUpperCase()\n\t\t\t\t\t\t\t\t\t: selected.symbol?.toUpperCase()) || `Select`}\n\t\t\t\t\t\t\t</StyledTokenName>\n\t\t\t\t\t\t</Aligner>\n\t\t\t\t\t</CurrencySelect>\n\n\t\t\t\t\t{!hideInput && (\n\t\t\t\t\t\t<InputContainer>\n\t\t\t\t\t\t\t<NumericalInput\n\t\t\t\t\t\t\t\tclassName=\"token-amount-input pl-3\"\n\t\t\t\t\t\t\t\tvalue={valueStr}\n\t\t\t\t\t\t\t\tonUserInput={_updateValue}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InputContainer>\n\t\t\t\t\t)}\n\t\t\t\t</InputRow>\n\t\t\t\t{selected && showBalance && <BalanceRow>{balanceText ? balanceText() : null}</BalanceRow>}\n\t\t\t</Container>\n\t\t</InputPanel>\n\t);\n}\n","import { connect } from \"react-redux\";\nimport { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { BigNumber } from \"@0x/utils\";\nimport { Button } from \"react-bootstrap\";\n\nimport { getQuoteInUsd, getTokensPrice } from \"../../../../state/selectors\";\nimport { fetchTakerAndMakerFee } from \"../../../../state/relayer/actions\";\nimport withWeb3Account from \"../../../../components/hoc/withWeb3Account\";\nimport { ServerState as SwapQuoteState, ZERO } from \"../../../../constants\";\nimport { computeOrderSizeFromInventoryBalance, computePriceFromQuote } from \"../../../../utils/spot/marketMaker\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { formatTokenSymbol, tokenAmountInUnits } from \"../../../../utils/spot/tokens\";\n\nconst Title = styled.h3`\n\tmargin-top: 0;\n\tpadding: 0;\n\tmargin-bottom: 2.25rem;\n\tfont-size: 1.25rem;\n\tfont-weight: 700;\n\tcolor: ${({ theme }) => theme.text1};\n`;\n\nconst Header = styled.div`\n\tmargin-bottom: 20px;\n`;\n\nconst HeaderTitle = styled(Title)`\n\tmargin-bottom: 0;\n`;\nconst Price = styled(Title)`\n\tmargin-bottom: 0;\n\topacity: 0.5;\n\tcursor: pointer;\n`;\n\nconst Content = styled.div`\n\tborder-radius: 18px;\n\tbackground-color: ${({ theme }) => theme.bg3};\n\tpadding: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n`;\n\nconst InnerContent = styled.div`\n\tdisplay: grid;\n\tgrid-gap: 30px 40px;\n\tgrid-template-columns: 1fr 1fr;\n\tmargin-bottom: 50px;\n\n\t@media (max-width: 1400px) {\n\t\tgrid-template-columns: 1fr;\n\t\tgrid-template-rows: 1fr 1fr;\n\t\tmargin-bottom: 30px;\n\t}\n`;\n\nconst InnerRow = styled.div`\n\tdisplay: grid;\n\tgrid-gap: 30px;\n\tgrid-template-rows: 1fr 1fr 1fr;\n`;\n\nconst Cell = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nconst Label = styled.span`\n\tfont-weight: 400;\n\tfont-size: 16px;\n\tcolor: ${({ theme }) => theme.text1};\n`;\n\nconst Value = styled.span`\n\tfont-weight: 500;\n\tfont-size: 16px;\n\tcolor: ${({ theme }) => theme.text1};\n\topacity: 0.5;\n`;\n\nconst Btn = styled(Button)`\n\theight: 56px;\n\tpadding: 10px 20px;\n\n\t@media (max-width: 1400px) {\n\t\t&:first-child {\n\t\t\tmargin-bottom: 20px;\n\t\t}\n\t}\n`;\n\nclass MarketMakerDetails extends Component {\n\tstate = {\n\t\tquoteBuyTokenAmount: ZERO,\n\t\tquoteSellTokenAmount: ZERO,\n\t\tbaseBuyTokenAmount: ZERO,\n\t\tbaseSellTokenAmount: ZERO,\n\t\tcanOrderBeFilled: true,\n\t\tmaxAmount: ZERO,\n\t\tpriceBuy: ZERO,\n\t\tpriceSell: ZERO,\n\t\tgeckoPrice: ZERO,\n\t};\n\n\trender() {\n\t\tconst costBuy = this._getCostStringForRender(false);\n\t\tconst costSell = this._getCostStringForRender(true);\n\t\tconst costBuyText = this._getCostLabelStringForRender(false);\n\t\tconst costSellText = this._getCostLabelStringForRender(true);\n\t\tconst costBaseBuy = this._getBaseCostStringForRender(false);\n\t\tconst costBaseSell = this._getBaseCostStringForRender(true);\n\t\tconst costBaseBuyText = this._getBaseCostLabelStringForRender(false);\n\t\tconst costBaseSellText = this._getBaseCostLabelStringForRender(true);\n\t\tconst priceBuyMedianText = this._getMedianPriceStringForRender(false);\n\t\tconst priceSellMedianText = this._getMedianPriceStringForRender(true);\n\t\tconst priceMarketTrackerText = this._getPriceMarketRender();\n\n\t\treturn (\n\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t<Header className=\"d-flex align-items-center justify-content-between\">\n\t\t\t\t\t<HeaderTitle>Price by Coingecko:</HeaderTitle>\n\t\t\t\t\t<Price onClick={this._onTrackerPriceClick}>{priceMarketTrackerText}</Price>\n\t\t\t\t</Header>\n\t\t\t\t<Content>\n\t\t\t\t\t<InnerContent>\n\t\t\t\t\t\t<InnerRow>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<Label>Best Bid:</Label>\n\t\t\t\t\t\t\t\t<Value>{priceSellMedianText}</Value>\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<Label>{costBuyText}</Label>\n\t\t\t\t\t\t\t\t<Value>{costSell}</Value>\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<Label>{costBaseBuyText}</Label>\n\t\t\t\t\t\t\t\t<Value>{costBaseSell}</Value>\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t</InnerRow>\n\t\t\t\t\t\t<InnerRow>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<Label>Best Ask:</Label>\n\t\t\t\t\t\t\t\t<Value>{priceBuyMedianText}</Value>\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<Label>{costSellText}</Label>\n\t\t\t\t\t\t\t\t<Value>{costBuy}</Value>\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<Label>{costBaseSellText}</Label>\n\t\t\t\t\t\t\t\t<Value>{costBaseBuy}</Value>\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t</InnerRow>\n\t\t\t\t\t</InnerContent>\n\n\t\t\t\t\t<div className=\"d-flex flex-column flex-xl-row align-items-xl-center align-items-stretch justify-content-between\">\n\t\t\t\t\t\t<Btn variant={\"primary\"} disabled={this.props.buyDisabled} onClick={this.props.onBuy}>\n\t\t\t\t\t\t\tPlace Buy Limit Order\n\t\t\t\t\t\t</Btn>\n\t\t\t\t\t\t<Btn disabled={this.props.sellDisabled} variant={\"secondary-light\"} onClick={this.props.onSell}>\n\t\t\t\t\t\t\tPlace Sell Limit Order\n\t\t\t\t\t\t</Btn>\n\t\t\t\t\t</div>\n\t\t\t\t</Content>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidUpdate = async (prevProps) => {\n\t\tconst newProps = this.props;\n\t\tif (\n\t\t\tnewProps.tokenAmount !== prevProps.tokenAmount ||\n\t\t\tnewProps.sellQuote !== prevProps.sellQuote ||\n\t\t\tnewProps.buyQuote !== prevProps.buyQuote ||\n\t\t\tnewProps.quoteState !== prevProps.quoteState ||\n\t\t\tnewProps.inventoryBalance !== prevProps.inventoryBalance\n\t\t) {\n\t\t\tif (newProps.quoteState === SwapQuoteState.Done) {\n\t\t\t\tawait this._updateOrderDetailsState();\n\t\t\t}\n\t\t}\n\t};\n\n\tcomponentDidMount = async () => {\n\t\tawait this._updateOrderDetailsState();\n\t};\n\n\t_updateOrderDetailsState = async () => {\n\t\tconst { sellQuote, buyQuote, baseToken, quoteToken, tokenPrices, inventoryBalance } = this.props;\n\t\tconst inventoryBalanceBN = new BigNumber(inventoryBalance).dividedBy(100);\n\n\t\tif (!buyQuote || !sellQuote) {\n\t\t\tthis.setState({ canOrderBeFilled: false });\n\t\t\treturn;\n\t\t}\n\t\tconst bestBuyQuote = buyQuote.bestCaseQuoteInfo;\n\t\tconst priceBuy = computePriceFromQuote(false, buyQuote, baseToken, quoteToken);\n\t\tconst quoteBuyTokenAmount = computeOrderSizeFromInventoryBalance(\n\t\t\tbestBuyQuote.takerAssetAmount,\n\t\t\tinventoryBalanceBN,\n\t\t\ttrue\n\t\t);\n\t\tconst baseBuyTokenAmount = computeOrderSizeFromInventoryBalance(\n\t\t\tbestBuyQuote.makerAssetAmount,\n\t\t\tinventoryBalanceBN,\n\t\t\ttrue\n\t\t);\n\n\t\tconst priceSell = computePriceFromQuote(true, sellQuote, baseToken, quoteToken);\n\t\tconst bestSellQuote = sellQuote.bestCaseQuoteInfo;\n\t\tconst quoteSellTokenAmount = computeOrderSizeFromInventoryBalance(\n\t\t\tbestSellQuote.makerAssetAmount,\n\t\t\tinventoryBalanceBN,\n\t\t\tfalse\n\t\t);\n\t\tconst baseSellTokenAmount = computeOrderSizeFromInventoryBalance(\n\t\t\tbestSellQuote.takerAssetAmount,\n\t\t\tinventoryBalanceBN,\n\t\t\tfalse\n\t\t);\n\n\t\tlet geckoPrice;\n\t\tif (tokenPrices) {\n\t\t\tconst tokenPriceQuote = tokenPrices.find((t) => t.c_id === quoteToken.c_id);\n\t\t\tconst tokenPriceBase = tokenPrices.find((t) => t.c_id === baseToken.c_id);\n\t\t\tif (tokenPriceQuote && tokenPriceBase) {\n\t\t\t\tgeckoPrice = tokenPriceBase.price_usd.div(tokenPriceQuote.price_usd);\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tquoteBuyTokenAmount,\n\t\t\tquoteSellTokenAmount,\n\t\t\tbaseBuyTokenAmount,\n\t\t\tbaseSellTokenAmount,\n\t\t\tcanOrderBeFilled: true,\n\t\t\tpriceBuy,\n\t\t\tpriceSell,\n\t\t\tgeckoPrice,\n\t\t});\n\t};\n\n\t_getCostStringForRender = (isSell) => {\n\t\tconst { canOrderBeFilled } = this.state;\n\t\tconst { quoteToken, quoteState, tokenPrices } = this.props;\n\t\tif (quoteState === SwapQuoteState.Loading) {\n\t\t\treturn <Skeleton width={120} />;\n\t\t}\n\n\t\tif (!canOrderBeFilled || quoteState === SwapQuoteState.Error) {\n\t\t\treturn `---`;\n\t\t}\n\t\tlet quoteInUSD;\n\t\tif (tokenPrices) {\n\t\t\tconst tokenPrice = tokenPrices.find((t) => t.c_id === quoteToken.c_id);\n\t\t\tif (tokenPrice) {\n\t\t\t\tquoteInUSD = tokenPrice.price_usd;\n\t\t\t}\n\t\t}\n\n\t\tconst { quoteBuyTokenAmount, quoteSellTokenAmount } = this.state;\n\t\tif (isSell) {\n\t\t\tconst quoteSellTokenAmountUnits = tokenAmountInUnits(quoteSellTokenAmount, quoteToken.decimals);\n\t\t\tconst costSellAmount = tokenAmountInUnits(\n\t\t\t\tquoteSellTokenAmount,\n\t\t\t\tquoteToken.decimals,\n\t\t\t\tquoteToken.displayDecimals\n\t\t\t);\n\t\t\tif (quoteInUSD) {\n\t\t\t\tconst quotePriceAmountUSD = new BigNumber(quoteSellTokenAmountUnits).multipliedBy(quoteInUSD);\n\t\t\t\treturn `${costSellAmount} ${formatTokenSymbol(quoteToken.symbol)} (${quotePriceAmountUSD.toFixed(\n\t\t\t\t\t2\n\t\t\t\t)} $)`;\n\t\t\t} else {\n\t\t\t\treturn `${costSellAmount} ${formatTokenSymbol(quoteToken.symbol)}`;\n\t\t\t}\n\t\t} else {\n\t\t\tconst quoteBuyTokenAmountUnits = tokenAmountInUnits(quoteBuyTokenAmount, quoteToken.decimals);\n\t\t\tconst costBuyAmount = tokenAmountInUnits(\n\t\t\t\tquoteBuyTokenAmount,\n\t\t\t\tquoteToken.decimals,\n\t\t\t\tquoteToken.displayDecimals\n\t\t\t);\n\t\t\tif (quoteInUSD) {\n\t\t\t\tconst quotePriceAmountUSD = new BigNumber(quoteBuyTokenAmountUnits).multipliedBy(quoteInUSD);\n\t\t\t\treturn `${costBuyAmount} ${formatTokenSymbol(quoteToken.symbol)} (${quotePriceAmountUSD.toFixed(2)} $)`;\n\t\t\t} else {\n\t\t\t\treturn `${costBuyAmount} ${formatTokenSymbol(quoteToken.symbol)}`;\n\t\t\t}\n\t\t}\n\t};\n\n\t_getBaseCostStringForRender = (isSell) => {\n\t\tconst { canOrderBeFilled } = this.state;\n\t\tconst { baseToken, quoteState, tokenPrices } = this.props;\n\t\tif (quoteState === SwapQuoteState.Loading) {\n\t\t\treturn <Skeleton width={120} />;\n\t\t}\n\n\t\tif (!canOrderBeFilled || quoteState === SwapQuoteState.Error) {\n\t\t\treturn `---`;\n\t\t}\n\t\tlet quoteInUSD;\n\t\tif (tokenPrices) {\n\t\t\tconst tokenPrice = tokenPrices.find((t) => t.c_id === baseToken.c_id);\n\t\t\tif (tokenPrice) {\n\t\t\t\tquoteInUSD = tokenPrice.price_usd;\n\t\t\t}\n\t\t}\n\n\t\tconst { baseBuyTokenAmount, baseSellTokenAmount } = this.state;\n\t\tif (isSell) {\n\t\t\tconst quoteSellTokenAmountUnits = tokenAmountInUnits(baseSellTokenAmount, baseToken.decimals);\n\t\t\tconst costSellAmount = tokenAmountInUnits(\n\t\t\t\tbaseSellTokenAmount,\n\t\t\t\tbaseToken.decimals,\n\t\t\t\tbaseToken.displayDecimals\n\t\t\t);\n\t\t\tif (quoteInUSD) {\n\t\t\t\tconst quotePriceAmountUSD = new BigNumber(quoteSellTokenAmountUnits).multipliedBy(quoteInUSD);\n\t\t\t\treturn `${costSellAmount} ${formatTokenSymbol(baseToken.symbol)} (${quotePriceAmountUSD.toFixed(2)} $)`;\n\t\t\t} else {\n\t\t\t\treturn `${costSellAmount} ${formatTokenSymbol(baseToken.symbol)}`;\n\t\t\t}\n\t\t} else {\n\t\t\tconst quoteBuyTokenAmountUnits = tokenAmountInUnits(baseBuyTokenAmount, baseToken.decimals);\n\t\t\tconst costBuyAmount = tokenAmountInUnits(baseBuyTokenAmount, baseToken.decimals, baseToken.displayDecimals);\n\t\t\tif (quoteInUSD) {\n\t\t\t\tconst quotePriceAmountUSD = new BigNumber(quoteBuyTokenAmountUnits).multipliedBy(quoteInUSD);\n\t\t\t\treturn `${costBuyAmount} ${formatTokenSymbol(baseToken.symbol)} (${quotePriceAmountUSD.toFixed(2)} $)`;\n\t\t\t} else {\n\t\t\t\treturn `${costBuyAmount} ${formatTokenSymbol(baseToken.symbol)}`;\n\t\t\t}\n\t\t}\n\t};\n\n\t_getMedianPriceStringForRender = (isSell) => {\n\t\tconst { canOrderBeFilled, priceBuy, priceSell } = this.state;\n\t\tconst price = isSell ? priceSell : priceBuy;\n\t\tconst { tokenAmount, quoteToken, quoteState } = this.props;\n\n\t\tif (quoteState === SwapQuoteState.Loading) {\n\t\t\treturn <Skeleton width={120} />;\n\t\t}\n\t\tif (!canOrderBeFilled || quoteState === SwapQuoteState.Error) {\n\t\t\treturn `---`;\n\t\t}\n\t\tif (tokenAmount.eq(0)) {\n\t\t\treturn `---`;\n\t\t}\n\t\tconst priceDisplay = price.toFormat(8);\n\t\treturn `${priceDisplay} ${formatTokenSymbol(quoteToken.symbol)}`;\n\t};\n\n\t_getCostLabelStringForRender = (isSell) => {\n\t\tconst { qouteInUSD } = this.props;\n\t\tif (qouteInUSD) {\n\t\t\treturn isSell ? \"Quote Sell (USD)\" : \"Quote Buy (USD)\";\n\t\t} else {\n\t\t\treturn isSell ? \"Quote Sell\" : \"Quote Buy\";\n\t\t}\n\t};\n\n\t_getBaseCostLabelStringForRender = (isSell) => {\n\t\tconst { qouteInUSD } = this.props;\n\t\tif (qouteInUSD) {\n\t\t\treturn isSell ? \"Base Sell (USD)\" : \"Base Buy (USD)\";\n\t\t} else {\n\t\t\treturn isSell ? \"Base Sell\" : \"Base Buy\";\n\t\t}\n\t};\n\n\t_getPriceMarketRender = () => {\n\t\tconst { quoteToken, quoteState } = this.props;\n\t\tconst { geckoPrice } = this.state;\n\t\tif (quoteState === SwapQuoteState.Error) {\n\t\t\treturn \"---\";\n\t\t}\n\t\tif (quoteState === SwapQuoteState.Loading) {\n\t\t\treturn <Skeleton width={120} />;\n\t\t}\n\t\tif (geckoPrice && geckoPrice.gt(0)) {\n\t\t\treturn `${geckoPrice.toFormat(8)} ${formatTokenSymbol(quoteToken.symbol)}`;\n\t\t}\n\t\treturn \"---\";\n\t};\n\n\t_onTrackerPriceClick = (e) => {\n\t\tconst { onTrackerPriceClick } = this.props;\n\t\tconst { geckoPrice } = this.state;\n\t\tonTrackerPriceClick(geckoPrice);\n\t};\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tqouteInUSD: getQuoteInUsd(state),\n\t\ttokenPrices: getTokensPrice(state),\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonFetchTakerAndMakerFee: (amount, price, side, account, library) =>\n\t\t\tdispatch(fetchTakerAndMakerFee(amount, price, side, side, account, library)),\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWeb3Account(MarketMakerDetails));\n","import { connect, useDispatch, useSelector } from \"react-redux\";\nimport { BigNumber } from \"@0x/utils\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\n\nimport withBalance from \"../../../../components/hoc/withBalance\";\nimport {\n\tgetBaseToken,\n\tgetCurrencyPair,\n\tgetMinOrderExpireTimeOnBooks,\n\tgetOrderBuyPriceSelected,\n\tgetOrderPriceSelected,\n\tgetOrderSellPriceSelected,\n\tgetQuoteToken,\n} from \"../../../../state/selectors\";\nimport {\n\tsetOrderSecondsExpirationTime,\n\tstartBuySellLimitSteps,\n\tstartMultipleBuySellLimitSteps,\n} from \"../../../../state/spotUI/actions\";\nimport { fetchTakerAndMakerFee, setMinOrderExpireTimeOnBooks } from \"../../../../state/relayer/actions\";\nimport { isWeth, getKnownTokens } from \"../../../../utils/known_tokens\";\nimport {\n\tcomputeOrderSizeFromInventoryBalance,\n\tcomputePriceFromQuote,\n\tcomputeSpreadPercentage,\n\tgetPricesFromSpread,\n} from \"../../../../utils/spot/marketMaker\";\nimport { getExpirationTimeFromSeconds } from \"../../../../utils/spot/timeUtils\";\nimport {\n\tformatTokenSymbol,\n\ttokenAmountInUnits,\n\ttokenAmountInUnitsToBigNumber,\n\tunitsInTokenAmount,\n} from \"../../../../utils/spot/tokens\";\nimport { OrderSide, ServerState as SwapQuoteState, ZERO } from \"../../../../constants\";\nimport { useActiveWeb3React } from \"../../../../hooks\";\nimport { setMarketTokens } from \"../../../../state/spot/actions\";\nimport { getAssetSwapper } from \"../../../../utils/spot/swap\";\nimport { useDebounce } from \"../../../../hooks/debounce\";\nimport { ResponsiveCard } from \"../../../../components/Card\";\nimport MarketMakerInputPanel from \"../../../../components/MarketMakerInputPanel\";\nimport MarketMakerDetails from \"./MarketMakerDetails\";\nimport Web3 from \"web3\";\n\nconst Card = styled(ResponsiveCard)`\n\t& .card-body {\n\t\tpadding: 0;\n\t}\n`;\n\nconst Title = styled.h3`\n\tmargin-top: 0;\n\tpadding: 0;\n\tmargin-bottom: 2.25rem;\n\tfont-size: 1.25rem;\n\tfont-weight: 700;\n\tcolor: ${({ theme }) => theme.text1};\n\n\t@media (max-width: 1400px) {\n\t\tmargin-bottom: 2.125rem;\n\t}\n`;\n\nconst Label = styled(Form.Label)`\n\tfont-weight: 400;\n\tfont-size: 0.875rem;\n\tcolor: ${({ theme }) => theme.text1};\n\topacity: 1;\n\tmargin-bottom: 1rem;\n\tpadding-left: 1.25rem;\n\n\t@media (max-width: 1400px) {\n\t\tpadding-left: 0;\n\t}\n`;\n\nconst Control = styled(Form.Control)`\n\tfont-weight: 500;\n\tfont-size: 1rem;\n\tcolor: ${({ theme }) => theme.text1};\n\theight: 56px;\n\tpadding: 1rem 1.25rem;\n\tbackground-color: ${({ theme }) => theme.bg1};\n\n\t&:focus,\n\t&:hover,\n\t&:active {\n\t\tbackground-color: ${({ theme }) => theme.bg1};\n\t\tcolor: ${({ theme }) => theme.text1};\n\t}\n\n\t::placeholder {\n\t\tcolor: ${({ theme }) => theme.text2};\n\t\topacity: 0.5;\n\t}\n`;\n\nconst FormGroup = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 40px;\n`;\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst TopContainer = styled(Container)`\n\tpadding: 40px;\n\tborder-bottom: 1px solid ${({ theme }) => theme.text3};\n\n\t@media (max-width: 1400px) {\n\t\tpadding: 30px;\n\t}\n`;\n\nconst BottomContainer = styled(Container)`\n\tpadding: 30px 20px 20px;\n\n\t@media (max-width: 1400px) {\n\t\tpadding: 30px;\n\t}\n`;\n\nconst useQuery = () => {\n\treturn new URLSearchParams(useLocation().search);\n};\n\nconst TIMEOUT_BTN_ERROR = 2000;\nconst TIMEOUT_CARD_ERROR = 4000;\n\nconst web3 = new Web3(Web3.givenProvider || Web3.providers.HttpProvider(process.env.REACT_APP_NETWORK_URL));\n\nconst MakerContainer = (props) => {\n\tconst { account } = useActiveWeb3React();\n\tconst [marketQuoteState, setMarketQuoteState] = useState(SwapQuoteState.NotLoaded);\n\tconst [buyQuote, setBuyQuote] = useState();\n\tconst [sellQuote, setSellQuote] = useState();\n\tconst [buyPrice, setBuyPrice] = useState();\n\tconst [sellPrice, setSellPrice] = useState();\n\tconst [selectedSpread, setSelectedSpread] = useState(0);\n\tconst [orderExpireTime, setOrderExpireTime] = useState(300);\n\tconst [selectedInventoryBalance, setSelectedInventoryBalance] = useState(50);\n\tconst [errorState, setErrorState] = useState({\n\t\tbtnMsg: null,\n\t\tcardMsg: null,\n\t});\n\tconst [makerAmountState, setMakerAmountState] = useState(new BigNumber(0));\n\tconst { web3State, quoteTokenBalance, baseTokenBalance, totalEthBalance } = props;\n\n\tconst known_tokens = getKnownTokens();\n\n\tconst selectedBuyPrice = useSelector(getOrderBuyPriceSelected);\n\tconst selectedSellPrice = useSelector(getOrderSellPriceSelected);\n\tconst quoteToken = useSelector(getQuoteToken);\n\tconst baseToken = useSelector(getBaseToken);\n\tconst minOrderExpirationTimeOnOrderBook = useSelector(getMinOrderExpireTimeOnBooks);\n\n\tconst [minOrderExpireTime, setMinOrderExpireTime] = useState(minOrderExpirationTimeOnOrderBook);\n\n\tconst dispatch = useDispatch();\n\tconst query = useQuery();\n\tconst queryToken = query.get(\"baseToken\");\n\tconst decimals = baseToken.decimals;\n\n\tuseEffect(() => {\n\t\tconst fetchToken = async () => {\n\t\t\tif (!queryToken) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tqueryToken.toLowerCase() === baseToken.symbol.toLowerCase() ||\n\t\t\t\tqueryToken.toLowerCase() === baseToken.address.toLowerCase()\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst t = await known_tokens.findTokenOrFetchIt(queryToken);\n\t\t\tif (t) {\n\t\t\t\tif (t === baseToken) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(setMarketTokens({ baseToken: t, quoteToken }));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t// tslint:disable-next-line:no-floating-promises\n\t\tfetchToken();\n\t}, [queryToken, baseToken]);\n\n\tconst isWethQuote = quoteTokenBalance && isWeth(quoteTokenBalance.token.symbol);\n\tconst isWethBase = baseTokenBalance && isWeth(baseTokenBalance.token.symbol);\n\n\tconst quoteUnits = isWethQuote\n\t\t? tokenAmountInUnitsToBigNumber(totalEthBalance || ZERO, 18)\n\t\t: tokenAmountInUnitsToBigNumber(\n\t\t\t\t(quoteTokenBalance && quoteTokenBalance.balance) || ZERO,\n\t\t\t\t(quoteToken && quoteToken.decimals) || 18\n\t\t  );\n\n\tconst baseBalance = isWethBase ? totalEthBalance : (baseTokenBalance && baseTokenBalance.balance) || ZERO;\n\tconst stepAmount = new BigNumber(1).div(new BigNumber(10).pow(8));\n\tconst stepAmountUnits = unitsInTokenAmount(String(stepAmount), decimals);\n\tconst amount = makerAmountState;\n\tconst isMakerAmountEmpty = amount === null || amount.isZero();\n\tconst isMaxAmount = false;\n\n\tconst isBuyOrderTypeLimitOverflow = computeOrderSizeFromInventoryBalance(\n\t\ttokenAmountInUnitsToBigNumber(makerAmountState, (baseToken && baseToken.decimals) || 18).multipliedBy(\n\t\t\tbuyPrice || ZERO\n\t\t),\n\t\tnew BigNumber(selectedInventoryBalance).dividedBy(100),\n\t\tfalse\n\t).gt(quoteUnits);\n\tconst isSellOrderTypeLimitOverflow = computeOrderSizeFromInventoryBalance(\n\t\tmakerAmountState,\n\t\tnew BigNumber(selectedInventoryBalance).dividedBy(100),\n\t\ttrue\n\t).gt(baseBalance);\n\n\tconst isOrderTypeMarketIsEmpty = isMakerAmountEmpty || isMaxAmount;\n\n\tconst _reset = () => {\n\t\t// setMakerAmountState(new BigNumber(0));\n\t\t// setPriceState(new BigNumber(0));\n\t\tprops.onSetOrderSecondsExpirationTime(null);\n\t};\n\n\t// When clicked on orderbook update prices\n\tuseEffect(() => {\n\t\tif (selectedBuyPrice && selectedBuyPrice.gt(0)) {\n\t\t\tsetBuyPrice(selectedBuyPrice);\n\t\t\tif (sellPrice) {\n\t\t\t\tsetSelectedSpread(computeSpreadPercentage(selectedBuyPrice, sellPrice).toNumber());\n\t\t\t}\n\t\t}\n\t}, [selectedBuyPrice]);\n\n\tuseEffect(() => {\n\t\tif (selectedSellPrice && selectedSellPrice.gt(0)) {\n\t\t\tsetSellPrice(selectedSellPrice);\n\t\t\tif (buyPrice) {\n\t\t\t\tsetSelectedSpread(computeSpreadPercentage(selectedSellPrice, buyPrice).toNumber());\n\t\t\t}\n\t\t}\n\t}, [selectedSellPrice]);\n\n\tconst onCalculateSwapQuote = async (amt) => {\n\t\t// We are fetching the price here\n\t\tconst buyParams = {\n\t\t\tbuyTokenAddress: baseToken.address,\n\t\t\tsellTokenAddress: quoteToken.address,\n\t\t\tbuyAmount: amt,\n\t\t\tsellAmount: undefined,\n\t\t\tfrom: undefined,\n\t\t\tisETHSell: isWeth(quoteToken.symbol),\n\t\t};\n\t\tconst sellParams = {\n\t\t\tbuyTokenAddress: quoteToken.address,\n\t\t\tsellTokenAddress: baseToken.address,\n\t\t\tbuyAmount: undefined,\n\t\t\tsellAmount: amt,\n\t\t\tfrom: undefined,\n\t\t\tisETHSell: isWeth(baseToken.symbol),\n\t\t};\n\n\t\ttry {\n\t\t\tsetMarketQuoteState(SwapQuoteState.Loading);\n\t\t\tconst assetSwapper = await getAssetSwapper(web3.currentProvider, web3);\n\t\t\tconst bQuote = await assetSwapper.getSwapQuoteAsync(buyParams);\n\t\t\tsetBuyQuote(bQuote);\n\t\t\tconst sQuote = await assetSwapper.getSwapQuoteAsync(sellParams);\n\t\t\tsetSellQuote(sQuote);\n\t\t\t// Add default price\n\t\t\tconst sPrice = computePriceFromQuote(false, bQuote, baseToken, quoteToken);\n\t\t\tconst bPrice = computePriceFromQuote(true, sQuote, baseToken, quoteToken);\n\t\t\tsetBuyPrice(bPrice);\n\t\t\tsetSellPrice(sPrice);\n\t\t\tsetSelectedSpread(computeSpreadPercentage(bPrice, sPrice).toNumber());\n\t\t\tsetMarketQuoteState(SwapQuoteState.Done);\n\t\t} catch (e) {\n\t\t\tsetMarketQuoteState(SwapQuoteState.Error);\n\t\t}\n\t};\n\n\tconst debouncedAmount = useDebounce(makerAmountState, 0);\n\tuseEffect(() => {\n\t\tif (marketQuoteState === SwapQuoteState.Error) {\n\t\t\tsetErrorState({\n\t\t\t\tcardMsg: \"Error fetching quote\",\n\t\t\t\tbtnMsg: \"Try again\",\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetErrorState({\n\t\t\t\t\t...errorState,\n\t\t\t\t\tbtnMsg: null,\n\t\t\t\t});\n\t\t\t}, TIMEOUT_BTN_ERROR);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetErrorState({\n\t\t\t\t\t...errorState,\n\t\t\t\t\tcardMsg: null,\n\t\t\t\t});\n\t\t\t}, TIMEOUT_CARD_ERROR);\n\t\t} else {\n\t\t\tif (errorState.cardMsg !== null) {\n\t\t\t\tsetErrorState({\n\t\t\t\t\tcardMsg: null,\n\t\t\t\t\tbtnMsg: null,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [marketQuoteState]);\n\n\tuseEffect(() => {\n\t\tif (debouncedAmount) {\n\t\t\tonCalculateSwapQuote(amount);\n\t\t}\n\t}, [debouncedAmount]);\n\n\tuseEffect(() => {\n\t\tif (makerAmountState.isGreaterThan(0)) {\n\t\t\tonCalculateSwapQuote(amount);\n\t\t}\n\t}, [baseToken]);\n\n\tconst handleSubmitError = (error) => {\n\t\tsetErrorState({\n\t\t\tbtnMsg: \"Error\",\n\t\t\tcardMsg: error.message,\n\t\t});\n\t\tsetTimeout(() => {\n\t\t\tsetErrorState({\n\t\t\t\t...errorState,\n\t\t\t\tbtnMsg: null,\n\t\t\t});\n\t\t}, TIMEOUT_BTN_ERROR);\n\n\t\tsetTimeout(() => {\n\t\t\tsetErrorState({\n\t\t\t\t...errorState,\n\t\t\t\tcardMsg: null,\n\t\t\t});\n\t\t}, TIMEOUT_CARD_ERROR);\n\t};\n\n\tconst onSubmitBuyOrder = async () => {\n\t\tconst { tokensBalance, wethBalance } = props;\n\t\tconst makerAmount = makerAmountState;\n\t\tconst orderSide = OrderSide.Buy;\n\t\tif (!buyPrice) {\n\t\t\treturn;\n\t\t}\n\t\tprops.onSetOrderSecondsExpirationTime(new BigNumber(orderExpireTime));\n\t\tconst orderFeeData = await props.onFetchTakerAndMakerFee(makerAmount, buyPrice, orderSide);\n\t\ttry {\n\t\t\tconst amt = computeOrderSizeFromInventoryBalance(\n\t\t\t\tmakerAmount,\n\t\t\t\tnew BigNumber(selectedInventoryBalance).dividedBy(100),\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tawait props.onSubmitLimitOrder(amt, buyPrice, orderSide, orderFeeData, tokensBalance, wethBalance);\n\t\t} catch (error) {\n\t\t\thandleSubmitError(error);\n\t\t}\n\t\t_reset();\n\t};\n\n\tconst onSubmitSellOrder = async () => {\n\t\tconst { tokensBalance, wethBalance } = props;\n\t\tconst makerAmount = makerAmountState;\n\t\tconst orderSide = OrderSide.Sell;\n\t\tif (!sellPrice) {\n\t\t\treturn;\n\t\t}\n\t\tawait props.onSetOrderSecondsExpirationTime(new BigNumber(orderExpireTime));\n\t\tconst orderFeeData = await props.onFetchTakerAndMakerFee(makerAmount, sellPrice, orderSide);\n\t\ttry {\n\t\t\tconst amt = computeOrderSizeFromInventoryBalance(\n\t\t\t\tmakerAmount,\n\t\t\t\tnew BigNumber(selectedInventoryBalance).dividedBy(100),\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tawait props.onSubmitLimitOrder(amt, sellPrice, orderSide, orderFeeData, tokensBalance, wethBalance);\n\t\t} catch (error) {\n\t\t\thandleSubmitError(error);\n\t\t}\n\t\t_reset();\n\t};\n\n\tconst onUpdateMakerAmount = (newValue) => {\n\t\tsetMakerAmountState(newValue);\n\t};\n\tconst updateQuote = () => {\n\t\tonCalculateSwapQuote(makerAmountState);\n\t};\n\n\tconst getAmountAvailableLabel = (isBase) => {\n\t\tif (isBase) {\n\t\t\tif (baseTokenBalance) {\n\t\t\t\tconst tokenBalanceAmount = isWeth(baseTokenBalance.token.symbol)\n\t\t\t\t\t? totalEthBalance\n\t\t\t\t\t: baseTokenBalance.balance;\n\t\t\t\tconst baseBalanceString = tokenAmountInUnits(\n\t\t\t\t\ttokenBalanceAmount,\n\t\t\t\t\tbaseTokenBalance.token.decimals,\n\t\t\t\t\tbaseTokenBalance.token.displayDecimals\n\t\t\t\t);\n\t\t\t\tconst symbol = formatTokenSymbol(baseTokenBalance.token.symbol);\n\t\t\t\treturn `Balance: ${baseBalanceString}  ${symbol}`;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tif (quoteTokenBalance) {\n\t\t\t\tconst tokenBalanceAmount = isWeth(quoteTokenBalance.token.symbol)\n\t\t\t\t\t? totalEthBalance\n\t\t\t\t\t: quoteTokenBalance.balance;\n\t\t\t\tconst quoteBalanceString = tokenAmountInUnits(\n\t\t\t\t\ttokenBalanceAmount,\n\t\t\t\t\tquoteTokenBalance.token.decimals,\n\t\t\t\t\tquoteTokenBalance.token.displayDecimals\n\t\t\t\t);\n\t\t\t\tconst symbol = formatTokenSymbol(quoteTokenBalance.token.symbol);\n\t\t\t\treturn `Balance: ${quoteBalanceString}  ${symbol}`;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n\n\tconst updateBuyPrice = (price) => {\n\t\tsetBuyPrice(price);\n\t\tif (sellPrice) {\n\t\t\tsetSelectedSpread(computeSpreadPercentage(price, sellPrice).toNumber());\n\t\t}\n\t};\n\tconst updateSellPrice = (price) => {\n\t\tsetSellPrice(price);\n\t\tif (buyPrice) {\n\t\t\tsetSelectedSpread(computeSpreadPercentage(buyPrice, price).toNumber());\n\t\t}\n\t};\n\tconst updateSpread = (e) => {\n\t\tconst newSpread = new BigNumber(e.currentTarget.value);\n\t\tif (buyPrice && sellPrice) {\n\t\t\tconst prices = getPricesFromSpread(buyPrice, sellPrice, newSpread);\n\t\t\tsetBuyPrice(prices[0]);\n\t\t\tsetSellPrice(prices[1]);\n\t\t}\n\n\t\tsetSelectedSpread(newSpread.toNumber());\n\t};\n\tconst updateInventoryBalance = (e) => {\n\t\tsetSelectedInventoryBalance(Number(e.currentTarget.value));\n\t};\n\tconst onOrderExpireTimeChange = (e) => {\n\t\tsetOrderExpireTime(Number(e.currentTarget.value));\n\t};\n\tconst onMinOrderExpireTimeChange = (e) => {\n\t\tconst time = Number(e.currentTarget.value);\n\t\tsetMinOrderExpireTime(time);\n\t\tdispatch(setMinOrderExpireTimeOnBooks(time));\n\t};\n\n\tconst onTrackerPriceClick = (price) => {\n\t\tsetBuyPrice(price);\n\t\tsetSellPrice(price);\n\t\tsetSelectedSpread(0);\n\t};\n\n\tconst isListed = baseToken ? baseToken.listed : true;\n\tconst msg = \"Token inserted by User. Please proceed with caution and do your own research!\";\n\n\treturn (\n\t\t<Card>\n\t\t\t<TopContainer>\n\t\t\t\t<Row className={\"custom-row\"}>\n\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t<Title>Your Order</Title>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t<MarketMakerInputPanel\n\t\t\t\t\t\t\tdecimals={decimals}\n\t\t\t\t\t\t\tmin={ZERO}\n\t\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\t\tonUserInput={onUpdateMakerAmount}\n\t\t\t\t\t\t\tselected={baseToken}\n\t\t\t\t\t\t\tvalueFixedDecimals={8}\n\t\t\t\t\t\t\tlabel={`Insert Reference Base Amount`}\n\t\t\t\t\t\t\tshowBalance={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t<MarketMakerInputPanel\n\t\t\t\t\t\t\tdecimals={0}\n\t\t\t\t\t\t\tmin={ZERO}\n\t\t\t\t\t\t\tvalue={buyPrice}\n\t\t\t\t\t\t\tonUserInput={updateBuyPrice}\n\t\t\t\t\t\t\tselected={quoteToken}\n\t\t\t\t\t\t\tvalueFixedDecimals={10}\n\t\t\t\t\t\t\tlabel={`Buy price per Token`}\n\t\t\t\t\t\t\tshowBalance={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t<MarketMakerInputPanel\n\t\t\t\t\t\t\tdecimals={0}\n\t\t\t\t\t\t\tmin={ZERO}\n\t\t\t\t\t\t\tvalue={sellPrice}\n\t\t\t\t\t\t\tonUserInput={updateSellPrice}\n\t\t\t\t\t\t\tselected={quoteToken}\n\t\t\t\t\t\t\tvalueFixedDecimals={10}\n\t\t\t\t\t\t\tlabel={`Sell price per Token`}\n\t\t\t\t\t\t\tshowBalance={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={12} lg={4}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label>Spread (%)</Label>\n\t\t\t\t\t\t\t<Control\n\t\t\t\t\t\t\t\ttype={\"number\"}\n\t\t\t\t\t\t\t\tvalue={selectedSpread}\n\t\t\t\t\t\t\t\tmin={-100}\n\t\t\t\t\t\t\t\tstep={0.0001}\n\t\t\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\t\t\tonChange={updateSpread}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={12} lg={8}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label>Order Ratio between Bid and Ask (%)</Label>\n\t\t\t\t\t\t\t<Control\n\t\t\t\t\t\t\t\ttype={\"number\"}\n\t\t\t\t\t\t\t\tvalue={selectedInventoryBalance}\n\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\t\t\tonChange={updateInventoryBalance}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t<FormGroup style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t\t<Label>Order Expire Time (Seconds): </Label>\n\t\t\t\t\t\t\t<Control\n\t\t\t\t\t\t\t\ttype={\"number\"}\n\t\t\t\t\t\t\t\tvalue={orderExpireTime}\n\t\t\t\t\t\t\t\tmin={20}\n\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\tonChange={onOrderExpireTimeChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</TopContainer>\n\t\t\t<BottomContainer>\n\t\t\t\t<MarketMakerDetails\n\t\t\t\t\ttokenAmount={amount}\n\t\t\t\t\tbaseToken={baseToken}\n\t\t\t\t\tquoteToken={quoteToken}\n\t\t\t\t\tbuyQuote={buyQuote}\n\t\t\t\t\tsellQuote={sellQuote}\n\t\t\t\t\tquoteState={marketQuoteState}\n\t\t\t\t\tinventoryBalance={selectedInventoryBalance}\n\t\t\t\t\tonTrackerPriceClick={onTrackerPriceClick}\n\t\t\t\t\tonBuy={onSubmitBuyOrder}\n\t\t\t\t\tbuyDisabled={isOrderTypeMarketIsEmpty || isBuyOrderTypeLimitOverflow}\n\t\t\t\t\tonSell={onSubmitSellOrder}\n\t\t\t\t\tsellDisabled={isOrderTypeMarketIsEmpty || isSellOrderTypeLimitOverflow}\n\t\t\t\t/>\n\t\t\t</BottomContainer>\n\t\t</Card>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcurrencyPair: getCurrencyPair(state),\n\t\torderPriceSelected: getOrderPriceSelected(state),\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSubmitLimitOrder: (amount, price, side, orderFeeData, tokensBalance, wethBalance) =>\n\t\t\tdispatch(startBuySellLimitSteps(amount, price, side, orderFeeData, tokensBalance, wethBalance)),\n\t\tonSubmitMultipleLimitOrders: (\n\t\t\tamountBuy,\n\t\t\tpriceBuy,\n\t\t\torderBuyFeeData,\n\t\t\tamountSell,\n\t\t\tpriceSell,\n\t\t\torderSellFeeData,\n\t\t\ttokensBalance,\n\t\t\twethBalance\n\t\t) =>\n\t\t\tdispatch(\n\t\t\t\tstartMultipleBuySellLimitSteps(\n\t\t\t\t\tamountBuy,\n\t\t\t\t\tpriceBuy,\n\t\t\t\t\torderBuyFeeData,\n\t\t\t\t\tamountSell,\n\t\t\t\t\tpriceSell,\n\t\t\t\t\torderSellFeeData,\n\t\t\t\t\ttokensBalance,\n\t\t\t\t\twethBalance\n\t\t\t\t)\n\t\t\t),\n\t\tonFetchTakerAndMakerFee: (amount, price, side) => dispatch(fetchTakerAndMakerFee(amount, price, side)),\n\t\tonSetOrderSecondsExpirationTime: (seconds) => dispatch(setOrderSecondsExpirationTime(seconds)),\n\t};\n};\n\nexport default withBalance(connect(mapStateToProps, mapDispatchToProps)(MakerContainer));\n","import { useEffect, useState } from \"react\";\n\n// https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport const useDebounce = (value, delay) => {\n\t// State and setters for debounced value\n\tconst [debouncedValue, setDebouncedValue] = useState(value);\n\n\tuseEffect(\n\t\t() => {\n\t\t\t// Set debouncedValue to value (passed in) after the specified delay\n\t\t\tconst handler = setTimeout(() => {\n\t\t\t\tsetDebouncedValue(value);\n\t\t\t}, delay);\n\n\t\t\t// Return a cleanup function that will be called every time ...\n\t\t\t// ... useEffect is re-called. useEffect will only be re-called ...\n\t\t\t// ... if value changes (see the inputs array below).\n\t\t\t// This is how we prevent debouncedValue from changing if value is ...\n\t\t\t// ... changed within the delay period. Timeout gets cleared and restarted.\n\t\t\t// To put it in context, if the user is typing within our app's ...\n\t\t\t// ... search box, we don't want the debouncedValue to update until ...\n\t\t\t// ... they've stopped typing for more than 500ms.\n\t\t\treturn () => {\n\t\t\t\tclearTimeout(handler);\n\t\t\t};\n\t\t},\n\t\t// Only re-call effect if value changes\n\t\t// You could also add the \"delay\" var to inputs array if you ...\n\t\t// ... need to be able to change that dynamically.\n\t\t[value]\n\t);\n\n\treturn debouncedValue;\n};\n","import styled from \"styled-components\";\n\nimport Page from \"../../components/Page\";\nimport { ResponsiveCard } from \"../../components/Card\";\nimport Orderbook from \"./components/Orderbook\";\nimport Provider from \"./components/Provider\";\nimport MarketFills from \"./components/MarketFills\";\nimport OrderHistory from \"./components/OrderHistory\";\nimport MarketStats from \"./components/MarketStats\";\nimport MakerContainer from \"./components/MakerContainer\";\n\nconst Row = styled.div`\n\tdisplay: flex;\n\tmargin-left: -10px;\n\tmargin-right: -10px;\n\n\t@media (max-width: 1400px) {\n\t\tflex-direction: column;\n\t\tdisplay: ${({ justDesktop }) => (justDesktop ? \"none\" : \"flex\")};\n\t}\n`;\nconst Col = styled.div`\n\tpadding: 0 10px;\n\tflex-direction: column;\n\tdisplay: ${({ justMobile }) => (justMobile ? \"none\" : \"flex\")};\n\n\t@media (max-width: 1400px) {\n\t\tdisplay: ${({ justDesktop }) => (justDesktop ? \"none\" : \"flex\")};\n\t}\n`;\n\nconst ContainerCard = styled(ResponsiveCard)`\n\tdisplay: flex;\n\tmargin-bottom: 20px;\n\t& .card-body {\n\t\tpadding: 30px;\n\t}\n\n\t@media (min-width: 1400px) {\n\t\twidth: 700px;\n\t\theight: 1113px;\n\n\t\t& .card-body {\n\t\t\tpadding: 135px 20px 20px;\n\t\t\tdisplay: flex;\n\t\t\tposition: relative;\n\t\t}\n\t}\n`;\n\nconst MarketMaker = (props) => {\n\treturn (\n\t\t<Page title={\"Market Maker\"} morePadding size={\"lg\"}>\n\t\t\t<Provider>\n\t\t\t\t<Row style={{ marginTop: -30 }}>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<MakerContainer />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col justDesktop>\n\t\t\t\t\t\t<ContainerCard>\n\t\t\t\t\t\t\t<Orderbook />\n\t\t\t\t\t\t\t<MarketFills />\n\t\t\t\t\t\t</ContainerCard>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col justMobile>\n\t\t\t\t\t\t<ContainerCard>\n\t\t\t\t\t\t\t<Orderbook />\n\t\t\t\t\t\t</ContainerCard>\n\t\t\t\t\t\t<ContainerCard>\n\t\t\t\t\t\t\t<MarketFills />\n\t\t\t\t\t\t</ContainerCard>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className={\"justify-content-end\"}>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<OrderHistory />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<MarketStats />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Provider>\n\t\t</Page>\n\t);\n};\n\nexport default MarketMaker;\n"],"sourceRoot":""}