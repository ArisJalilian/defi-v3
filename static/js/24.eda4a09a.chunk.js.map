{"version":3,"sources":["components/Card/index.js","components/Row/index.tsx","components/hoc/withWeb3Account.tsx","components/NumericalInput/index.tsx","hooks/useTokenToBalance.js","components/hoc/withBalance.js","components/BookOption/index.js","components/UI/Dropdown/index.js","assets/images/global/dropdown.svg","utils/spot/numberUtils.js","pages/MarketMaker/components/Orderbook/index.js","pages/MarketMaker/components/Provider/index.js","pages/MarketMaker/components/MarketFills/index.js","pages/MarketMaker/components/OrderHistory/index.js","pages/MarketMaker/components/MarketStats/index.js","utils/spot/swap.js","utils/spot/marketMaker.js","utils/spot/types.js","components/MarketMakerInputPanel/index.js","pages/MarketMaker/components/MakerContainer/MarketMakerDetails.js","pages/MarketMaker/components/MakerContainer/index.js","hooks/debounce.js","pages/MarketMaker/index.js"],"names":["Header","Card","Body","CustomCard","styled","theme","modalBG","text1","margin","marginBottom","marginTop","text4","RCard","CustomHeader","text3","isTable","CustomBody","CustomTitle","h4","ResponsiveCard","props","header","title","children","body","Comp","Row","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","withWeb3Account","Component","context","useActiveWeb3React","toggleWalletModal","useWalletModalToggle","web3","StyledInput","input","error","red1","bg3","size","reverse","noBorder","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","useSpotBalances","account","library","baseToken","useSelector","getBaseToken","quoteToken","getQuoteToken","knownTokens","useMemo","getKnownTokens","tokens","getTokens","wethToken","getWethToken","allBalances","address","useState","balances","setBalances","fetchBalances","a","tokensToTokenBalances","res","useEffect","length","useTokenToBalance","window","ethereum","ethBalance","useETHBalances","wethBalance","find","b","token","symbol","tokensBalance","filter","ethereumBalance","ETH","toExact","bn","BigNumber","currency","undefined","balance","totalEthBalance","total","plus","baseTokenBalance","searchToken","tokenBalances","wethTokenBalance","tokenToFind","quoteTokenBalance","withBalance","Wrapper","active","Cell","variant","BookOption","onClick","isSell","isBuy","Button","button","secondary2","primary","darken","ButtonText","span","DropdownList","isOpen","DropdownItem","Dropdown","items","setActive","open","setOpen","toggleModal","useCallback","changeActiveHandler","item","hasOwnProperty","src","require","default","map","i","bind","padRightSplitted","numBg","decimals","UI_DECIMALS_DISPLAYED_ORDER_SIZE","numBgToFixed","toFixed","numBgToString","toString","decimalPlaces","split","diff","num","isZero","Container","EmptyText","BookOptionType","StyledBookOption","HeaderRow","TitleRow","TableRow","Title","Result","TR","CustomHead","InnerTR","TH","SpreadTitle","TD","TBody","lighten","depthItems","OrderToRow","this","order","index","priceColor","mySizeOrders","currencyPair","basePrecision","config","pricePrecision","tokenAmountInUnits","price","mySize","reduce","sumSize","mySizeItem","eq","ZERO","mySizeConverted","isMySizeEmpty","numSplitted","parseFloat","OrderToRowContainer","connect","dispatch","onSetOrderPriceSelected","orderPriceSelected","setOrderPriceSelected","onSetOrderBuyPriceSelected","setOrderBuyPriceSelected","onSetOrderSellPriceSelected","setOrderSellPriceSelected","onSetMakerAmountSelected","makerAmountSelected","setMakerAmountSelected","Orderbook","state","depth","defaultDepth","bookOption","_spreadRowScrollable","createRef","_spreadRowFixed","_itemsScroll","content","orderBook","absoluteSpread","percentageSpread","totalQuoteBuyOrders","totalBaseSellOrders","serverState","sellOrders","buyOrders","mySizeSellArray","side","OrderSide","Sell","mySizeBuyArray","Buy","getColor","ServerState","NotLoaded","spreadAbsFixed","spreadPercentFixed","UI_DECIMALS_DISPLAYED_SPREAD_PERCENT","totalBase","totalQuote","baseSymbol","formatTokenSymbol","quoteSymbol","bookOptionState","handleBookOption","option","setState","className","Number","slice","count","orders","Loading","height","id","spot","userOrders","relayer","orderBookState","getOrderBook","getSpread","getSpreadInPercentage","getTotalQuoteBuyOrders","getTotalBaseSellOrders","getOrderbookState","Web3","givenProvider","providers","HttpProvider","process","Provider","_deactivatePollingUpdates","_updateStoreInterval","clearInterval","_updatePriceEtherInterval","_updatePriceTokensInterval","_updateERC20MarketsInterval","_activatePollingUpdates","onUpdateERC20Markets","onUpdateMarketPriceTokens","onUpdateMarketPriceEther","onUpdateMarketPriceQuote","onUpdateERC20Store","currentProvider","UI_UPDATE_CHECK_INTERVAL","setInterval","isActiveCheckUpdates","UPDATE_ETHER_PRICE_INTERVAL","UPDATE_TOKENS_PRICE_INTERVAL","UPDATE_ERC20_MARKETS","componentWillUnmount","render","onSubscribeMarketMakerStates","withRouter","updateMarketPriceEther","updateMarketPriceQuote","updateMarketPriceTokens","updateERC20Markets","updateERC20Store","subscribeToRelayerWebsocketFillEvents","TableContainer","marketFills","spotUI","marketFillsState","changeMarket","Object","keys","marketToStringFromTokens","market","tokenQuoteSymbol","isWeth","toUpperCase","tokenBaseSymbol","marketFill","fill","amountBase","USE_RELAYER_MARKET_UPDATES","tokenBase","displayDecimals","displayAmountBase","getCurrencyPairByTokensSymbol","tokenQuote","timestamp","toISOString","fillToRow","CardTitle","Content","InnerContent","ordersToShow","status","OrderStatus","Fillable","sideLabel","filled","getCurrencyPairFromTokens","orderToRow","isMobile","swapService","InnerContainer","Column","Label","Value","fieldsStatsMap","label","field","marketMakerStats","getMarketMakerStats","getCurrencyPair","filteredMarketMakerStats","m","toLowerCase","marketToString","f","computeOrderSizeFromInventoryBalance","amount","inventoryBalance","multipliedBy","minus","computePriceFromQuote","quote","bestQuote","bestCaseQuoteInfo","quoteTokenAmount","makerAssetAmount","takerAssetAmount","baseTokenAmount","quoteTokenAmountUnits","baseTokenAmountUnits","computeSpreadPercentage","buyPrice","sellPrice","OrderPrunerPermittedFeeTypes","ExtensionContractType","SwapService","orderbook","provider","_provider","swapQuoterOpts","chainId","CHAIN_ID","expiryBufferMs","QUOTE_ORDER_EXPIRATION_BUFFER_MS","permittedOrderFeeTypes","Set","_swapQuoter","SwapQuoter","_swapQuoteConsumer","SwapQuoteConsumer","_web3Wrapper","isETHSell","extensionContractType","executeSwapQuoteOrThrowAsync","useExtensionContract","extensionContractOpts","feeRecipient","FEE_RECIPIENT","feePercentage","FEE_PERCENTAGE","params","sellAmount","buyAmount","buyTokenAddress","sellTokenAddress","slippagePercentage","providedGasPrice","gasPrice","assetSwapperOpts","ASSET_SWAPPER_MARKET_ORDERS_OPTS","getMarketSellSwapQuoteAsync","swapQuote","getMarketBuySwapQuoteAsync","Error","attributedSwapQuote","_attributeSwapQuoteOrders","from","totalTakerAssetAmount","protocolFee","protocolFeeInWeiAmount","getCalldataOrThrowAsync","data","calldataHexString","ethAmount","to","toAddress","_estimateGasOrThrowRevertErrorAsync","gas","_fetchTokenDecimalsIfRequiredAsync","buyTokenDecimals","sellTokenDecimals","unitMakerAssetAmount","toUnitAmount","unitTakerAssetAMount","dividedBy","apiSwapQuote","_cleanSignedOrderFields","txData","estimateGasPromise","estimateGasAsync","callAsync","callResult","throwIfRevertError","attributedOrders","o","decodedAssetData","assetDataUtils","decodeAssetDataOrThrow","makerAssetData","isBridgeAssetData","feeRecipientAddress","err","exchangeAddress","makerAddress","takerAddress","senderAddress","makerFee","takerFee","expirationTimeSeconds","salt","takerAssetData","makerFeeAssetData","takerFeeAssetData","signature","tokenAddress","known_tokens","getTokenByAddress","e","getAssetSwapper","getRelayer","web3Wrapper","Web3Wrapper","getOrderbook","getProvider","result","revertError","RevertError","decode","InputRow","flexRowNoWrap","InputContainer","LabelRow","Aligner","InputPanel","flexColumnNoWrap","StyledTokenName","Logo","img","CurrencySelect","bg1","BalanceRow","MarketMakerInputPanel","disable","selected","hideInput","valueFixedDecimals","min","showBalance","balanceText","valueStr","setValueStr","style","toAbsoluteUrl","icon","Boolean","NumericalInput","newValue","unitsInTokenAmount","isLessThan","h3","HeaderTitle","Price","InnerRow","Btn","MarketMakerDetails","quoteBuyTokenAmount","quoteSellTokenAmount","baseBuyTokenAmount","baseSellTokenAmount","canOrderBeFilled","maxAmount","priceBuy","priceSell","geckoPrice","componentDidUpdate","prevProps","newProps","tokenAmount","sellQuote","buyQuote","quoteState","SwapQuoteState","Done","_updateOrderDetailsState","componentDidMount","tokenPrices","inventoryBalanceBN","bestBuyQuote","bestSellQuote","tokenPriceQuote","t","c_id","tokenPriceBase","price_usd","_getCostStringForRender","quoteInUSD","tokenPrice","quoteSellTokenAmountUnits","costSellAmount","quotePriceAmountUSD","quoteBuyTokenAmountUnits","costBuyAmount","_getBaseCostStringForRender","_getMedianPriceStringForRender","priceDisplay","toFormat","_getCostLabelStringForRender","qouteInUSD","_getBaseCostLabelStringForRender","_getPriceMarketRender","gt","_onTrackerPriceClick","onTrackerPriceClick","costBuy","costSell","costBuyText","costSellText","costBaseBuy","costBaseSell","costBaseBuyText","costBaseSellText","priceBuyMedianText","priceSellMedianText","priceMarketTrackerText","disabled","buyDisabled","onBuy","sellDisabled","onSell","getQuoteInUsd","getTokensPrice","onFetchTakerAndMakerFee","fetchTakerAndMakerFee","Form","Control","text2","FormGroup","TopContainer","BottomContainer","getOrderPriceSelected","onSubmitLimitOrder","orderFeeData","startBuySellLimitSteps","onSubmitMultipleLimitOrders","amountBuy","orderBuyFeeData","amountSell","orderSellFeeData","startMultipleBuySellLimitSteps","onSetOrderSecondsExpirationTime","seconds","setOrderSecondsExpirationTime","marketQuoteState","setMarketQuoteState","setBuyQuote","setSellQuote","setBuyPrice","setSellPrice","selectedSpread","setSelectedSpread","orderExpireTime","setOrderExpireTime","selectedInventoryBalance","setSelectedInventoryBalance","btnMsg","cardMsg","errorState","setErrorState","makerAmountState","setMakerAmountState","web3State","selectedBuyPrice","getOrderBuyPriceSelected","selectedSellPrice","getOrderSellPriceSelected","minOrderExpirationTimeOnOrderBook","getMinOrderExpireTimeOnBooks","useDispatch","queryToken","URLSearchParams","useLocation","search","get","findTokenOrFetchIt","setMarketTokens","fetchToken","isWethQuote","isWethBase","quoteUnits","tokenAmountInUnitsToBigNumber","baseBalance","stepAmount","pow","String","isMakerAmountEmpty","isBuyOrderTypeLimitOverflow","isSellOrderTypeLimitOverflow","isOrderTypeMarketIsEmpty","_reset","toNumber","onCalculateSwapQuote","amt","buyParams","sellParams","assetSwapper","getSwapQuoteAsync","bQuote","sQuote","sPrice","bPrice","debouncedAmount","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","isGreaterThan","handleSubmitError","message","onSubmitBuyOrder","makerAmount","orderSide","onSubmitSellOrder","listed","Col","xs","lg","step","max","newSpread","currentTarget","prices","newSpreadPercentage","newSpreadUnits","incrementPrice","getPricesFromSpread","justDesktop","justMobile","ContainerCard","MarketMaker","Page","morePadding"],"mappings":"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","file":"static/js/24.eda4a09a.chunk.js","sourcesContent":["import { Card } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst { Header, Body } = Card;\n\nexport const CustomCard = styled(Card)`\n  background-color: ${({ theme }) => theme.modalBG };\n  color: ${({ theme }) => theme.text1};\n  margin-bottom: ${({margin, marginBottom}) => marginBottom ? `${marginBottom}px` : margin ? `${margin}px` : '20px'};\n  margin-top:  ${({margin, marginTop}) => marginTop ? `${marginTop}px` : margin ? `${margin}px` : '0'};;\n  border-radius: 18px;\n  border: 1px solid ${({ theme }) => theme.text4};\n`\n\nexport const RCard = styled(CustomCard)`\n  @media (max-width: 767px) {\n      margin-left: -30px;\n      margin-right: -30px;\n      border-radius: 0;\n      \n      .card-body {\n        padding-left: 30px;\n        padding-right: 30px;\n      }\n  }\n \n`\n\nexport const CustomHeader = styled(Header)`\n  border-bottom-color: ${({ theme }) => theme.text3};\n  background-color: transparent;\n  padding: 20px;\n  \n  \n  @media (min-width: 768px) {\n  padding: ${({ isTable }) => isTable ? '30px 60px' : '30px'};\n  }\n`\n\nexport const CustomBody = styled(Body)`\n  padding: 20px;\n  background-color: transparent;\n  \n  \n  @media (min-width: 768px) {\n  padding: ${({ isTable }) => isTable ? '18px 48px' : '30px'};\n  }\n`\n\nexport const CustomTitle = styled.h4`\n    margin: 0;\n    font-weight: bold;\n    color: ${({ theme }) => theme.text1};\n    font-size: 1.25rem;\n`\n\nconst Comp = props => {\n    return (\n        <CustomCard {...props}>\n            {props.header && (\n                <CustomHeader isTable={props.isTable}>\n                    {props.title && (\n                        <CustomTitle>{props.title}</CustomTitle>\n                    )}\n                    {props.header}\n                </CustomHeader>\n            )}\n            <CustomBody isTable={props.isTable}>\n                {props.children || props.body}\n            </CustomBody>\n        </CustomCard>\n    )\n}\nexport const ResponsiveCard = props => {\n    return (\n        <RCard {...props}>\n            {props.header && (\n                <CustomHeader isTable={props.isTable}>\n                    {props.title && (\n                        <CustomTitle>{props.title}</CustomTitle>\n                    )}\n                    {props.header}\n                </CustomHeader>\n            )}\n            <CustomBody isTable={props.isTable}>\n                {props.children || props.body}\n            </CustomBody>\n        </RCard>\n    )\n}\n\nexport default Comp;\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{\n    width?: string\n    align?: string\n    justify?: string\n    padding?: string\n    border?: string\n    borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row","import {useActiveWeb3React} from \"../../hooks\";\nimport {useWalletModalToggle} from \"../../state/application/hooks\";\n\nconst withWeb3Account = (Component: any) => {\n    return (props: any) => {\n        const context = useActiveWeb3React();\n        const toggleWalletModal = useWalletModalToggle()\n        return <Component\n            web3={context}\n            toggleWalletModal={toggleWalletModal}\n            { ...props }/>\n    }\n}\n\nexport default withWeb3Account;","import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string, noBorder?: boolean, reverse?: boolean, size?: string }>`\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  font-family: inherit;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.bg3};\n  font-size: 1rem;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  height: ${({ size}) => size === 'sm' ? '48px' : '56px'};\n  border-bottom-right-radius: ${({ reverse }) => reverse ? '0' :  `1.125rem`};\n  border-top-right-radius: ${({ reverse }) => reverse ? '0' :  `1.125rem`};\n  border-bottom-left-radius: ${({ reverse }) => reverse ? '1.125rem' :  `0`};\n  border-top-left-radius: ${({ reverse }) => reverse ? '1.125rem' :  `0`};\n  padding-right: 0.625rem;\n  padding-left: ${({ noBorder, reverse }) => reverse ? '1.375rem' : noBorder ? '0.625rem' : `1.5rem`};\n  -webkit-appearance: textfield;\n  border-left: ${({ theme, noBorder }) => noBorder ? 'none' :  `3px solid ${theme.modalBG}`};\n  \n  @media (min-width: 768px) {\n    \n    padding-right: 4.5625rem;\n  }\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  size,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  size?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={event => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      size={size}\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import { useMemo, useState, useEffect } from 'react';\nimport {tokensToTokenBalances} from \"../utils/spot/tokens\";\nimport {useActiveWeb3React} from \"./index\";\nimport {useSelector} from \"react-redux\";\nimport {getBaseToken, getQuoteToken, searchToken} from \"../state/selectors\";\nimport {getKnownTokens} from \"../utils/known_tokens\";\nimport {useETHBalances} from \"../state/wallet/hooks\";\nimport {BigNumber} from \"@0x/utils\";\n\nexport const useTokenToBalance = (tokens, address, library) => {\n    const [balances, setBalances] = useState([]);\n\n    const fetchBalances = async () => {\n        if(address) {\n            const res = await tokensToTokenBalances(tokens, address, library)\n            setBalances(res);\n        }\n    }\n    useEffect(() => {\n        fetchBalances()\n    }, [address, tokens])\n\n    return useMemo(() => {\n        if(balances.length > 0) {\n            return balances;\n        } else {\n            return []\n        }\n    }, [address, balances, tokens])\n}\n\n\nexport const useSpotBalances = () => {\n    const { account, library } = useActiveWeb3React()\n\n    const baseToken = useSelector(getBaseToken);\n    const quoteToken = useSelector(getQuoteToken);\n\n    const knownTokens = useMemo(() => {\n        return getKnownTokens();\n    }, [])\n    const tokens = useMemo(() => {\n        return knownTokens.getTokens()\n    }, [])\n\n    const wethToken = useMemo(() => {\n        return knownTokens.getWethToken()\n    }, []);\n\n    const t = useMemo(() => {\n        return [...tokens, wethToken]\n    }, [wethToken, tokens])\n    const allBalances = useTokenToBalance(t, account, window.ethereum || library);\n\n    const ethBalance = useETHBalances([account])\n\n    const wethBalance = useMemo(() => {\n        return allBalances.find(b => b.token.symbol === wethToken.symbol);\n    }, [allBalances])\n\n    const tokensBalance = useMemo(() => {\n        return allBalances.filter(b => b.token.symbol !== wethToken.symbol);\n    }, [allBalances])\n\n    const ethereumBalance = useMemo(() => {\n        const ETH = ethBalance[account] ? ethBalance[account].toExact() : null\n        const bn = new BigNumber(ETH * (10 ** 18))\n\n        return {\n            token: ethBalance[account] ? ethBalance[account].currency : undefined,\n            balance: bn\n        }\n    }, [ethBalance]);\n\n    const totalEthBalance = useMemo(() => {\n        if(wethBalance && ethereumBalance) {\n            let total = wethBalance.balance;\n            if(ethereumBalance.token !== undefined) {\n                total = ethereumBalance.balance.plus(wethBalance.balance);\n            }\n\n            return total;\n        } else {\n            return undefined;\n        }\n    }, [ethereumBalance, wethBalance])\n\n    const baseTokenBalance = useMemo(() => {\n\n        return searchToken({ tokenBalances: tokensBalance, wethTokenBalance: wethBalance, tokenToFind: baseToken });\n    }, [baseToken, tokensBalance, wethBalance])\n\n    const quoteTokenBalance = useMemo(() => {\n\n        return searchToken({ tokenBalances: tokensBalance, wethTokenBalance: wethBalance, tokenToFind: quoteToken });\n    }, [quoteToken, tokensBalance, wethBalance])\n\n    return useMemo(() => {\n        return {\n            quoteTokenBalance,\n            baseTokenBalance,\n            totalEthBalance,\n            ethBalance: ethereumBalance,\n            wethBalance,\n            tokensBalance,\n        }\n    }, [account, baseToken, quoteToken, allBalances, baseTokenBalance, quoteTokenBalance])\n}\n","import {useSpotBalances} from \"../../hooks/useTokenToBalance\";\n\n\nconst withBalance = Component => {\n    return props => {\n        const balances = useSpotBalances();\n        return (\n            <Component\n                {...props}\n                {...balances}\n            />\n        )\n    }\n\n}\n\nexport default withBalance;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  width: 30px;\n  height: 30px;\n  min-width: 30px;\n  min-height: 30px;\n  padding: 10px 6px;\n  background-color: ${({ theme }) => theme.bg3};\n  border-radius: 30px;\n  opacity: ${({ active }) => active ? '1' : '0.5'};\n  cursor: pointer;\n`\n\nconst Cell = styled.div`\n  height: 2px;\n  border-radius: 9px;\n  width: 13px;\n  background-color: ${({ theme, variant }) => variant ? theme[variant] : '#D3D6E8'};\n  \n  &:not(:last-child) {\n    width: 17px;\n  }\n`\n\nconst BookOption = props => {\n    return (\n        <Wrapper active={props.active} onClick={props.onChange} {...props}>\n            <Cell variant={props.isSell && 'danger'} />\n            <Cell />\n            <Cell variant={props.isBuy && 'success'} />\n        </Wrapper>\n    )\n}\n\nexport default BookOption;\n","import styled from \"styled-components\";\nimport { useState, useCallback } from 'react';\nimport SVG from 'react-inlinesvg';\nimport { darken } from 'polished';\n\nconst Wrapper = styled.div`\n  position: relative;\n  z-index: 2;\n  perspective: 800px;\n`\n\nconst Button = styled.button`\n  height: ${({ size }) => size === 'sm' ? '32px' : '56px'};\n  padding-left: ${({ size }) => size === 'sm' ? '16px' : '20px'};\n  padding-right: ${({ size }) => size === 'sm' ? '22px' : '24px'};\n  border-radius: ${({ size }) => size === 'sm' ? '12px' : '18px'};\n  background-color: ${({variant}) => variant === 'secondary' ? 'rgba(121, 133, 246, 0.15)' : 'rgba(135, 220, 225, 0.15)'};\n  transition: 0.4s ease all;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${({variant, theme}) => variant === 'secondary' ? theme.secondary2 : theme.primary};\n  border: none;\n  \n  &:hover {\n    background-color: ${({variant, theme}) => variant === 'secondary' ? theme.secondary2 : theme.primary};\n    color: ${({ theme }) => theme.text1};\n  }\n  \n  &:focus,\n  &:active {\n    outline: none;\n    background-color: ${({variant, theme}) => variant === 'secondary' ? darken(0.1, theme.secondary2) : darken(0.1, theme.primary)};\n    box-shadow: 0 0 0 5px ${({variant}) => variant === 'secondary' ? 'rgba(121, 133, 246, 0.15)' : 'rgba(135, 220, 225, 0.15)'};\n    color: ${({ theme }) => theme.text1};\n  }\n  \n  \n  @media (max-width: 991px) {\n    height: 32px;\n    font-size: .875rem;\n    border-radius: 12px;\n    padding-left: 15px;\n    padding-right: 21px;\n  }\n`\n\nconst ButtonText = styled.span`\n  color: currentColor;\n  font-weight: 500;\n  font-size: 1rem;\n  padding-right: 1rem;\n  \n  \n  @media (max-width: 991px) {\n    padding-right: 0.5rem;\n  }\n`\n\nconst DropdownList = styled.div`\n  background-image: linear-gradient(346.84deg, #9AA7D0 1.12%, #B7C2E4 78.56%);\n  box-shadow: -1px 11px 43px rgba(0, 0, 0, 0.12);\n  border-radius: 12px;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  right: 0;\n  top: ${({size}) => size === 'sm' ? `42px` : `66px`};\n  min-width: 100%;\n  padding: ${({size}) => size === 'sm' ? `14px` : `20px`};\n  transition: 0.5s ease all;\n  transform-style: preserve-3d;\n  transform-origin: top center;\n  transform: ${({isOpen}) => isOpen ? `translateY(0) scale(1)` : `translateY(20px) scale(0.8)`};\n  opacity: ${({isOpen}) => isOpen ? `1` : `0`};\n  visibility: ${({isOpen}) => isOpen ? `visible` : `hidden`};\n  \n  \n  @media (max-width: 991px) {\n    top: 42px;\n  }\n`\n\nconst DropdownItem = styled.button`\n  border: none;\n  background-color: transparent;\n  font-weight: 500;\n  font-size: 1rem;\n  color: #232429;\n  white-space: nowrap;\n  padding: 0;\n  \n  \n  @media (max-width: 991px) {\n    font-size: 0.875rem;\n  }\n  \n  &:hover,\n  &:focus,\n  &:active {\n    outline: none;\n    text-decoration: none;\n    box-shadow: none;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: ${({size}) => size === 'sm' ? `14px` : `20px`} ;\n  }\n`\n\nconst Dropdown = props => {\n    const [active, setActive] = useState(props.items[props.active] || null);\n    const [open, setOpen] = useState(false);\n\n    const toggleModal = useCallback(() => {\n        setOpen(open => !open);\n    }, [])\n\n    const changeActiveHandler = useCallback((item) => {\n        setActive(item);\n        setOpen(false);\n        if(props.hasOwnProperty('onChange')) {\n            props.onChange(item.value);\n        }\n    }, [props.onChange])\n\n    return (\n        <Wrapper>\n            <Button variant={props.variant} onClick={toggleModal} isOpen={open} size={props.size || 'md'}>\n                <ButtonText>{active ? active.title : props.placeholder || 'Select'}</ButtonText>\n                <SVG src={require('../../../assets/images/global/dropdown.svg').default} />\n            </Button>\n            <DropdownList isOpen={open} size={props.size || 'md'}>\n                {props.items.map((item, i) => {\n                    return (\n                        <DropdownItem size={'sm'} onClick={changeActiveHandler.bind(this, item)} key={`dropdown-${i}`}>{item.title}</DropdownItem>\n                    )\n                })}\n            </DropdownList>\n        </Wrapper>\n    )\n}\n\nexport default Dropdown;\n","export default __webpack_public_path__ + \"static/media/dropdown.4a406929.svg\";","import {UI_DECIMALS_DISPLAYED_ORDER_SIZE} from \"../../constants\";\n\nexport const padRightSplitted = (\n    numBg,\n    decimals = UI_DECIMALS_DISPLAYED_ORDER_SIZE,\n) => {\n    const numBgToFixed = numBg.toFixed(decimals);\n    const numBgToString = numBg.toString();\n\n    const decimalPlaces = (numBgToString.split('.')[1] || []).length;\n\n    let diff = '';\n    let num = numBgToFixed;\n    if (!numBg.isZero() && decimalPlaces < decimals) {\n        diff = numBgToFixed.replace(numBgToString, '');\n        num = numBgToString;\n    }\n\n    return {\n        num,\n        diff,\n    };\n};\n\nexport const truncateAddress = (address) => {\n    return `${address.slice(0, 7)}...${address.slice(address.length - 5)}`;\n};\n","import { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { lighten } from 'polished';\nimport {BigNumber} from \"@0x/utils\";\n\nimport {\n    getOrderBook, getOrderbookState,\n    getSpread,\n    getSpreadInPercentage,\n    getTotalBaseSellOrders,\n    getTotalQuoteBuyOrders\n} from \"../../../../state/selectors\";\nimport {ZERO, UI_DECIMALS_DISPLAYED_SPREAD_PERCENT, OrderSide, ServerState} from \"../../../../constants\";\nimport { formatTokenSymbol, tokenAmountInUnits } from '../../../../utils/spot/tokens';\nimport {\n    setMakerAmountSelected,\n    setOrderBuyPriceSelected,\n    setOrderPriceSelected,\n    setOrderSellPriceSelected\n} from \"../../../../state/spotUI/actions\";\nimport React, {Component} from \"react\";\nimport Loading from \"../../../../components/Loading\";\nimport BookOption from \"../../../../components/BookOption\";\nimport Dropdown from \"../../../../components/UI/Dropdown\";\nimport {padRightSplitted} from \"../../../../utils/spot/numberUtils\";\n\nconst Container = styled.div`\n  width: 330px;\n  display: flex;\n  flex-direction: column;\n  \n  @media (max-width: 1400px) {\n    width: 100%;\n  }\n`\n\nconst EmptyText = styled.span`\n  font-size: .875rem;\n  font-weight: 400;\n  color: ${({ theme }) => theme.text1};\n  \n`\nconst BookOptionType = {\n    BuySellBook: 0,\n    SellBook: 1,\n    BuyBook: 2,\n}\n\nconst StyledBookOption = styled(BookOption)`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`\n\nconst HeaderRow = styled.div`\n  top: 20px;\n  left: 20px;\n  right: 20px;\n  position: absolute;\n  \n  \n  @media (max-width: 1400px) {\n    position: relative;\n    top: initial;\n    left: auto;\n    right: auto;\n    margin-bottom: 34px;\n  }\n`\nconst TitleRow = styled.div`\n  top: 96px;\n  left: 20px;\n  right: 20px;\n  position: absolute;\n  \n  \n  @media (max-width: 1400px) {\n    position: relative;\n    top: initial;\n    left: auto;\n    right: auto;\n    margin-bottom: 20px;\n    line-height: 1;\n  }\n`\nconst TableRow = styled.div`\n  display: flex;\n  flex: 1;\n  max-height: 814px;\n  flex-direction: column;\n  margin-bottom: 20px;\n  \n  @media (max-width: 1400px) {\n    max-height: initial;\n    margin-bottom: 0;\n  }\n`\n\nconst Title = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-weight: bold;\n  font-size: 1rem;\n`\n\nconst Result = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-weight: 500;\n  font-size: 1rem;\n  \n  @media (max-width: 768px) {\n    font-size: .875rem;\n  }\n`\n\nconst TR = styled.div`\n  padding: 19px 20px;\n  border-radius: 18px;\n  margin-bottom: 15px;\n  max-height: 56px;\n  margin-right: 10px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  \n  \n  @media (max-width: 1400px) {\n    margin-right: 0;\n  }\n`\nconst CustomHead = styled(TR)`\n  background-color: ${({ theme }) => theme.text1}10;\n`\n\nconst InnerTR = styled(TR)`\n  background-color: transparent;\n  cursor: pointer;\n  transition: all ease 0.3s;\n  \n  &:hover {\n    background-color: ${({ theme }) => theme.text1}06;\n  }\n`\n\nconst TH = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-size: .75rem;\n  font-weight: 400;\n  white-space: nowrap;\n`\n\nconst SpreadTitle = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-size: .75rem;\n  font-weight: 500;\n  white-space: nowrap;\n`\nconst TD = styled.span`\n  color: ${({ theme, variant }) => variant ? theme[variant] : theme.text1};\n  font-size: .75rem;\n  font-weight: 400;\n  padding-right: 5px;\n`\n\nconst TBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  max-height: 831px;\n  min-height: 831px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  \n  @media (max-width: 1400px) {\n    min-height: initial;\n    max-height: initial;\n  }\n  \n  /* width */\n  ::-webkit-scrollbar {\n    width: 3px;\n  }\n  \n  /* Track */\n  ::-webkit-scrollbar-track {\n    box-shadow: none;\n    background-color: transparent; \n    border-radius: 10px;\n    padding: 0 6px;\n    margin: 0 6px;\n    border-right: 1px solid ${({ theme }) => theme.text1};\n  }\n   \n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.text1}; \n    border-radius: 10px;\n    width: 4px !important;\n    \n  }\n  \n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${({ theme }) => lighten(0.08, theme.text1)}; \n  }\n`\n\nconst depthItems = [\n    {\n        value: 5,\n        title: '5'\n    },\n    {\n        value: 10,\n        title: '10'\n    },\n    {\n        value: 20,\n        title: '20'\n    },\n    {\n        value: 50,\n        title: '50'\n    },\n]\n\nclass OrderToRow extends Component {\n    render() {\n        const { order, index, baseToken, priceColor, mySizeOrders = [], currencyPair } = this.props;\n        const basePrecision = currencyPair.config.basePrecision;\n        const pricePrecision = currencyPair.config.pricePrecision;\n\n        const size = tokenAmountInUnits(order.size, baseToken.decimals, basePrecision);\n        const price = order.price.toString();\n\n        const mySize = mySizeOrders.reduce((sumSize, mySizeItem) => {\n            if (mySizeItem.price.eq(order.price)) {\n                return sumSize.plus(mySizeItem.size);\n            }\n            return sumSize;\n        }, ZERO);\n\n        const mySizeConverted = tokenAmountInUnits(mySize, baseToken.decimals, basePrecision);\n        const isMySizeEmpty = mySize.eq(new BigNumber(0));\n        const numSplitted = padRightSplitted(new BigNumber(size), basePrecision);\n\n        return (\n            <InnerTR>\n                <TD>{numSplitted.num}</TD>\n                <TD variant={priceColor}>\n                    {parseFloat(price).toFixed(pricePrecision)}\n                </TD>\n                <TD>\n                    {isMySizeEmpty ? '-' : mySizeConverted}\n                </TD>\n            </InnerTR>\n        )\n    }\n}\n\n\nconst mapOrderToRowDispatchToProps = (dispatch) => {\n    return {\n        onSetOrderPriceSelected: (orderPriceSelected) => dispatch(setOrderPriceSelected(orderPriceSelected)),\n        onSetOrderBuyPriceSelected: (orderPriceSelected) =>\n            dispatch(setOrderBuyPriceSelected(orderPriceSelected)),\n        onSetOrderSellPriceSelected: (orderPriceSelected) =>\n            dispatch(setOrderSellPriceSelected(orderPriceSelected)),\n        onSetMakerAmountSelected: (makerAmountSelected) =>\n            dispatch(setMakerAmountSelected(makerAmountSelected)),\n    };\n};\n\nconst OrderToRowContainer = connect(null, mapOrderToRowDispatchToProps)(OrderToRow);\n\nclass Orderbook extends Component {\n    state = {\n        depth: { value: this.props.defaultDepth || 5 },\n        bookOption: BookOptionType.BuySellBook,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this._spreadRowScrollable = React.createRef();\n        this._spreadRowFixed = React.createRef();\n        this._itemsScroll = React.createRef();\n    }\n\n    render() {\n        const {\n            orderBook,\n            baseToken,\n            quoteToken,\n            absoluteSpread,\n            percentageSpread,\n            currencyPair,\n            totalQuoteBuyOrders,\n            totalBaseSellOrders,\n            serverState\n        } = this.props;\n        const { sellOrders, buyOrders, mySizeOrders } = orderBook;\n        const mySizeSellArray = mySizeOrders.filter((order) => {\n            return order.side === OrderSide.Sell;\n        });\n        const mySizeBuyArray = mySizeOrders.filter((order) => {\n            return order.side === OrderSide.Buy;\n        });\n        const getColor = (order) => {\n            return order.side === OrderSide.Buy ? 'success' : 'danger';\n        };\n        let content;\n\n        if((!baseToken || !quoteToken) || serverState === ServerState.NotLoaded){\n            content = (\n                <div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n                    <Loading width={40} height={40} id={'orderbooks'} active/>\n                </div>\n            )\n        } else if ((!buyOrders.length && !sellOrders.length) || !baseToken || !quoteToken) {\n            content = (\n                <div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n                    <EmptyText>There are no orders to show</EmptyText>\n                </div>\n            )\n        } else {\n            const spreadAbsFixed = absoluteSpread.toFixed(currencyPair.config.pricePrecision);\n            const spreadPercentFixed = percentageSpread.toFixed(UI_DECIMALS_DISPLAYED_SPREAD_PERCENT);\n            const basePrecision = currencyPair.config.basePrecision;\n\n            const totalBase = tokenAmountInUnits(totalBaseSellOrders, baseToken.decimals, basePrecision);\n\n            const totalQuote = tokenAmountInUnits(totalQuoteBuyOrders, quoteToken.decimals, 2);\n\n            const baseSymbol = formatTokenSymbol(baseToken.symbol);\n            const quoteSymbol = formatTokenSymbol(quoteToken.symbol);\n\n            const handleDepth = (value) => {\n                this.setState({ depth: { value: Number(value) } });\n            };\n\n            const bookOptionState = this.state.bookOption;\n            const handleBookOption = (option) => {\n                this.setState({ bookOption: option });\n            };\n\n            content = (\n                <>\n                    <HeaderRow className=\"d-flex align-items-start justify-content-between\">\n                        <div className={'d-flex align-items-center'}>\n                            <StyledBookOption\n                                active={bookOptionState === BookOptionType.BuySellBook}\n                                onChange={() => handleBookOption(BookOptionType.BuySellBook)}\n                                isSell={true}\n                                isBuy\n                            />\n                            <StyledBookOption\n                                active={bookOptionState === BookOptionType.BuyBook}\n                                onChange={() => handleBookOption(BookOptionType.BuyBook)}\n                                isBuy\n                            />\n                            <StyledBookOption\n                                active={bookOptionState === BookOptionType.SellBook}\n                                onChange={() => handleBookOption(BookOptionType.SellBook)}\n                                isSell\n                            />\n                        </div>\n                        <Dropdown items={depthItems} placeholder={'Depth'} onChange={handleDepth} />\n                    </HeaderRow>\n                    <TitleRow className=\"d-flex align-items-center justify-content-between\">\n                        <Title>Asks</Title>\n                        <Result>{`Total: ${totalBase} ${baseSymbol}`}</Result>\n                    </TitleRow>\n                    <TableRow>\n                        <CustomHead>\n                            <TH>Trade Size</TH>\n                            <TH>Price ({formatTokenSymbol(quoteToken.symbol)})</TH>\n                            <TH>My Size</TH>\n                        </CustomHead>\n                        <TBody>\n\n                            {((bookOptionState === BookOptionType.BuySellBook ||\n                                bookOptionState === BookOptionType.SellBook)) && sellOrders\n                                .slice(sellOrders.length - this.state.depth.value, sellOrders.length)\n                                .map((order, index) => (\n                                    <OrderToRowContainer\n                                        key={index}\n                                        order={order}\n                                        index={index}\n                                        count={sellOrders.length}\n                                        orders={sellOrders}\n                                        baseToken={baseToken}\n                                        priceColor={getColor(order)}\n                                        mySizeOrders={mySizeSellArray}\n                                        currencyPair={currencyPair}\n                                    />\n                                ))}\n\n                            <CustomHead>\n                                <SpreadTitle>Spread</SpreadTitle>\n                                <SpreadTitle>{spreadAbsFixed}</SpreadTitle>\n                                <SpreadTitle>{spreadPercentFixed}%</SpreadTitle>\n                            </CustomHead>\n\n                            {((bookOptionState === BookOptionType.BuyBook ||\n                                bookOptionState === BookOptionType.BuySellBook)) && (\n                                buyOrders.slice(0, this.state.depth.value).map((order, index) => (\n                                    <OrderToRowContainer\n                                        key={index}\n                                        order={order}\n                                        index={index}\n                                        count={buyOrders.length}\n                                        orders={buyOrders}\n                                        baseToken={baseToken}\n                                        priceColor={getColor(order)}\n                                        mySizeOrders={mySizeBuyArray}\n                                        currencyPair={currencyPair}\n                                    />\n                                ))\n                            )}\n                        </TBody>\n\n\n                        <CustomHead>\n                            <SpreadTitle>Bids</SpreadTitle>\n                            <SpreadTitle>{`${totalQuote} ${quoteSymbol}`}</SpreadTitle>\n                            <SpreadTitle> </SpreadTitle>\n                        </CustomHead>\n                    </TableRow>\n                </>\n            )\n        }\n\n        return (\n            <Container>\n                {content}\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        baseToken: state.spot.baseToken,\n        currencyPair: state.spot.currencyPair,\n        quoteToken: state.spot.quoteToken,\n        userOrders: state.relayer.userOrders,\n        orderBookState: state.relayer.orderBookState,\n        orderBook: getOrderBook(state),\n        absoluteSpread: getSpread(state),\n        percentageSpread: getSpreadInPercentage(state),\n        totalQuoteBuyOrders: getTotalQuoteBuyOrders(state),\n        totalBaseSellOrders: getTotalBaseSellOrders(state),\n        serverState: getOrderbookState(state),\n    }\n}\n\nexport default connect(mapStateToProps)(Orderbook);\n","import { withRouter } from 'react-router-dom';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    updateERC20Markets,\n    updateERC20Store,\n    updateMarketPriceEther,\n    updateMarketPriceQuote,\n    updateMarketPriceTokens\n} from \"../../../../state/spot/actions\";\nimport withWeb3Account from \"../../../../components/hoc/withWeb3Account\";\nimport {\n    UI_UPDATE_CHECK_INTERVAL, UPDATE_ERC20_MARKETS,\n    UPDATE_ETHER_PRICE_INTERVAL,\n    UPDATE_TOKENS_PRICE_INTERVAL\n} from \"../../../../constants\";\nimport {subscribeToRelayerWebsocketFillEvents} from \"../../../../state/relayer/actions\";\nimport Web3 from \"web3\";\n\nconst web3 = new Web3(Web3.givenProvider || Web3.providers.HttpProvider(process.env.REACT_APP_NETWORK_URL));\n\nclass Provider extends Component {\n    _deactivatePollingUpdates = () => {\n        if (this._updateStoreInterval) {\n            clearInterval(this._updateStoreInterval);\n            this._updateStoreInterval = undefined;\n        }\n\n        if (this._updatePriceEtherInterval) {\n            clearInterval(this._updatePriceEtherInterval);\n            this._updatePriceEtherInterval = undefined;\n        }\n        if (this._updatePriceTokensInterval) {\n            clearInterval(this._updatePriceTokensInterval);\n            this._updatePriceTokensInterval = undefined;\n        }\n        if (this._updateERC20MarketsInterval) {\n            clearInterval(this._updateERC20MarketsInterval);\n            this._updateERC20MarketsInterval = undefined;\n        }\n    };\n\n    _activatePollingUpdates = () => {\n        this.props.onUpdateERC20Markets();\n        this.props.onUpdateMarketPriceTokens();\n        this.props.onUpdateMarketPriceEther();\n        this.props.onUpdateMarketPriceQuote();\n        this.props.onUpdateERC20Store(this.props.web3.account, web3.currentProvider);\n        this.props.onUpdateMarketPriceQuote();\n        // Enables realtime updates of the store using polling\n        if (UI_UPDATE_CHECK_INTERVAL !== 0 && !this._updateStoreInterval) {\n            this._updateStoreInterval = window.setInterval(async () => {\n                this.props.onUpdateERC20Store(this.props.web3.account, web3.currentProvider);\n                this.props.onUpdateMarketPriceQuote();\n                this.setState({\n                    isActiveCheckUpdates: true,\n                });\n            }, UI_UPDATE_CHECK_INTERVAL);\n        }\n\n        // Enables realtime updates of the price ether and quote token using polling\n        if (!this._updatePriceEtherInterval && UPDATE_ETHER_PRICE_INTERVAL !== 0) {\n            this._updatePriceEtherInterval = window.setInterval(async () => {\n                this.props.onUpdateMarketPriceEther();\n                this.props.onUpdateMarketPriceQuote();\n            }, UPDATE_ETHER_PRICE_INTERVAL);\n        }\n        // Enables realtime updates of token prices\n        if (\n            !this._updatePriceTokensInterval &&\n            UPDATE_TOKENS_PRICE_INTERVAL !== 0\n        ) {\n            this._updatePriceTokensInterval = window.setInterval(async () => {\n                this.props.onUpdateMarketPriceTokens();\n            }, UPDATE_TOKENS_PRICE_INTERVAL);\n        }\n        // Enables realtime updates of the token markets\n        if (!this._updateERC20MarketsInterval && UPDATE_ERC20_MARKETS !== 0) {\n            this._updateERC20MarketsInterval = window.setInterval(async () => {\n                this.props.onUpdateERC20Markets();\n            }, UPDATE_ERC20_MARKETS);\n        }\n    };\n\n    componentDidMount() {\n        const { web3, onSubscribeMarketMakerStates } = this.props;\n\n        onSubscribeMarketMakerStates(web3.account);\n\n        if (this.props.web3.account) {\n            this._activatePollingUpdates();\n        } else {\n            // If the user is currently using the dApp with the interval and the metamask status changed, the polling is removed\n            this._deactivatePollingUpdates();\n        }\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this._updateStoreInterval);\n        clearInterval(this._updatePriceEtherInterval);\n        clearInterval(this._updatePriceTokensInterval);\n        clearInterval(this._updateERC20MarketsInterval);\n    };\n\n\n    render = () => this.props.children;\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateMarketPriceEther: () => dispatch(updateMarketPriceEther()),\n        onUpdateMarketPriceQuote: () => dispatch(updateMarketPriceQuote()),\n        onUpdateMarketPriceTokens: () => dispatch(updateMarketPriceTokens()),\n        onUpdateERC20Markets: () => dispatch(updateERC20Markets()),\n        onUpdateERC20Store: (account, library) => dispatch(updateERC20Store(account, library)),\n        onSubscribeMarketMakerStates: (account) => dispatch(subscribeToRelayerWebsocketFillEvents(account))\n    }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(withWeb3Account(Provider)));\n","import { connect } from 'react-redux';\n\nimport {OrderSide, ServerState, USE_RELAYER_MARKET_UPDATES} from \"../../../../constants\";\nimport { changeMarket } from \"../../../../state/spot/actions\";\nimport { isWeth } from \"../../../../utils/known_tokens\";\nimport { getCurrencyPairByTokensSymbol } from \"../../../../utils/spot/knownCurrencyPair\";\nimport { marketToStringFromTokens } from \"../../../../utils/spot/market\";\nimport { formatTokenSymbol, tokenAmountInUnits } from \"../../../../utils/spot/tokens\";\nimport Loading from \"../../../../components/Loading\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport {lighten} from \"polished\";\n\nconst EmptyText = styled.span`\n  font-size: .875rem;\n  font-weight: 400;\n  color: ${({ theme }) => theme.text1};\n  \n`\nconst Container = styled.div`\n  width: 330px;\n  display: flex;\n  flex-direction: column;\n  \n  @media (max-width: 1400px) {\n    width: 100%;\n  }\n`\n\n\nconst TR = styled.div`\n  padding: 19px 20px;\n  border-radius: 18px;\n  margin-bottom: 15px;\n  max-height: 56px;\n  margin-right: 10px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  \n  \n  @media (max-width: 1400px) {\n    margin-right: 0;\n  }\n`\nconst CustomHead = styled(TR)`\n  background-color: ${({ theme }) => theme.text1}10;\n`\n\nconst TH = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-size: .75rem;\n  font-weight: 400;\n`\n\n\nconst TD = styled.span`\n  color: ${({ theme, variant }) => variant ? theme[variant] : theme.text1};\n  font-size: .75rem;\n  font-weight: 400;\n  padding-right: 5px;\n`\n\nconst TBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  max-height: 887px;\n  min-height: 887px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  \n  @media (max-width: 1400px) {\n    max-height: initial;\n    min-height: initial;\n  }\n  \n  /* width */\n  ::-webkit-scrollbar {\n    width: 3px;\n  }\n  \n  /* Track */\n  ::-webkit-scrollbar-track {\n    box-shadow: none;\n    background-color: transparent; \n    border-radius: 10px;\n    padding: 0 6px;\n    margin: 0 6px;\n    border-right: 1px solid ${({ theme }) => theme.text1};\n  }\n   \n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.text1}; \n    border-radius: 10px;\n    width: 4px !important;\n    \n  }\n  \n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${({ theme }) => lighten(0.08, theme.text1)}; \n  }\n`\n\nconst TableContainer = styled.div`\n  padding-left: 10px;\n  \n  @media (max-width: 1400px) {\n    padding-left: 0;\n  }\n`\n\nconst fillToRow = (fill, index) => {\n    let amountBase;\n    USE_RELAYER_MARKET_UPDATES\n        ? (amountBase = fill.amountBase.toFixed(fill.tokenBase.displayDecimals))\n        : (amountBase = tokenAmountInUnits(fill.amountBase, fill.tokenBase.decimals, fill.tokenBase.displayDecimals));\n\n    const displayAmountBase = `${amountBase} ${formatTokenSymbol(fill.tokenBase.symbol)}`;\n    let currencyPair;\n    try {\n        currencyPair = getCurrencyPairByTokensSymbol(fill.tokenBase.symbol, fill.tokenQuote.symbol);\n    } catch {\n        return null;\n    }\n    const price = parseFloat(fill.price.toString()).toFixed(currencyPair.config.pricePrecision);\n\n    return (\n        <TR key={index}>\n            <TD variant={fill.side === OrderSide.Buy ? 'success' : 'danger'}>\n                {price}\n            </TD>\n            <TD>{displayAmountBase}</TD>\n            <TD>\n                {fill.timestamp.toISOString().slice(-13, -5)}\n            </TD>\n        </TR>\n    );\n};\nconst MarketFills = props => {\n    let content;\n    const { marketFills, baseToken, quoteToken, marketFillsState } = props;\n    if(!baseToken || !quoteToken || marketFillsState === ServerState.NotLoaded) {\n        content = (\n            <div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n                <Loading width={40} height={40} id={'market-fills'} active/>\n            </div>\n        )\n    }else if (!Object.keys(marketFills).length || !baseToken || !quoteToken || !marketFills[marketToStringFromTokens(baseToken, quoteToken)]) {\n        content = (\n            <div className={'d-flex flex-column'}>\n                <div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n                    <EmptyText>There are no trades to show</EmptyText>\n                </div>\n            </div>\n        )\n    } else {\n\n        const market = marketToStringFromTokens(baseToken, quoteToken);\n        const tokenQuoteSymbol = isWeth(quoteToken.symbol) ? 'ETH' : quoteToken.symbol.toUpperCase();\n        const tokenBaseSymbol = isWeth(baseToken.symbol) ? 'ETH' : baseToken.symbol.toUpperCase();\n\n        content = (\n            <TableContainer className=\"d-flex flex-column\">\n                <CustomHead>\n                    <TH >Price ({tokenQuoteSymbol})</TH>\n                    <TH>Amount ({tokenBaseSymbol})</TH>\n                    <TH>Time</TH>\n                </CustomHead>\n                <TBody>\n                    {marketFills[market].map((marketFill, index) => fillToRow(marketFill, index))}\n                </TBody>\n            </TableContainer>\n        )\n    }\n\n    return (\n        <Container>\n            {content}\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        baseToken: state.spot.baseToken,\n        marketFills: state.spotUI.marketFills,\n        quoteToken: state.spot.quoteToken,\n        marketFillsState:  state.relayer.marketFillsState,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeMarket: (currencyPair) => dispatch(changeMarket(currencyPair))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarketFills);\n","import { connect } from 'react-redux';\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport {OrderStatus} from \"@0x/types\";\nimport { lighten } from 'polished';\n\nimport { isWeth } from \"../../../../utils/known_tokens\";\nimport { tokenAmountInUnits } from \"../../../../utils/spot/tokens\";\nimport { OrderSide } from '../../../../constants';\nimport { getCurrencyPairFromTokens } from \"../../../../utils/spot/knownCurrencyPair\";\nimport Loading from \"../../../../components/Loading\";\nimport { ResponsiveCard } from \"../../../../components/Card\";\n\nconst Card = styled(ResponsiveCard)`\n\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-bottom: 10px;\n  min-height: 457px;\n  \n    & .card-body {\n      padding: 20px 30px 30px;\n      display: flex;\n      flex-direction: column;\n    }\n  \n  @media (min-width: 1400px) {\n    width: 580px;\n    height: 447px;\n    min-height: 447px;\n  \n    & .card-body {\n      padding: 15px;\n      display: flex;\n      flex-direction: column;\n    }\n  }\n`\n\nconst CardTitle = styled.h4`\n  margin-top: 0;\n  padding: 0;\n  margin-bottom: 20px;\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: ${({ theme }) => theme.text1};\n`\n\nconst Content = styled.div`\n  background-color: ${({ theme }) => theme.bg3};\n  border-radius: 18px;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  max-height: 363px;\n  overflow: hidden;\n  \n  \n`\n\n\n\nconst InnerContent = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  flex: 1;\n  padding: 12px;\n  \n  \n  @media (max-width: 1400px) {\n    padding: 20px;\n  }\n  \n  /* width */\n  ::-webkit-scrollbar {\n    width: 3px;\n  }\n  \n  /* Track */\n  ::-webkit-scrollbar-track {\n    box-shadow: none;\n    background-color: transparent; \n    border-radius: 10px;\n    padding: 0 6px;\n    margin: 0 6px;\n    border-right: 1px solid ${({ theme }) => theme.text1};\n  }\n   \n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.text1}; \n    border-radius: 10px;\n    width: 4px !important;\n    \n  }\n  \n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${({ theme }) => lighten(0.08, theme.text1)}; \n  }\n  \n`\n\nconst EmptyText = styled.span`\n  font-size: .875rem;\n  font-weight: 400;\n  color: ${({ theme }) => theme.text1};\n  \n`\n\nconst TR = styled.div`\n  padding: 8px 16px;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  max-height: 32px;\n  height: 32px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n`\nconst CustomHead = styled(TR)`\n  background-color: ${({ theme }) => theme.text1}10;\n  max-height: 40px;\n  height: 40px;\n  padding: 12px 16px;\n  margin-bottom: 12px;\n`\n\nconst TH = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-size: .75rem;\n  font-weight: 400;\n`\n\n\nconst TD = styled.span`\n  color: ${({ theme, variant }) => variant ? theme[variant] : theme.text1};\n  font-size: .875rem;\n  font-weight: 400;\n  padding-right: 5px;\n`\n\nconst TBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  \n  /* width */\n  ::-webkit-scrollbar {\n    width: 3px;\n  }\n  \n  /* Track */\n  ::-webkit-scrollbar-track {\n    box-shadow: none;\n    background-color: transparent; \n    border-radius: 10px;\n    padding: 0 6px;\n    margin: 0 6px;\n    border-right: 1px solid ${({ theme }) => theme.text1};\n  }\n   \n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.text1}; \n    border-radius: 10px;\n    width: 4px !important;\n    \n  }\n  \n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${({ theme }) => lighten(0.08, theme.text1)}; \n  }\n`\n\n\n\nconst orderToRow = (order, index, baseToken, quoteToken) => {\n    const sideLabel = order.side === OrderSide.Sell ? 'Sell' : 'Buy';\n    const size = tokenAmountInUnits(order.size, baseToken.decimals, baseToken.displayDecimals);\n    let status = '--';\n    let isOrderFillable = false;\n\n    const filled = order.filled\n        ? tokenAmountInUnits(order.filled, baseToken.decimals, baseToken.displayDecimals)\n        : null;\n    if (order.status) {\n        isOrderFillable = order.status === OrderStatus.Fillable;\n        status = isOrderFillable ? 'Open' : 'Filled';\n    }\n    const currencyPair = getCurrencyPairFromTokens(baseToken, quoteToken);\n    const price = parseFloat(order.price.toString()).toFixed(currencyPair.config.pricePrecision);\n\n    return (\n        <TR key={index}>\n            <TD variant={order.side === OrderSide.Buy ? 'success' : 'danger'}>{sideLabel}</TD>\n            <TD>{size}</TD>\n            <TD>{filled}</TD>\n            <TD>{price}</TD>\n            <TD>{status}</TD>\n        </TR>\n    );\n};\n\n\nconst OrderHistory = props => {\n    const { orders, baseToken, quoteToken } = props;\n    const ordersToShow = orders.filter(order => order.status === OrderStatus.Fillable);\n\n    let content;\n\n    if(!baseToken || !quoteToken) {\n        content = (\n            <div className=\"w-100 h-100 d-flex align-items-center justify-content-center\">\n                <Loading width={40} height={40} id={`order-history-${props.isMobile ? 'mobile' : 'desktop'}`} active/>\n            </div>\n        )\n    } else if (!ordersToShow.length || !baseToken || !quoteToken) {\n        content = (\n            <div className=\"w-100 h-100 d-flex align-items-center justify-content-xl-center\">\n                <EmptyText>There are no orders to show</EmptyText>\n            </div>\n        )\n    } else {\n        const tokenQuoteSymbol = isWeth(quoteToken.symbol) ? 'ETH' : quoteToken.symbol.toUpperCase();\n        const tokenBaseSymbol = isWeth(baseToken.symbol) ? 'ETH' : baseToken.symbol.toUpperCase();\n\n        content = (\n            <div className=\"d-flex flex-column\">\n                <CustomHead>\n                    <TH>Side</TH>\n                    <TH>Size <span className=\"d-none d-lg-inline-block\">({tokenBaseSymbol})</span></TH>\n                    <TH>Filled <span className=\"d-none d-lg-inline-block\">({tokenBaseSymbol})</span></TH>\n                    <TH>Price <span className=\"d-none d-lg-inline-block\">({tokenQuoteSymbol})</span></TH>\n                    <TH>Status</TH>\n                </CustomHead>\n                <TBody>\n                    {ordersToShow.map((order, index) => orderToRow(order, index, baseToken, quoteToken))}\n                </TBody>\n            </div>\n        )\n    }\n\n    return (\n        <Card>\n            <CardTitle>Open Orders</CardTitle>\n            <Content>\n                <InnerContent>\n                    {content}\n                </InnerContent>\n            </Content>\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        baseToken: state.spot.baseToken,\n        orders: state.relayer.userOrders,\n        quoteToken: state.spot.quoteToken,\n    }\n}\n\nexport default connect(mapStateToProps)(OrderHistory);\n","import { connect } from 'react-redux';\nimport styled from \"styled-components\";\nimport React, {useMemo} from \"react\";\nimport {OrderStatus} from \"@0x/types\";\nimport { lighten } from 'polished';\n\nimport { isWeth } from \"../../../../utils/known_tokens\";\nimport Loading from \"../../../../components/Loading\";\nimport { ResponsiveCard } from \"../../../../components/Card\";\nimport {getCurrencyPair, getMarketMakerStats} from \"../../../../state/selectors\";\nimport {marketToString} from \"../../../../utils/spot/market\";\nimport {useActiveWeb3React} from \"../../../../hooks\";\n\nconst Card = styled(ResponsiveCard)`\n\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-bottom: 20px;\n  \n  @media (min-width: 1400px) {\n    width: 700px;\n    height: 447px;\n  \n    & .card-body {\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n    }\n  }\n`\n\nconst CardTitle = styled.h4`\n  margin-top: 0;\n  padding: 0;\n  margin-bottom: 20px;\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: ${({ theme }) => theme.text1};\n`\n\nconst Content = styled.div`\n  background-color: ${({ theme }) => theme.bg3};\n  border-radius: 18px;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  max-height: 363px;\n  overflow: hidden;\n  \n  @media (max-width: 1400px) {\n    max-height: initial;\n  }\n  \n`\n\nconst InnerContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  display: grid;\n  flex: 1;\n  padding: 20px;\n  grid-template-columns: 1fr 1fr;\n  gap: 32px 65px;\n  \n  \n  @media (max-width: 1400px) {\n    grid-template-columns: auto;\n  }\n  \n  /* width */\n  ::-webkit-scrollbar {\n    width: 3px;\n  }\n  \n  /* Track */\n  ::-webkit-scrollbar-track {\n    box-shadow: none;\n    background-color: transparent; \n    border-radius: 10px;\n    padding: 0 6px;\n    margin: 0 6px;\n    border-right: 1px solid ${({ theme }) => theme.text1};\n  }\n   \n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.text1}; \n    border-radius: 10px;\n    width: 4px !important;\n    \n  }\n  \n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${({ theme }) => lighten(0.08, theme.text1)}; \n  }\n  \n`\n\nconst Column = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  \n  &:last-child {\n    padding-bottom: 30px;\n  }\n  \n`\n\nconst Label = styled.span`\n  font-weight: 400;\n  font-size: 16px;\n  color: ${({ theme }) => theme.text1};\n`\n\nconst Value = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n  color: ${({ theme }) => theme.text1};\n  opacity: 0.5;\n`\n\nconst fieldsStatsMap = [\n    {\n        label: 'Protocol Fees',\n        field: 'protocolFeesCollected',\n    },\n    {\n        label: 'Weth Fees',\n        field: 'totalWethFeesCollected',\n    },\n    {\n        label: 'Total Orders',\n        field: 'totalOrders',\n    },\n    {\n        label: 'Total Buy Orders',\n        field: 'totalBuyOrders',\n    },\n    {\n        label: 'Total Sell Orders',\n        field: 'totalSellOrders',\n    },\n    {\n        label: 'Median Buy Price',\n        field: 'medianBuyPrice',\n    },\n    {\n        label: 'Median Sell Price',\n        field: 'medianSellPrice',\n    },\n    {\n        label: 'Total Buy Base Volume',\n        field: 'totalBuyBaseVolume',\n    },\n    {\n        label: 'Total Sell Base Volume',\n        field: 'totalSellBaseVolume',\n    },\n    {\n        label: 'Total Buy Quote Volume',\n        field: 'totalBuyQuoteVolume',\n    },\n    {\n        label: 'Total Sell Quote Volume',\n        field: 'totalSellQuoteVolume',\n    },\n    {\n        label: 'Total Quote Volume',\n        field: 'totalQuoteVolume',\n    },\n    {\n        label: 'Total Base Volume',\n        field: 'totalBaseVolume',\n    },\n];\n\n\nconst MarketStats = props => {\n    const { account } = useActiveWeb3React();\n    const {marketMakerStats, currencyPair} = props;\n    let content;\n\n    const filteredMarketMakerStats = useMemo(() => {\n        return marketMakerStats.find(m => m.account.toLowerCase() === account.toLowerCase() && m.market === marketToString(currencyPair))\n    }, [marketMakerStats])\n\n\n    content = fieldsStatsMap.map((f, index) => (\n        <Column key={index}>\n            <Label>{f.label}</Label>\n            <Value>{filteredMarketMakerStats ? (filteredMarketMakerStats[f.field]).toString() : 0}</Value>\n        </Column>\n    ));\n\n    return (\n        <Card>\n            <CardTitle>Market Maker Stats</CardTitle>\n            <Content>\n                <InnerContainer>\n                    {content}\n                </InnerContainer>\n            </Content>\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        marketMakerStats: getMarketMakerStats(state),\n        currencyPair: getCurrencyPair(state)\n    }\n}\n\nexport default connect(mapStateToProps)(MarketStats);\n","import {getRelayer} from \"../../common/relayer\";\nimport {\n    ASSET_SWAPPER_MARKET_ORDERS_OPTS,\n    CHAIN_ID,\n    FEE_PERCENTAGE,\n    FEE_RECIPIENT,\n    QUOTE_ORDER_EXPIRATION_BUFFER_MS\n} from \"../../constants\";\nimport {toUnitAmount} from \"../../lib/helper\";\nimport {assetDataUtils} from \"@0x/order-utils\";\nimport {getKnownTokens} from \"../known_tokens\";\nimport {BigNumber, RevertError} from \"@0x/utils\";\nimport {ExtensionContractType, OrderPrunerPermittedFeeTypes} from \"./types\";\nimport {isBridgeAssetData} from \"./orders\";\nimport {SwapQuoteConsumer, SwapQuoter} from \"@0x/asset-swapper\";\nimport {Web3Wrapper} from \"@0x/web3-wrapper\";\n\nexport class SwapService {\n    _provider;\n    _swapQuoter;\n    _swapQuoteConsumer;\n    _web3Wrapper;\n    constructor(orderbook, provider, web3) {\n        this._provider = provider;\n        const swapQuoterOpts = {\n            chainId: CHAIN_ID,\n            expiryBufferMs: QUOTE_ORDER_EXPIRATION_BUFFER_MS,\n            permittedOrderFeeTypes: new Set([\n                OrderPrunerPermittedFeeTypes.NoFees,\n                //  OrderPrunerPermittedFeeTypes.MakerDenominatedTakerFee,\n                OrderPrunerPermittedFeeTypes.TakerDenominatedTakerFee,\n            ]),\n        };\n        this._swapQuoter = new SwapQuoter(this._provider, orderbook, swapQuoterOpts);\n        this._swapQuoteConsumer = new SwapQuoteConsumer(this._provider);\n        this._web3Wrapper = web3;\n    }\n    getSwapQuoteConsumer() {\n        return this._swapQuoteConsumer;\n    }\n    async executeSwapQuote(\n        isETHSell,\n        quote,\n    ) {\n        // TODO: if ETH was specified as the token to sell but we have enought WETH, not use the forwarder\n        // If ETH was specified as the token to sell then we use the Forwarder\n        const extensionContractType = isETHSell ? ExtensionContractType.Forwarder : ExtensionContractType.None;\n        return this._swapQuoteConsumer.executeSwapQuoteOrThrowAsync(quote, {\n            useExtensionContract: extensionContractType,\n            extensionContractOpts: {\n                // Apply the Fee Recipient for the Forwarder\n                feeRecipient: FEE_RECIPIENT,\n                feePercentage: Number(FEE_PERCENTAGE),\n            },\n        });\n    }\n\n    async getSwapQuoteAsync(\n        params,\n    ) {\n        let swapQuote;\n        const {\n            sellAmount,\n            buyAmount,\n            buyTokenAddress,\n            sellTokenAddress,\n            slippagePercentage,\n            gasPrice: providedGasPrice,\n        } = params;\n\n        const assetSwapperOpts = {\n            slippagePercentage,\n            gasPrice: providedGasPrice,\n            ...ASSET_SWAPPER_MARKET_ORDERS_OPTS,\n        };\n        if (sellAmount !== undefined) {\n            swapQuote = await this._swapQuoter.getMarketSellSwapQuoteAsync(\n                buyTokenAddress,\n                sellTokenAddress,\n                sellAmount,\n                assetSwapperOpts,\n            );\n        } else if (buyAmount !== undefined) {\n            swapQuote = await this._swapQuoter.getMarketBuySwapQuoteAsync(\n                buyTokenAddress,\n                sellTokenAddress,\n                buyAmount,\n                assetSwapperOpts,\n            );\n        } else {\n            throw new Error('sellAmount or buyAmount required');\n        }\n        const attributedSwapQuote = this._attributeSwapQuoteOrders(swapQuote);\n        return attributedSwapQuote;\n    }\n\n    async calculateSwapQuoteAsync(params) {\n        let swapQuote;\n        const {\n            sellAmount,\n            buyAmount,\n            buyTokenAddress,\n            sellTokenAddress,\n            slippagePercentage,\n            gasPrice: providedGasPrice,\n            isETHSell,\n            from,\n        } = params;\n\n        const assetSwapperOpts = {\n            slippagePercentage,\n            gasPrice: providedGasPrice,\n            ...ASSET_SWAPPER_MARKET_ORDERS_OPTS,\n        };\n        if (sellAmount !== undefined) {\n            swapQuote = await this._swapQuoter.getMarketSellSwapQuoteAsync(\n                buyTokenAddress,\n                sellTokenAddress,\n                sellAmount,\n                assetSwapperOpts,\n            );\n        } else if (buyAmount !== undefined) {\n            swapQuote = await this._swapQuoter.getMarketBuySwapQuoteAsync(\n                buyTokenAddress,\n                sellTokenAddress,\n                buyAmount,\n                assetSwapperOpts,\n            );\n        } else {\n            throw new Error('sellAmount or buyAmount required');\n        }\n        const attributedSwapQuote = this._attributeSwapQuoteOrders(swapQuote);\n        const {\n            makerAssetAmount,\n            totalTakerAssetAmount,\n            protocolFeeInWeiAmount: protocolFee,\n        } = attributedSwapQuote.bestCaseQuoteInfo;\n        const { orders, gasPrice } = attributedSwapQuote;\n\n        // If ETH was specified as the token to sell then we use the Forwarder\n        const extensionContractType = isETHSell ? ExtensionContractType.Forwarder : ExtensionContractType.None;\n        const {\n            calldataHexString: data,\n            ethAmount: value,\n            toAddress: to,\n        } = await this._swapQuoteConsumer.getCalldataOrThrowAsync(attributedSwapQuote, {\n            useExtensionContract: extensionContractType,\n            extensionContractOpts: {\n                // Apply the Fee Recipient for the Forwarder\n                feeRecipient: FEE_RECIPIENT,\n                feePercentage: FEE_PERCENTAGE,\n            },\n        });\n\n        let gas;\n        if (from) {\n            gas = await this._estimateGasOrThrowRevertErrorAsync({\n                to,\n                data,\n                from,\n                value,\n                gasPrice,\n            });\n        }\n\n        const buyTokenDecimals = await this._fetchTokenDecimalsIfRequiredAsync(buyTokenAddress);\n        const sellTokenDecimals = await this._fetchTokenDecimalsIfRequiredAsync(sellTokenAddress);\n        const unitMakerAssetAmount = toUnitAmount(makerAssetAmount, buyTokenDecimals);\n        const unitTakerAssetAMount = toUnitAmount(totalTakerAssetAmount, sellTokenDecimals);\n        const price =\n            buyAmount === undefined\n                ? unitMakerAssetAmount.dividedBy(unitTakerAssetAMount).decimalPlaces(sellTokenDecimals)\n                : unitTakerAssetAMount.dividedBy(unitMakerAssetAmount).decimalPlaces(buyTokenDecimals);\n\n        const apiSwapQuote = {\n            price,\n            to,\n            data,\n            value,\n            gas,\n            from,\n            gasPrice,\n            protocolFee,\n            buyAmount: makerAssetAmount,\n            sellAmount: totalTakerAssetAmount,\n            orders: this._cleanSignedOrderFields(orders),\n        };\n        return apiSwapQuote;\n    }\n\n    async _estimateGasOrThrowRevertErrorAsync(txData) {\n        // Perform this concurrently\n        // if the call fails the gas estimation will also fail, we can throw a more helpful\n        // error message than gas estimation failure\n        const estimateGasPromise = this._web3Wrapper.estimateGasAsync(txData);\n        const callResult = await this._web3Wrapper.callAsync(txData);\n        throwIfRevertError(callResult);\n        const gas = await estimateGasPromise;\n        return new BigNumber(gas);\n    }\n\n    // tslint:disable-next-line:prefer-function-over-method\n    _attributeSwapQuoteOrders(\n        swapQuote\n    ) {\n        // Where possible, attribute any fills of these orders to the Fee Recipient Address\n        const attributedOrders = swapQuote.orders.map(o => {\n            try {\n                const decodedAssetData = assetDataUtils.decodeAssetDataOrThrow(o.makerAssetData);\n                if (isBridgeAssetData(decodedAssetData)) {\n                    return {\n                        ...o,\n                        feeRecipientAddress: FEE_RECIPIENT,\n                    };\n                }\n                // tslint:disable-next-line:no-empty\n            } catch (err) {}\n            // Default to unmodified order\n            return o;\n        });\n        const attributedSwapQuote = {\n            ...swapQuote,\n            orders: attributedOrders,\n        };\n        return attributedSwapQuote;\n    }\n\n    // tslint:disable-next-line:prefer-function-over-method\n    _cleanSignedOrderFields(orders) {\n        return orders.map(o => ({\n            chainId: o.chainId,\n            exchangeAddress: o.exchangeAddress,\n            makerAddress: o.makerAddress,\n            takerAddress: o.takerAddress,\n            feeRecipientAddress: o.feeRecipientAddress,\n            senderAddress: o.senderAddress,\n            makerAssetAmount: o.makerAssetAmount,\n            takerAssetAmount: o.takerAssetAmount,\n            makerFee: o.makerFee,\n            takerFee: o.takerFee,\n            expirationTimeSeconds: o.expirationTimeSeconds,\n            salt: o.salt,\n            makerAssetData: o.makerAssetData,\n            takerAssetData: o.takerAssetData,\n            makerFeeAssetData: o.makerFeeAssetData,\n            takerFeeAssetData: o.takerFeeAssetData,\n            signature: o.signature,\n        }));\n    }\n    async _fetchTokenDecimalsIfRequiredAsync(tokenAddress) {\n        // HACK(dekz): Our ERC20Wrapper does not have decimals as it is optional\n        // so we must encode this ourselves\n        const known_tokens = getKnownTokens();\n        let decimals = 18;\n        // let decimals = findTokenDecimalsIfExists(tokenAddress, CHAIN_ID);\n        try {\n            decimals = known_tokens.getTokenByAddress(tokenAddress).decimals;\n        } catch (e) {\n            //\n        }\n\n        return decimals;\n    }\n}\n\nlet swapService;\nexport const getAssetSwapper = async (library, web3) => {\n    const relayer = getRelayer();\n    \n    if (!swapService && library){\n        const web3Wrapper = new Web3Wrapper(library);\n        swapService = new SwapService(relayer.getOrderbook(), web3Wrapper.getProvider(), web3Wrapper);\n    }\n\n    return swapService;\n};\n\nconst throwIfRevertError = (result) => {\n    let revertError;\n    try {\n        revertError = RevertError.decode(result, false);\n    } catch (e) {\n        // No revert error\n    }\n    if (revertError) {\n        throw revertError;\n    }\n};\n","import { BigNumber } from \"@0x/utils\";\nimport {tokenAmountInUnits} from \"./tokens\";\n\nexport const computeOrderSizeFromInventoryBalance = (\n    amount,\n    inventoryBalance,\n    isBuy,\n) => {\n    if (isBuy) {\n        return amount.multipliedBy(2).multipliedBy(inventoryBalance);\n    } else {\n        return amount.multipliedBy(2).multipliedBy(new BigNumber(1).minus(inventoryBalance));\n    }\n};\n\n\nexport const computePriceFromQuote = (\n    isSell,\n    quote,\n    baseToken,\n    quoteToken,\n) => {\n    const bestQuote = quote.bestCaseQuoteInfo;\n    const quoteTokenAmount = isSell ? bestQuote.makerAssetAmount : bestQuote.takerAssetAmount;\n    const baseTokenAmount = isSell ? bestQuote.takerAssetAmount : bestQuote.makerAssetAmount;\n    const quoteTokenAmountUnits = new BigNumber(tokenAmountInUnits(quoteTokenAmount, quoteToken.decimals, 18));\n    const baseTokenAmountUnits = new BigNumber(tokenAmountInUnits(baseTokenAmount, baseToken.decimals, 18));\n    const price = quoteTokenAmountUnits.div(baseTokenAmountUnits);\n    return price;\n};\n\n\nexport const computeSpreadPercentage = (buyPrice, sellPrice) => {\n    return sellPrice\n        .minus(buyPrice)\n        .div(sellPrice)\n        .multipliedBy(100);\n};\n\n\nexport const getPricesFromSpread = (\n    buyPrice,\n    sellPrice,\n    newSpreadPercentage,\n) => {\n    const newSpreadUnits = newSpreadPercentage.dividedBy(100);\n    // Increment = (BuyPrice - SellPrice *(1-newSpread))/(2 - newSpread)\n    const incrementPrice = buyPrice\n        .minus(sellPrice.multipliedBy(new BigNumber(1).minus(newSpreadUnits)))\n        .dividedBy(new BigNumber(2).minus(newSpreadUnits));\n    const newBuyPrice = buyPrice.minus(incrementPrice);\n    const newSellPrice = sellPrice.plus(incrementPrice);\n    return [newBuyPrice, newSellPrice];\n};\n","\n/**\n * Represents varying order takerFee types that can be pruned for by OrderPruner.\n */\nexport const OrderPrunerPermittedFeeTypes  ={\n    NoFees: \"NO_FEES\",\n    MakerDenominatedTakerFee: \"MAKER_DENOMINATED_TAKER_FEE\",\n    TakerDenominatedTakerFee: \"TAKER_DENOMINATED_TAKER_FEE\"\n}\n\n\n/**\n * Represents the varying smart contracts that can consume a valid swap quote\n */\nexport const ExtensionContractType = {\n    Forwarder: \"FORWARDER\",\n    None: \"NONE\"\n}\n","import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\n\nimport { RowBetween } from '../Row'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport {tokenAmountInUnits, unitsInTokenAmount} from \"../../utils/spot/tokens\";\nimport {ZERO} from \"../../constants\";\nimport {ETHER, Token} from \"@uniswap/sdk\";\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\nimport {useActiveWeb3React} from \"../../hooks\";\nimport {toAbsoluteUrl} from \"../../lib/helper\";\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  \n  padding: 1rem 0 0;\n  \n  \n  @media (min-width: 768px) {\n    padding-top: 0.75rem;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 40px;\n`\n\nconst Label = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-weight: 400;\n  font-size: .875rem;\n  padding: 0 ;\n  \n  @media (min-width: 768px) {\n    padding: 0 1rem;\n  }\n  \n  \n  @media (max-width: 1400px) {\n    font-weight: 400;\n  }\n`\n\nconst InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  flex: 1;\n  \n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0;\n`\n\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  position: relative;\n  border-radius: 0.42rem;\n`\n\n\nconst StyledTokenName = styled.span`\n  margin-right: auto;\n  font-size:  1rem;\n  font-weight: 500;\n\n  @media (max-width: 1400px) {\n    font-size: .875rem;\n  }\n`\n\nconst Logo = styled.img`\n  width: 34px;\n  height: 34px;\n  min-width: 34px;\n  border-radius: 200px;\n  border: 2px solid ${({ theme }) => theme.text1};\n  margin-right: 15px;\n  \n  @media (max-width: 1400px) {\n    width: 24px;\n    height: 24px;\n    margin-right: 12px;\n    min-width: 24px;\n  }\n`\n\n\nconst CurrencySelect = styled.button`\n  display: flex;\n  align-items: center;\n  height: 56px;\n  font-size: 0.875rem;\n  font-weight: 500;\n  background-color: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.text1};\n  border-bottom-left-radius: 18px;\n  border-top-left-radius: 18px;\n  box-shadow: none;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0.875rem 0.625rem;\n  min-width: 116px;\n  width: 116px;\n  \n  \n  @media (min-width: 768px) {\n  min-width: 178px;\n  width: 178px;\n  padding: .625rem 1rem;\n  font-size: 1rem;\n  font-weight: 700;\n  }\n\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => theme.bg1};\n    outline: none;\n  }\n`\n\nlet BalanceRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  margin-top: 10px;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  font-weight: 400;\n  line-height: 1rem;\n  padding: 0 1rem;\n`\n\nexport default function MarketMakerInputPanel({\n    value,\n    onUserInput,\n    label = 'Input',\n    disable = false,\n    selected,\n    hideInput = false,\n    id,\n    decimals,\n    valueFixedDecimals,\n    min = ZERO,\n    showBalance = true,\n    balanceText,\n}) {\n\n    const [valueStr, setValueStr] = useState(value\n        ? tokenAmountInUnits(value, decimals, valueFixedDecimals)\n        : '')\n\n    const _updateValue = value => {\n\n        const newValue = unitsInTokenAmount(value || '0', decimals);\n        const invalidValue = min && newValue.isLessThan(min);\n        if (invalidValue) {\n            return;\n        }\n\n        onUserInput(newValue);\n        setValueStr(value);\n    };\n\n    useEffect(() => {\n        setValueStr(value ? tokenAmountInUnits(value, decimals, valueFixedDecimals) : '');\n    }, [value])\n\n    return (\n        <InputPanel id={id}>\n            <Container>\n                {!hideInput && (\n                    <LabelRow>\n                        <RowBetween>\n                            <Label>\n                                {label}\n                            </Label>\n                        </RowBetween>\n                    </LabelRow>\n                )}\n                <InputRow style={hideInput ? { padding: '0', borderRadius: '0.42rem' } : {}} selected={disable}>\n\n                    <CurrencySelect\n                        selected={!!selected}\n                        className=\"open-currency-select-button\"\n                    >\n                        {selected && (\n                            <Logo src={toAbsoluteUrl(`/${selected.icon}`)}/>\n                        )}\n                        <Aligner>\n                            <StyledTokenName className=\"token-symbol-container\" active={Boolean(selected)}>\n                                {(selected && selected?.symbol?.length > 20\n                                    ? (selected?.symbol?.slice(0, 4) +\n                                    '...' +\n                                    selected?.symbol?.slice(selected?.symbol?.length - 5, selected?.symbol?.length).toUpperCase())\n                                    : selected.symbol?.toUpperCase()) || `Select`}\n                            </StyledTokenName>\n                        </Aligner>\n                    </CurrencySelect>\n\n                    {!hideInput && (\n                        <InputContainer>\n                            <NumericalInput\n                                className=\"token-amount-input pl-3\"\n                                value={valueStr}\n                                onUserInput={_updateValue}\n                            />\n                        </InputContainer>\n                    )}\n                </InputRow>\n                {selected && showBalance && (\n                    <BalanceRow>\n                        {balanceText ? balanceText() : null}\n                    </BalanceRow>\n                )}\n            </Container>\n        </InputPanel>\n    )\n}\n","import { connect } from 'react-redux';\nimport { Component } from 'react';\nimport styled from 'styled-components';\nimport { BigNumber } from \"@0x/utils\";\nimport {Button} from \"react-bootstrap\";\n\nimport {getQuoteInUsd, getTokensPrice} from \"../../../../state/selectors\";\nimport {fetchTakerAndMakerFee} from \"../../../../state/relayer/actions\";\nimport withWeb3Account from \"../../../../components/hoc/withWeb3Account\";\nimport {ServerState as SwapQuoteState, ZERO} from \"../../../../constants\";\nimport {computeOrderSizeFromInventoryBalance, computePriceFromQuote} from \"../../../../utils/spot/marketMaker\";\nimport Skeleton from \"react-loading-skeleton\";\nimport {formatTokenSymbol, tokenAmountInUnits} from \"../../../../utils/spot/tokens\";\n\nconst Title = styled.h3`\n  margin-top: 0;\n  padding: 0;\n  margin-bottom: 2.25rem;\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: ${({ theme }) => theme.text1};\n`\n\nconst Header = styled.div`\n  margin-bottom: 20px;\n`\n\nconst HeaderTitle = styled(Title)`\n  margin-bottom: 0;\n`\nconst Price = styled(Title)`\n  margin-bottom: 0;\n  opacity: 0.5;\n  cursor: pointer;\n`\n\nconst Content = styled.div`\n  border-radius: 18px;\n  background-color: ${({ theme }) => theme.bg3};\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nconst InnerContent = styled.div`\n  display: grid;\n  grid-gap: 30px 40px;\n  grid-template-columns: 1fr 1fr;\n  margin-bottom: 50px;\n  \n  \n  @media (max-width: 1400px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    margin-bottom: 30px;\n  }\n`\n\nconst InnerRow = styled.div`\n  display: grid;\n  grid-gap: 30px;\n  grid-template-rows: 1fr 1fr 1fr;\n  \n`\n\nconst Cell = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst Label = styled.span`\n  font-weight: 400;\n  font-size: 16px;\n  color: ${({ theme }) => theme.text1};\n`\n\nconst Value = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n  color: ${({ theme }) => theme.text1};\n  opacity: 0.5;\n`\n\nconst Btn = styled(Button)`\n  height: 56px;\n  padding: 10px 20px;\n \n  @media (max-width: 1400px) {\n    &:first-child {\n      margin-bottom: 20px; \n    }\n  } \n`\n\n\nclass MarketMakerDetails extends Component {\n    state = {\n        quoteBuyTokenAmount: ZERO,\n        quoteSellTokenAmount: ZERO,\n        baseBuyTokenAmount: ZERO,\n        baseSellTokenAmount: ZERO,\n        canOrderBeFilled: true,\n        maxAmount: ZERO,\n        priceBuy: ZERO,\n        priceSell: ZERO,\n        geckoPrice: ZERO,\n    };\n\n    render() {\n        const costBuy = this._getCostStringForRender(false);\n        const costSell = this._getCostStringForRender(true);\n        const costBuyText = this._getCostLabelStringForRender(false);\n        const costSellText = this._getCostLabelStringForRender(true);\n        const costBaseBuy = this._getBaseCostStringForRender(false);\n        const costBaseSell = this._getBaseCostStringForRender(true);\n        const costBaseBuyText = this._getBaseCostLabelStringForRender(false);\n        const costBaseSellText = this._getBaseCostLabelStringForRender(true);\n        const priceBuyMedianText = this._getMedianPriceStringForRender(false);\n        const priceSellMedianText = this._getMedianPriceStringForRender(true);\n        const priceMarketTrackerText = this._getPriceMarketRender();\n\n        return (\n            <div className=\"d-flex flex-column\">\n                <Header className=\"d-flex align-items-center justify-content-between\">\n                    <HeaderTitle>Price by Coingecko:</HeaderTitle>\n                    <Price onClick={this._onTrackerPriceClick}>{priceMarketTrackerText}</Price>\n                </Header>\n                <Content>\n                    <InnerContent>\n                        <InnerRow>\n                            <Cell>\n                                <Label>Best Bid:</Label>\n                                <Value>{priceSellMedianText}</Value>\n                            </Cell>\n                            <Cell>\n                                <Label>\n                                    {costBuyText}\n                                </Label>\n                                <Value>{costSell}</Value>\n                            </Cell>\n                            <Cell>\n                                <Label>\n                                    {costBaseBuyText}\n                                </Label>\n                                <Value>{costBaseSell}</Value>\n                            </Cell>\n                        </InnerRow>\n                        <InnerRow>\n                            <Cell>\n                                <Label>Best Ask:</Label>\n                                <Value>{priceBuyMedianText}</Value>\n                            </Cell>\n                            <Cell>\n                                <Label>\n                                    {costSellText}\n                                </Label>\n                                <Value>{costBuy}</Value>\n                            </Cell>\n                            <Cell>\n                                <Label>\n                                    {costBaseSellText}\n                                </Label>\n                                <Value>{costBaseBuy}</Value>\n                            </Cell>\n                        </InnerRow>\n                    </InnerContent>\n\n                    <div className=\"d-flex flex-column flex-xl-row align-items-xl-center align-items-stretch justify-content-between\">\n                        <Btn\n                            variant={'primary'}\n                            disabled={this.props.buyDisabled}\n                            onClick={this.props.onBuy}\n                        >\n                            Place Buy Limit Order\n                        </Btn>\n                        <Btn\n                            disabled={this.props.sellDisabled}\n                            variant={'secondary-light'}\n                            onClick={this.props.onSell}\n                        >\n                            Place Sell Limit Order\n                        </Btn>\n                    </div>\n                </Content>\n            </div>\n        )\n    }\n\n    componentDidUpdate = async (prevProps) => {\n        const newProps = this.props;\n        if (\n            newProps.tokenAmount !== prevProps.tokenAmount ||\n            newProps.sellQuote !== prevProps.sellQuote ||\n            newProps.buyQuote !== prevProps.buyQuote ||\n            newProps.quoteState !== prevProps.quoteState ||\n            newProps.inventoryBalance !== prevProps.inventoryBalance\n        ) {\n            if (newProps.quoteState === SwapQuoteState.Done) {\n                await this._updateOrderDetailsState();\n            }\n        }\n    };\n\n    componentDidMount = async () => {\n        await this._updateOrderDetailsState();\n    };\n\n    _updateOrderDetailsState = async () => {\n        const { sellQuote, buyQuote, baseToken, quoteToken, tokenPrices, inventoryBalance } = this.props;\n        const inventoryBalanceBN = new BigNumber(inventoryBalance).dividedBy(100);\n\n        if (!buyQuote || !sellQuote) {\n            this.setState({ canOrderBeFilled: false });\n            return;\n        }\n        const bestBuyQuote = buyQuote.bestCaseQuoteInfo;\n        const priceBuy = computePriceFromQuote(false, buyQuote, baseToken, quoteToken);\n        const quoteBuyTokenAmount = computeOrderSizeFromInventoryBalance(\n            bestBuyQuote.takerAssetAmount,\n            inventoryBalanceBN,\n            true,\n        );\n        const baseBuyTokenAmount = computeOrderSizeFromInventoryBalance(\n            bestBuyQuote.makerAssetAmount,\n            inventoryBalanceBN,\n            true,\n        );\n\n        const priceSell = computePriceFromQuote(true, sellQuote, baseToken, quoteToken);\n        const bestSellQuote = sellQuote.bestCaseQuoteInfo;\n        const quoteSellTokenAmount = computeOrderSizeFromInventoryBalance(\n            bestSellQuote.makerAssetAmount,\n            inventoryBalanceBN,\n            false,\n        );\n        const baseSellTokenAmount = computeOrderSizeFromInventoryBalance(\n            bestSellQuote.takerAssetAmount,\n            inventoryBalanceBN,\n            false,\n        );\n\n        let geckoPrice;\n        if (tokenPrices) {\n            const tokenPriceQuote = tokenPrices.find(t => t.c_id === quoteToken.c_id);\n            const tokenPriceBase = tokenPrices.find(t => t.c_id === baseToken.c_id);\n            if (tokenPriceQuote && tokenPriceBase) {\n                geckoPrice = tokenPriceBase.price_usd.div(tokenPriceQuote.price_usd);\n            }\n        }\n\n        this.setState({\n            quoteBuyTokenAmount,\n            quoteSellTokenAmount,\n            baseBuyTokenAmount,\n            baseSellTokenAmount,\n            canOrderBeFilled: true,\n            priceBuy,\n            priceSell,\n            geckoPrice,\n        });\n    };\n\n    _getCostStringForRender = (isSell) => {\n        const { canOrderBeFilled } = this.state;\n        const { quoteToken, quoteState, tokenPrices } = this.props;\n        if (quoteState === SwapQuoteState.Loading) {\n            return <Skeleton width={120} />;\n        }\n\n        if (!canOrderBeFilled || quoteState === SwapQuoteState.Error) {\n            return `---`;\n        }\n        let quoteInUSD;\n        if (tokenPrices) {\n            const tokenPrice = tokenPrices.find(t => t.c_id === quoteToken.c_id);\n            if (tokenPrice) {\n                quoteInUSD = tokenPrice.price_usd;\n            }\n        }\n\n        const { quoteBuyTokenAmount, quoteSellTokenAmount } = this.state;\n        if (isSell) {\n            const quoteSellTokenAmountUnits = tokenAmountInUnits(quoteSellTokenAmount, quoteToken.decimals);\n            const costSellAmount = tokenAmountInUnits(\n                quoteSellTokenAmount,\n                quoteToken.decimals,\n                quoteToken.displayDecimals,\n            );\n            if (quoteInUSD) {\n                const quotePriceAmountUSD = new BigNumber(quoteSellTokenAmountUnits).multipliedBy(quoteInUSD);\n                return `${costSellAmount} ${formatTokenSymbol(quoteToken.symbol)} (${quotePriceAmountUSD.toFixed(\n                    2,\n                )} $)`;\n            } else {\n                return `${costSellAmount} ${formatTokenSymbol(quoteToken.symbol)}`;\n            }\n        } else {\n            const quoteBuyTokenAmountUnits = tokenAmountInUnits(quoteBuyTokenAmount, quoteToken.decimals);\n            const costBuyAmount = tokenAmountInUnits(\n                quoteBuyTokenAmount,\n                quoteToken.decimals,\n                quoteToken.displayDecimals,\n            );\n            if (quoteInUSD) {\n                const quotePriceAmountUSD = new BigNumber(quoteBuyTokenAmountUnits).multipliedBy(quoteInUSD);\n                return `${costBuyAmount} ${formatTokenSymbol(quoteToken.symbol)} (${quotePriceAmountUSD.toFixed(2)} $)`;\n            } else {\n                return `${costBuyAmount} ${formatTokenSymbol(quoteToken.symbol)}`;\n            }\n        }\n    };\n\n    _getBaseCostStringForRender = (isSell) => {\n        const { canOrderBeFilled } = this.state;\n        const { baseToken, quoteState, tokenPrices } = this.props;\n        if (quoteState === SwapQuoteState.Loading) {\n            return <Skeleton width={120} />;\n        }\n\n        if (!canOrderBeFilled || quoteState === SwapQuoteState.Error) {\n            return `---`;\n        }\n        let quoteInUSD;\n        if (tokenPrices) {\n            const tokenPrice = tokenPrices.find(t => t.c_id === baseToken.c_id);\n            if (tokenPrice) {\n                quoteInUSD = tokenPrice.price_usd;\n            }\n        }\n\n        const { baseBuyTokenAmount, baseSellTokenAmount } = this.state;\n        if (isSell) {\n            const quoteSellTokenAmountUnits = tokenAmountInUnits(baseSellTokenAmount, baseToken.decimals);\n            const costSellAmount = tokenAmountInUnits(\n                baseSellTokenAmount,\n                baseToken.decimals,\n                baseToken.displayDecimals,\n            );\n            if (quoteInUSD) {\n                const quotePriceAmountUSD = new BigNumber(quoteSellTokenAmountUnits).multipliedBy(quoteInUSD);\n                return `${costSellAmount} ${formatTokenSymbol(baseToken.symbol)} (${quotePriceAmountUSD.toFixed(2)} $)`;\n            } else {\n                return `${costSellAmount} ${formatTokenSymbol(baseToken.symbol)}`;\n            }\n        } else {\n            const quoteBuyTokenAmountUnits = tokenAmountInUnits(baseBuyTokenAmount, baseToken.decimals);\n            const costBuyAmount = tokenAmountInUnits(baseBuyTokenAmount, baseToken.decimals, baseToken.displayDecimals);\n            if (quoteInUSD) {\n                const quotePriceAmountUSD = new BigNumber(quoteBuyTokenAmountUnits).multipliedBy(quoteInUSD);\n                return `${costBuyAmount} ${formatTokenSymbol(baseToken.symbol)} (${quotePriceAmountUSD.toFixed(2)} $)`;\n            } else {\n                return `${costBuyAmount} ${formatTokenSymbol(baseToken.symbol)}`;\n            }\n        }\n    };\n\n    _getMedianPriceStringForRender = (isSell) => {\n        const { canOrderBeFilled, priceBuy, priceSell } = this.state;\n        const price = isSell ? priceSell : priceBuy;\n        const { tokenAmount, quoteToken, quoteState } = this.props;\n\n        if (quoteState === SwapQuoteState.Loading) {\n            return <Skeleton width={120} />;\n        }\n        if (!canOrderBeFilled || quoteState === SwapQuoteState.Error) {\n            return `---`;\n        }\n        if (tokenAmount.eq(0)) {\n            return `---`;\n        }\n        const priceDisplay = price.toFormat(8);\n        return `${priceDisplay} ${formatTokenSymbol(quoteToken.symbol)}`;\n    };\n\n    _getCostLabelStringForRender = (isSell) => {\n        const { qouteInUSD } = this.props;\n        if (qouteInUSD) {\n            return isSell ? 'Quote Sell (USD)' : 'Quote Buy (USD)';\n        } else {\n            return isSell ? 'Quote Sell' : 'Quote Buy';\n        }\n    };\n\n    _getBaseCostLabelStringForRender = (isSell) => {\n        const { qouteInUSD } = this.props;\n        if (qouteInUSD) {\n            return isSell ? 'Base Sell (USD)' : 'Base Buy (USD)';\n        } else {\n            return isSell ? 'Base Sell' : 'Base Buy';\n        }\n    };\n\n    _getPriceMarketRender = () => {\n        const { quoteToken, quoteState } = this.props;\n        const { geckoPrice } = this.state;\n        if (quoteState === SwapQuoteState.Error) {\n            return '---';\n        }\n        if (quoteState === SwapQuoteState.Loading) {\n            return <Skeleton width={120} />;\n        }\n        if (geckoPrice && geckoPrice.gt(0)) {\n            return `${geckoPrice.toFormat(8)} ${formatTokenSymbol(quoteToken.symbol)}`;\n        }\n        return '---';\n    };\n\n    _onTrackerPriceClick = (e) => {\n        const { onTrackerPriceClick } = this.props;\n        const { geckoPrice } = this.state;\n        onTrackerPriceClick(geckoPrice);\n    };\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        qouteInUSD: getQuoteInUsd(state),\n        tokenPrices: getTokensPrice(state),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchTakerAndMakerFee: (amount, price, side, account, library) =>\n            dispatch(fetchTakerAndMakerFee(amount, price, side, side, account, library)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWeb3Account(MarketMakerDetails))\n","import {connect, useDispatch, useSelector} from 'react-redux';\nimport { BigNumber} from \"@0x/utils\";\nimport {useLocation} from \"react-router-dom\";\nimport {useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nimport withBalance from \"../../../../components/hoc/withBalance\";\nimport {\n    getBaseToken,\n    getCurrencyPair, getMinOrderExpireTimeOnBooks,\n    getOrderBuyPriceSelected,\n    getOrderPriceSelected, getOrderSellPriceSelected,\n    getQuoteToken\n} from \"../../../../state/selectors\";\nimport {\n    setOrderSecondsExpirationTime,\n    startBuySellLimitSteps,\n    startMultipleBuySellLimitSteps\n} from \"../../../../state/spotUI/actions\";\nimport {fetchTakerAndMakerFee, setMinOrderExpireTimeOnBooks} from \"../../../../state/relayer/actions\";\nimport { isWeth, getKnownTokens } from \"../../../../utils/known_tokens\";\nimport {\n    computeOrderSizeFromInventoryBalance,\n    computePriceFromQuote,\n    computeSpreadPercentage,\n    getPricesFromSpread,\n} from \"../../../../utils/spot/marketMaker\";\nimport { getExpirationTimeFromSeconds } from \"../../../../utils/spot/timeUtils\";\nimport {\n    formatTokenSymbol,\n    tokenAmountInUnits,\n    tokenAmountInUnitsToBigNumber,\n    unitsInTokenAmount\n} from \"../../../../utils/spot/tokens\";\nimport {OrderSide, ServerState as SwapQuoteState, ZERO} from \"../../../../constants\";\nimport {useActiveWeb3React} from \"../../../../hooks\";\nimport {setMarketTokens} from \"../../../../state/spot/actions\";\nimport {getAssetSwapper} from \"../../../../utils/spot/swap\";\nimport {useDebounce} from \"../../../../hooks/debounce\";\nimport { ResponsiveCard } from '../../../../components/Card';\nimport MarketMakerInputPanel from \"../../../../components/MarketMakerInputPanel\";\nimport MarketMakerDetails from \"./MarketMakerDetails\";\nimport Web3 from \"web3\";\n\nconst Card = styled(ResponsiveCard)`\n    & .card-body {\n      padding: 0;\n    }\n`\n\nconst Title = styled.h3`\n  margin-top: 0;\n  padding: 0;\n  margin-bottom: 2.25rem;\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: ${({ theme }) => theme.text1};\n  \n  \n  @media (max-width: 1400px) {\n    margin-bottom: 2.125rem;\n  }\n`\n\nconst Label = styled(Form.Label)`\n  font-weight: 400;\n  font-size: .875rem;\n  color: ${({ theme }) => theme.text1};\n  opacity: 1;\n  margin-bottom: 1rem;\n  padding-left: 1.25rem;\n  \n  @media (max-width: 1400px) {\n    padding-left: 0;\n  }\n`\n\nconst Control = styled(Form.Control)`\n  font-weight: 500;\n  font-size: 1rem;\n  color: ${({ theme }) => theme.text1};\n  height: 56px;\n  padding: 1rem 1.25rem;\n  background-color: ${({ theme}) => theme.bg1};\n  \n  &:focus,\n  &:hover,\n  &:active {\n    background-color: ${({ theme }) => theme.bg1};\n    color: ${({ theme }) => theme.text1};\n  }\n  \n  ::placeholder {\n    color: ${({ theme }) => theme.text2};\n    opacity: 0.5;\n  }\n`\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 40px;\n  \n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TopContainer = styled(Container)`\n  padding: 40px;\n  border-bottom: 1px solid ${({ theme }) => theme.text3};\n  \n  @media (max-width: 1400px) {\n    padding: 30px;\n  }\n  \n`\n\nconst BottomContainer = styled(Container)`\n  padding: 30px 20px 20px;\n  \n  @media (max-width: 1400px) {\n    padding: 30px;\n  }\n`\n\nconst useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n};\n\nconst TIMEOUT_BTN_ERROR = 2000;\nconst TIMEOUT_CARD_ERROR = 4000;\n\nconst web3 = new Web3(Web3.givenProvider || Web3.providers.HttpProvider(process.env.REACT_APP_NETWORK_URL));\n\nconst MakerContainer = props => {\n    const { account } = useActiveWeb3React();\n    const [marketQuoteState, setMarketQuoteState] = useState(SwapQuoteState.NotLoaded);\n    const [buyQuote, setBuyQuote] = useState();\n    const [sellQuote, setSellQuote] = useState();\n    const [buyPrice, setBuyPrice] = useState();\n    const [sellPrice, setSellPrice] = useState();\n    const [selectedSpread, setSelectedSpread] = useState(0);\n    const [orderExpireTime, setOrderExpireTime] = useState(300);\n    const [selectedInventoryBalance, setSelectedInventoryBalance] = useState(50);\n    const [errorState, setErrorState] = useState({\n        btnMsg: null,\n        cardMsg: null,\n    });\n    const [makerAmountState, setMakerAmountState] = useState(new BigNumber(0));\n    const { web3State, quoteTokenBalance, baseTokenBalance, totalEthBalance } = props;\n\n    const known_tokens = getKnownTokens();\n\n    const selectedBuyPrice = useSelector(getOrderBuyPriceSelected);\n    const selectedSellPrice = useSelector(getOrderSellPriceSelected);\n    const quoteToken = useSelector(getQuoteToken);\n    const baseToken = useSelector(getBaseToken);\n    const minOrderExpirationTimeOnOrderBook = useSelector(getMinOrderExpireTimeOnBooks);\n\n    const [minOrderExpireTime, setMinOrderExpireTime] = useState(minOrderExpirationTimeOnOrderBook);\n\n\n    const dispatch = useDispatch();\n    const query = useQuery();\n    const queryToken = query.get('baseToken');\n    const decimals = baseToken.decimals;\n\n    useEffect(() => {\n        const fetchToken = async () => {\n            if (!queryToken) {\n                return;\n            }\n            if (\n                queryToken.toLowerCase() === baseToken.symbol.toLowerCase() ||\n                queryToken.toLowerCase() === baseToken.address.toLowerCase()\n            ) {\n                return;\n            }\n            const t = await known_tokens.findTokenOrFetchIt(queryToken);\n            if (t) {\n                if (t === baseToken) {\n                    return;\n                } else {\n                    dispatch(setMarketTokens({ baseToken: t, quoteToken }));\n                }\n            }\n        };\n        // tslint:disable-next-line:no-floating-promises\n        fetchToken();\n    }, [queryToken, baseToken]);\n\n    const isWethQuote = quoteTokenBalance && isWeth(quoteTokenBalance.token.symbol);\n    const isWethBase = baseTokenBalance && isWeth(baseTokenBalance.token.symbol);\n\n    const quoteUnits = isWethQuote\n        ? tokenAmountInUnitsToBigNumber(totalEthBalance || ZERO, 18)\n        : tokenAmountInUnitsToBigNumber(\n            (quoteTokenBalance && quoteTokenBalance.balance) || ZERO,\n            (quoteToken && quoteToken.decimals) || 18,\n        );\n\n    const baseBalance = isWethBase ? totalEthBalance : (baseTokenBalance && baseTokenBalance.balance) || ZERO;\n    const stepAmount = new BigNumber(1).div(new BigNumber(10).pow(8));\n    const stepAmountUnits = unitsInTokenAmount(String(stepAmount), decimals);\n    const amount = makerAmountState;\n    const isMakerAmountEmpty = amount === null || amount.isZero();\n    const isMaxAmount = false;\n\n    const isBuyOrderTypeLimitOverflow = computeOrderSizeFromInventoryBalance(\n        tokenAmountInUnitsToBigNumber(makerAmountState, (baseToken && baseToken.decimals) || 18).multipliedBy(\n            buyPrice || ZERO,\n        ),\n        new BigNumber(selectedInventoryBalance).dividedBy(100),\n        false,\n    ).gt(quoteUnits);\n    const isSellOrderTypeLimitOverflow = computeOrderSizeFromInventoryBalance(\n        makerAmountState,\n        new BigNumber(selectedInventoryBalance).dividedBy(100),\n        true,\n    ).gt(baseBalance);\n\n    const isOrderTypeMarketIsEmpty = isMakerAmountEmpty || isMaxAmount;\n\n    const _reset = () => {\n        // setMakerAmountState(new BigNumber(0));\n        // setPriceState(new BigNumber(0));\n        props.onSetOrderSecondsExpirationTime(null);\n    };\n\n    // When clicked on orderbook update prices\n    useEffect(() => {\n        if (selectedBuyPrice && selectedBuyPrice.gt(0)) {\n            setBuyPrice(selectedBuyPrice);\n            if (sellPrice) {\n                setSelectedSpread(computeSpreadPercentage(selectedBuyPrice, sellPrice).toNumber());\n            }\n        }\n    }, [selectedBuyPrice]);\n\n    useEffect(() => {\n        if (selectedSellPrice && selectedSellPrice.gt(0)) {\n            setSellPrice(selectedSellPrice);\n            if (buyPrice) {\n                setSelectedSpread(computeSpreadPercentage(selectedSellPrice, buyPrice).toNumber());\n            }\n        }\n    }, [selectedSellPrice]);\n\n\n    const onCalculateSwapQuote = async (amt) => {\n        // We are fetching the price here\n        const buyParams = {\n            buyTokenAddress: baseToken.address,\n            sellTokenAddress: quoteToken.address,\n            buyAmount: amt,\n            sellAmount: undefined,\n            from: undefined,\n            isETHSell: isWeth(quoteToken.symbol),\n        };\n        const sellParams = {\n            buyTokenAddress: quoteToken.address,\n            sellTokenAddress: baseToken.address,\n            buyAmount: undefined,\n            sellAmount: amt,\n            from: undefined,\n            isETHSell: isWeth(baseToken.symbol),\n        };\n\n        try {\n            setMarketQuoteState(SwapQuoteState.Loading);\n            const assetSwapper = await getAssetSwapper(web3.currentProvider, web3);\n            const bQuote = (await assetSwapper.getSwapQuoteAsync(buyParams));\n            setBuyQuote(bQuote);\n            const sQuote = (await assetSwapper.getSwapQuoteAsync(sellParams));\n            setSellQuote(sQuote);\n            // Add default price\n            const sPrice = computePriceFromQuote(false, bQuote, baseToken, quoteToken);\n            const bPrice = computePriceFromQuote(true, sQuote, baseToken, quoteToken);\n            setBuyPrice(bPrice);\n            setSellPrice(sPrice);\n            setSelectedSpread(computeSpreadPercentage(bPrice, sPrice).toNumber());\n            setMarketQuoteState(SwapQuoteState.Done);\n        } catch (e) {\n            setMarketQuoteState(SwapQuoteState.Error);\n        }\n    };\n\n    const debouncedAmount = useDebounce(makerAmountState, 0);\n    useEffect(() => {\n        if (marketQuoteState === SwapQuoteState.Error) {\n            setErrorState({\n                cardMsg: 'Error fetching quote',\n                btnMsg: 'Try again',\n            });\n            setTimeout(() => {\n                setErrorState({\n                    ...errorState,\n                    btnMsg: null,\n                });\n            }, TIMEOUT_BTN_ERROR);\n\n            setTimeout(() => {\n                setErrorState({\n                    ...errorState,\n                    cardMsg: null,\n                });\n            }, TIMEOUT_CARD_ERROR);\n        } else {\n            if (errorState.cardMsg !== null) {\n                setErrorState({\n                    cardMsg: null,\n                    btnMsg: null,\n                });\n            }\n        }\n    }, [marketQuoteState]);\n\n    useEffect(() => {\n        if (debouncedAmount) {\n            onCalculateSwapQuote(amount);\n        }\n    }, [debouncedAmount]);\n\n    useEffect(() => {\n        if (makerAmountState.isGreaterThan(0)) {\n            onCalculateSwapQuote(amount);\n        }\n    }, [baseToken]);\n\n\n    const handleSubmitError = (error) => {\n        setErrorState({\n            btnMsg: 'Error',\n            cardMsg: error.message,\n        });\n        setTimeout(() => {\n            setErrorState({\n                ...errorState,\n                btnMsg: null,\n            });\n        }, TIMEOUT_BTN_ERROR);\n\n        setTimeout(() => {\n            setErrorState({\n                ...errorState,\n                cardMsg: null,\n            });\n        }, TIMEOUT_CARD_ERROR);\n    };\n\n\n    const onSubmitBuyOrder = async () => {\n        const { tokensBalance, wethBalance } = props;\n        const makerAmount = makerAmountState;\n        const orderSide = OrderSide.Buy;\n        if (!buyPrice) {\n            return;\n        }\n        props.onSetOrderSecondsExpirationTime(new BigNumber(orderExpireTime));\n        const orderFeeData = await props.onFetchTakerAndMakerFee(makerAmount, buyPrice, orderSide);\n        try {\n            const amt = computeOrderSizeFromInventoryBalance(\n                makerAmount,\n                new BigNumber(selectedInventoryBalance).dividedBy(100),\n                false,\n            );\n            await props.onSubmitLimitOrder(amt, buyPrice, orderSide, orderFeeData, tokensBalance, wethBalance);\n        } catch (error) {\n            handleSubmitError(error);\n        }\n        _reset();\n    };\n\n\n    const onSubmitSellOrder = async () => {\n        const { tokensBalance, wethBalance } = props;\n        const makerAmount = makerAmountState;\n        const orderSide = OrderSide.Sell;\n        if (!sellPrice) {\n            return;\n        }\n        await props.onSetOrderSecondsExpirationTime(new BigNumber(orderExpireTime));\n        const orderFeeData = await props.onFetchTakerAndMakerFee(makerAmount, sellPrice, orderSide);\n        try {\n            const amt = computeOrderSizeFromInventoryBalance(\n                makerAmount,\n                new BigNumber(selectedInventoryBalance).dividedBy(100),\n                true,\n            );\n            await props.onSubmitLimitOrder(amt, sellPrice, orderSide, orderFeeData, tokensBalance, wethBalance);\n        } catch (error) {\n            handleSubmitError(error);\n        }\n        _reset();\n    };\n\n    const onUpdateMakerAmount = (newValue) => {\n        setMakerAmountState(newValue);\n    };\n    const updateQuote = () => {\n        onCalculateSwapQuote(makerAmountState);\n    };\n\n\n    const getAmountAvailableLabel = (isBase) => {\n        if (isBase) {\n            if (baseTokenBalance) {\n                const tokenBalanceAmount = isWeth(baseTokenBalance.token.symbol)\n                    ? totalEthBalance\n                    : baseTokenBalance.balance;\n                const baseBalanceString = tokenAmountInUnits(\n                    tokenBalanceAmount,\n                    baseTokenBalance.token.decimals,\n                    baseTokenBalance.token.displayDecimals,\n                );\n                const symbol = formatTokenSymbol(baseTokenBalance.token.symbol);\n                return `Balance: ${baseBalanceString}  ${symbol}`;\n            } else {\n                return null;\n            }\n        } else {\n            if (quoteTokenBalance) {\n                const tokenBalanceAmount = isWeth(quoteTokenBalance.token.symbol)\n                    ? totalEthBalance\n                    : quoteTokenBalance.balance;\n                const quoteBalanceString = tokenAmountInUnits(\n                    tokenBalanceAmount,\n                    quoteTokenBalance.token.decimals,\n                    quoteTokenBalance.token.displayDecimals,\n                );\n                const symbol = formatTokenSymbol(quoteTokenBalance.token.symbol);\n                return `Balance: ${quoteBalanceString}  ${symbol}`;\n            } else {\n                return null;\n            }\n        }\n    };\n\n\n    const updateBuyPrice = (price) => {\n        setBuyPrice(price);\n        if (sellPrice) {\n            setSelectedSpread(computeSpreadPercentage(price, sellPrice).toNumber());\n        }\n    };\n    const updateSellPrice = (price) => {\n        setSellPrice(price);\n        if (buyPrice) {\n            setSelectedSpread(computeSpreadPercentage(buyPrice, price).toNumber());\n        }\n    };\n    const updateSpread = (e) => {\n        const newSpread = new BigNumber(e.currentTarget.value);\n        if (buyPrice && sellPrice) {\n            const prices = getPricesFromSpread(buyPrice, sellPrice, newSpread);\n            setBuyPrice(prices[0]);\n            setSellPrice(prices[1]);\n        }\n\n        setSelectedSpread(newSpread.toNumber());\n    };\n    const updateInventoryBalance = (e) => {\n        setSelectedInventoryBalance(Number(e.currentTarget.value));\n    };\n    const onOrderExpireTimeChange = (e) => {\n        setOrderExpireTime(Number(e.currentTarget.value));\n    };\n    const onMinOrderExpireTimeChange = (e) => {\n        const time = Number(e.currentTarget.value);\n        setMinOrderExpireTime(time);\n        dispatch(setMinOrderExpireTimeOnBooks(time));\n    };\n\n    const onTrackerPriceClick = (price) => {\n        setBuyPrice(price);\n        setSellPrice(price);\n        setSelectedSpread(0);\n    };\n\n    const isListed = baseToken ? baseToken.listed : true;\n    const msg = 'Token inserted by User. Please proceed with caution and do your own research!';\n\n    return (\n        <Card>\n            <TopContainer>\n                <Row className={'custom-row'}>\n                    <Col xs={12}>\n                        <Title>Your Order</Title>\n                    </Col>\n                    <Col xs={12}>\n                        <MarketMakerInputPanel\n                            decimals={decimals}\n                            min={ZERO}\n                            value={amount}\n                            onUserInput={onUpdateMakerAmount}\n                            selected={baseToken}\n                            valueFixedDecimals={8}\n                            label={`Insert Reference Base Amount`}\n                            showBalance={false}\n                        />\n                    </Col>\n                    <Col xs={12}>\n                        <MarketMakerInputPanel\n                            decimals={0}\n                            min={ZERO}\n                            value={buyPrice}\n                            onUserInput={updateBuyPrice}\n                            selected={quoteToken}\n                            valueFixedDecimals={10}\n                            label={`Buy price per Token`}\n                            showBalance={false}\n                        />\n                    </Col>\n                    <Col xs={12}>\n                        <MarketMakerInputPanel\n                            decimals={0}\n                            min={ZERO}\n                            value={sellPrice}\n                            onUserInput={updateSellPrice}\n                            selected={quoteToken}\n                            valueFixedDecimals={10}\n                            label={`Sell price per Token`}\n                            showBalance={false}\n                        />\n                    </Col>\n                    <Col xs={12} lg={4}>\n                        <FormGroup>\n                            <Label>Spread (%)</Label>\n                            <Control type={'number'}\n                                     value={selectedSpread}\n                                     min={-100}\n                                     step={0.0001}\n                                     max={100}\n                                     onChange={updateSpread}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12} lg={8}>\n                        <FormGroup>\n                            <Label>Order Ratio between Bid and Ask (%)</Label>\n                            <Control type={'number'}\n                                     value={selectedInventoryBalance}\n                                     min={0}\n                                     step={1}\n                                     max={100}\n                                     onChange={updateInventoryBalance}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup style={{ marginBottom: 0 }}>\n                            <Label>Order Expire Time (Seconds): </Label>\n                            <Control type={'number'}\n                                     value={orderExpireTime}\n                                     min={20}\n                                     step={1}\n                                     onChange={onOrderExpireTimeChange}\n                            />\n                        </FormGroup>\n                    </Col>\n                </Row>\n            </TopContainer>\n            <BottomContainer>\n                <MarketMakerDetails\n                    tokenAmount={amount}\n                    baseToken={baseToken}\n                    quoteToken={quoteToken}\n                    buyQuote={buyQuote}\n                    sellQuote={sellQuote}\n                    quoteState={marketQuoteState}\n                    inventoryBalance={selectedInventoryBalance}\n                    onTrackerPriceClick={onTrackerPriceClick}\n                    onBuy={onSubmitBuyOrder}\n                    buyDisabled={isOrderTypeMarketIsEmpty || isBuyOrderTypeLimitOverflow}\n                    onSell={onSubmitSellOrder}\n                    sellDisabled={isOrderTypeMarketIsEmpty || isSellOrderTypeLimitOverflow}\n                />\n            </BottomContainer>\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currencyPair: getCurrencyPair(state),\n        orderPriceSelected: getOrderPriceSelected(state),\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSubmitLimitOrder: (amount, price, side, orderFeeData, tokensBalance, wethBalance) =>\n            dispatch(startBuySellLimitSteps(amount, price, side, orderFeeData, tokensBalance, wethBalance)),\n        onSubmitMultipleLimitOrders: (\n            amountBuy,\n            priceBuy,\n            orderBuyFeeData,\n            amountSell,\n            priceSell,\n            orderSellFeeData,\n            tokensBalance,\n            wethBalance\n        ) =>\n            dispatch(\n                startMultipleBuySellLimitSteps(\n                    amountBuy,\n                    priceBuy,\n                    orderBuyFeeData,\n                    amountSell,\n                    priceSell,\n                    orderSellFeeData,\n                    tokensBalance,\n                    wethBalance\n                ),\n            ),\n        onFetchTakerAndMakerFee: (amount, price, side) =>\n            dispatch(fetchTakerAndMakerFee(amount, price, side)),\n        onSetOrderSecondsExpirationTime: (seconds) =>\n            dispatch(setOrderSecondsExpirationTime(seconds)),\n    }\n}\n\nexport default withBalance(connect(mapStateToProps, mapDispatchToProps)(MakerContainer))\n","import { useEffect, useState } from 'react';\n\n// https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport const useDebounce = (value, delay) => {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            // Set debouncedValue to value (passed in) after the specified delay\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            // Return a cleanup function that will be called every time ...\n            // ... useEffect is re-called. useEffect will only be re-called ...\n            // ... if value changes (see the inputs array below).\n            // This is how we prevent debouncedValue from changing if value is ...\n            // ... changed within the delay period. Timeout gets cleared and restarted.\n            // To put it in context, if the user is typing within our app's ...\n            // ... search box, we don't want the debouncedValue to update until ...\n            // ... they've stopped typing for more than 500ms.\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        // Only re-call effect if value changes\n        // You could also add the \"delay\" var to inputs array if you ...\n        // ... need to be able to change that dynamically.\n        [value],\n    );\n\n    return debouncedValue;\n};\n","import styled from \"styled-components\";\n\nimport Page from \"../../components/Page\";\nimport { ResponsiveCard } from \"../../components/Card\";\nimport Orderbook from \"./components/Orderbook\";\nimport Provider from './components/Provider';\nimport MarketFills from \"./components/MarketFills\";\nimport OrderHistory from \"./components/OrderHistory\";\nimport MarketStats from \"./components/MarketStats\";\nimport MakerContainer from \"./components/MakerContainer\";\n\n\nconst Row = styled.div`\n  display: flex;\n  margin-left: -10px;\n  margin-right: -10px;\n  \n  @media (max-width: 1400px) {\n    flex-direction: column;\n    display: ${({ justDesktop }) => justDesktop ? 'none' : \"flex\"};\n  }\n`\nconst Col = styled.div`\n  padding: 0 10px;\n  flex-direction: column;\n  display: ${({ justMobile }) => justMobile ? 'none' : \"flex\"};\n  \n  @media (max-width: 1400px) {\n    display: ${({ justDesktop }) => justDesktop ? 'none' : \"flex\"};\n  }\n`\n\nconst ContainerCard = styled(ResponsiveCard)`\n  display: flex;\n  margin-bottom: 20px;\n    & .card-body {\n      padding: 30px;\n    }\n  \n  @media (min-width: 1400px) {\n    width: 700px;\n    height: 1113px;\n  \n    & .card-body {\n      padding: 135px 20px 20px;\n      display: flex;\n      position: relative;\n    }\n  }\n`\n\nconst MarketMaker = props => {\n\n    return (\n        <Page title={'Market Maker'} morePadding size={'lg'}>\n            <Provider>\n                <Row style={{ marginTop: -30 }}>\n                    <Col>\n                        <MakerContainer/>\n                    </Col>\n                    <Col justDesktop>\n                        <ContainerCard>\n                            <Orderbook />\n                            <MarketFills />\n                        </ContainerCard>\n                    </Col>\n                    <Col justMobile>\n                        <ContainerCard>\n                            <Orderbook />\n                        </ContainerCard>\n                        <ContainerCard>\n                            <MarketFills />\n                        </ContainerCard>\n                    </Col>\n                </Row>\n                <Row className={'justify-content-end'}>\n                    <Col>\n                        <OrderHistory/>\n                    </Col>\n                    <Col>\n                        <MarketStats/>\n                    </Col>\n                </Row>\n            </Provider>\n        </Page>\n    )\n}\n\nexport default MarketMaker;\n"],"sourceRoot":""}