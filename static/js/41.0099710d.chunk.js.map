{"version":3,"sources":["assets/images/governance/pin-start.svg","components/SpaceCard/index.js","pages/Governance/index.js"],"names":["Wrapper","styled","Link","theme","modalBG","loading","bg2","primary","Logo","img","text1","Title","h3","CurrencyName","span","StarWrapper","div","SpaceCard","props","LogoURL","useLogo","id","symbolIndex","to","pinned","src","require","default","width","height","circle","isMobile","style","marginBottom","name","symbol","PageTitle","h2","text3","StyledInputGroup","InputGroup","Governance","dispatch","useDispatch","useState","search","setSearch","useSelector","state","governance","spaces","transformedSpaces","setTransformedSpaces","t","useTranslation","useEffect","fetchSpaces","pinnedSpaces","process","split","map","space","trim","list","Object","keys","key","includes","newSpaces","_","orderBy","filter","JSON","stringify","toLowerCase","Page","title","Row","Col","xs","className","SearchIcon","Form","placeholder","onChange","e","target","value","Array","i","xl","lg","md"],"mappings":"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","file":"static/js/41.0099710d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pin-start.b54a357d.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { isMobile } from 'react-device-detect';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\nimport Skeleton from \"react-loading-skeleton\";\n\nimport {useLogo} from \"../../state/governance/hooks\";\n\nconst Wrapper = styled(Link)`\n  background-color: ${({ theme }) => theme.modalBG};\n  border: 1px solid transparent;\n  padding: 50px;\n  border-radius: 1.25rem;\n  position: relative;\n  transition: .3s ease all;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 1.25rem;\n  \n  @media (max-width: 991px) {\n    padding: 20px 12px 10px;\n    border-radius: 10px;\n  }\n  \n  &:hover {\n    background-color: ${({ theme, loading }) => !loading && theme.bg2};\n    text-decoration: none;\n    border-color: ${({ theme }) => theme.primary};\n  }\n  \n  &:focus,\n  &:active {\n    outline: none;\n  }\n`\n\nconst Logo = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 100px;\n  margin-bottom: 1.25rem;\n  background-color: ${({ theme }) => theme.text1};\n  \n  \n  @media (max-width: 991px) {\n      width: 60px;\n      height: 60px;\n      border-radius: 60px;\n  }\n  \n`\n\nconst Title = styled.h3`\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: ${({ theme }) => theme.text1};\n  margin-bottom: 1.125rem;\n  white-space: pre-wrap;\n  text-align: center;\n  \n  @media (max-width: 991px) {\n    font-size: 1rem;\n    margin-bottom: 0.875rem;\n  }\n`\nconst CurrencyName = styled.span`\n  font-size: 1rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.text1};\n  text-align: center;\n  \n  \n  @media (max-width: 991px) {\n    font-size: 0.875rem;\n    margin-bottom: 0.875rem;\n  }\n`\n\nconst StarWrapper = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  width: 16px;\n  height: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${({ theme }) => theme.primary};\n  \n  \n  @media (max-width: 991px) {\n      right: 10px;\n      top: 10px;\n      width: 10px;\n      height: 10px;\n      \n      svg {\n          width: 10px;\n          height: 10px;\n      }\n  }\n`\n\nconst SpaceCard = props => {\n    const LogoURL = useLogo(props.id, props.symbolIndex);\n    return (\n        <Wrapper to={props.loading ? '#' : `/tools/governance/${props.id}`} loading={props.loading}>\n            {!props.loading && props.pinned && (\n                <StarWrapper>\n                    <SVG src={require('../../assets/images/governance/pin-start.svg').default} width={16} height={16} />\n                </StarWrapper>\n            )}\n            {props.loading ? (<Skeleton circle={true} width={isMobile ? 100 : 66} height={isMobile ? 100 : 66} style={{ marginBottom: '1.25rem'}}/>) : (<Logo src={LogoURL}/>)}\n            <Title>{props.loading ? (<Skeleton height={20} width={isMobile ? 80 : 120}/>) : props.name}</Title>\n            <CurrencyName>{props.loading ? (<Skeleton height={15} width={isMobile ? 50 : 80}/>) : props.symbol}</CurrencyName>\n        </Wrapper>\n    )\n}\n\nexport default SpaceCard;","import React, {useEffect, useState} from 'react';\nimport {Row, Col } from 'react-bootstrap';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport styled from 'styled-components';\nimport _ from 'lodash';\n\nimport SpaceCard from \"../../components/SpaceCard\";\nimport {fetchSpaces} from \"../../state/governance/actions\";\nimport Page from \"../../components/Page\";\nimport SearchIcon from \"../../assets/images/search.svg\";\nimport {useTranslation} from \"react-i18next\";\nimport SVG from \"react-inlinesvg\";\nimport { InputGroupText, InputGroup, InputGroupPrepend, InputGroupFormControl as FormControl } from \"../../components/Form\";\n\nconst PageTitle = styled.h2`\n  color: ${({ theme }) => theme.text1};\n  font-weight: 700;\n  font-size: 1.25rem;\n  margin: -20px 0 45px;\n  \n  \n  @media (max-width: 991px) {\n    font-size: 0.875rem;\n    color: ${({ theme }) => theme.text3};\n    margin: -10px 0 20px;\n    \n  }\n`\n\nconst StyledInputGroup = styled(InputGroup)`\n  margin: -148px 0 45px;\n  \n  \n  @media (max-width: 991px) {\n    margin: 0 0 20px;\n    \n  }\n`\n\nconst Governance = (props) => {\n    const dispatch = useDispatch();\n    const [search, setSearch] = useState('')\n    const {loading, spaces} = useSelector(state => state.governance);\n    const [transformedSpaces, setTransformedSpaces] = useState([]);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        dispatch(fetchSpaces());\n    }, [dispatch])\n\n    useEffect(() => {\n        const pinnedSpaces = process.env.REACT_APP_GOVERNANCE_PINNED.split(',').map(space => space.trim());\n        const list = Object.keys(spaces).map(key => {\n            return {\n                ...spaces[key],\n                pinned: !!pinnedSpaces.includes(key),\n                key\n            };\n        });\n        const newSpaces = _.orderBy(list, ['pinned'], ['desc']).filter(\n            space =>\n                JSON.stringify(space)\n                    .toLowerCase()\n                    .includes(search.toLowerCase())\n        );\n        setTransformedSpaces(newSpaces);\n    }, [search, spaces])\n\n    const searchHandler = (e) => {\n        setSearch(e.target.value);\n    }\n\n\n    return (\n        <Page title={t('governance.title')}>\n            <Row>\n                <Col xs={12} className={'d-flex flex-column flex-lg-row align-items-stretch align-items-lg-center justify-content-between'}>\n                    <PageTitle className=\"card-title\">{t('governance.spaces')}</PageTitle>\n                    <StyledInputGroup className={'w-auto'}>\n                        <InputGroupPrepend>\n                            <InputGroupText>\n                                <SVG src={SearchIcon}/>\n                            </InputGroupText>\n                        </InputGroupPrepend>\n                        <FormControl id=\"inlineFormInputGroup\" placeholder={t('search')} onChange={searchHandler} />\n                    </StyledInputGroup>\n                </Col>\n                <Col xs={12}>\n                    {loading ? (\n                        <Row className={'custom-row'}>\n                            {[...Array(12)].map((value, i) => {\n                                return (\n                                    <Col\n                                        key={`loading-${i}`}\n                                        className={'d-flex'}\n                                        xl={3} lg={4} md={6} xs={6}>\n                                        <SpaceCard\n                                            symbolIndex={'space'}\n                                            id={`loading-${i}`}\n                                            name={`loading-${i}`}\n                                            symbol={`loading-${i}`}\n                                            pinned={false}\n                                            loading={true}\n                                        />\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                    ) : (\n                        <Row className={'custom-row'}>\n                            {transformedSpaces.map((space, i) => {\n                                return (\n                                    <Col\n                                        key={`space-${i}`}\n                                        className={'d-flex'}\n                                        xl={3} lg={4} md={6} xs={6}>\n                                        <SpaceCard\n                                            symbolIndex={'space'}\n                                            id={space.key}\n                                            name={space.name}\n                                            symbol={space.symbol}\n                                            pinned={space.pinned}\n                                        />\n                                    </Col>\n                                )\n                            })}\n\n                        </Row>\n                    )}\n                </Col>\n            </Row>\n        </Page>\n    )\n}\n\nexport default Governance;"],"sourceRoot":""}