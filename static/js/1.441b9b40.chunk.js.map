{"version":3,"sources":["components/Card/index.js","components/Row/index.tsx","components/Column/index.tsx","hooks/useTheme.js","components/TransactionConfirmationModal/index.tsx","components/Button/index.tsx","components/Modal/index.tsx"],"names":["Header","Card","Body","CustomCard","styled","theme","modalBG","text1","margin","marginBottom","marginTop","text4","RCard","CustomHeader","text3","isTable","CustomBody","CustomTitle","h4","ResponsiveCard","props","header","title","children","body","Comp","Row","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Column","ColumnCenter","AutoColumn","useTheme","useContext","ThemeContext","Wrapper","Section","BottomSection","bg2","ConfirmedIcon","ConfirmationPendingContent","onDismiss","pendingText","t","useTranslation","onClick","height","id","active","fontWeight","fontSize","color","textAlign","text2","TransactionSubmittedContent","chainId","hash","strokeWidth","size","primary1","href","getEtherscanLink","style","className","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","red1","TransactionConfirmationModal","isOpen","attemptingTxn","content","useActiveWeb3React","maxHeight","Base","RebassButton","ButtonPrimary","darken","altDisabledStyle","ButtonEmpty","primary","primaryText1","disabled","bg1","lighten","green1","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","backdrop","AnimatedDialogContent","DialogContent","StyledDialogContent","minHeight","mobile","maxWidth","rest","attrs","transparentize","shadow1","css","mediaWidth","upToMedium","upToSmall","Modal","initialFocusRef","fadeTransition","useTransition","config","duration","from","opacity","enter","leave","useEffect","PaddingWidth","scrollDiv","document","createElement","appendChild","scrollbarWidth","getBoundingClientRect","clientWidth","removeChild","_getScrollbarWidth","paddingRight","useSpring","y","mass","tension","friction","set","bind","useGesture","onDrag","state","down","movement","velocity","direction","map","item","key","setTimeout","isMobile","aria-label","tabIndex"],"mappings":"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","file":"static/js/1.441b9b40.chunk.js","sourcesContent":["import { Card } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst { Header, Body } = Card;\n\nexport const CustomCard = styled(Card)`\n  background-color: ${({ theme }) => theme.modalBG };\n  color: ${({ theme }) => theme.text1};\n  margin-bottom: ${({margin, marginBottom}) => marginBottom ? `${marginBottom}px` : margin ? `${margin}px` : '20px'};\n  margin-top:  ${({margin, marginTop}) => marginTop ? `${marginTop}px` : margin ? `${margin}px` : '0'};;\n  border-radius: 18px;\n  border: 1px solid ${({ theme }) => theme.text4};\n`\n\nexport const RCard = styled(CustomCard)`\n  @media (max-width: 767px) {\n      margin-left: -30px;\n      margin-right: -30px;\n      border-radius: 0;\n      \n      .card-body {\n        padding-left: 30px;\n        padding-right: 30px;\n      }\n  }\n \n`\n\nexport const CustomHeader = styled(Header)`\n  border-bottom-color: ${({ theme }) => theme.text3};\n  background-color: transparent;\n  padding: 20px;\n  \n  \n  @media (min-width: 768px) {\n  padding: ${({ isTable }) => isTable ? '30px 60px' : '30px'};\n  }\n`\n\nexport const CustomBody = styled(Body)`\n  padding: 20px;\n  background-color: transparent;\n  \n  \n  @media (min-width: 768px) {\n  padding: ${({ isTable }) => isTable ? '18px 48px' : '30px'};\n  }\n`\n\nexport const CustomTitle = styled.h4`\n    margin: 0;\n    font-weight: bold;\n    color: ${({ theme }) => theme.text1};\n    font-size: 1.25rem;\n`\n\nconst Comp = props => {\n    return (\n        <CustomCard {...props}>\n            {props.header && (\n                <CustomHeader isTable={props.isTable}>\n                    {props.title && (\n                        <CustomTitle>{props.title}</CustomTitle>\n                    )}\n                    {props.header}\n                </CustomHeader>\n            )}\n            <CustomBody isTable={props.isTable}>\n                {props.children || props.body}\n            </CustomBody>\n        </CustomCard>\n    )\n}\nexport const ResponsiveCard = props => {\n    return (\n        <RCard {...props}>\n            {props.header && (\n                <CustomHeader isTable={props.isTable}>\n                    {props.title && (\n                        <CustomTitle>{props.title}</CustomTitle>\n                    )}\n                    {props.header}\n                </CustomHeader>\n            )}\n            <CustomBody isTable={props.isTable}>\n                {props.children || props.body}\n            </CustomBody>\n        </RCard>\n    )\n}\n\nexport default Comp;\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{\n    width?: string\n    align?: string\n    justify?: string\n    padding?: string\n    border?: string\n    borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { useContext} from \"react\";\nimport { ThemeContext } from \"styled-components\";\n\n\nexport default function useTheme() {\n    return useContext(ThemeContext);\n}","import { ChainId } from '@uniswap/sdk'\nimport React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport Modal from '../Modal'\nimport { ExternalLink } from '../../theme'\nimport { Text } from 'rebass'\nimport { CloseIcon } from '../../theme/components'\nimport { RowBetween } from '../Row'\nimport { AlertTriangle, ArrowUpCircle } from 'react-feather'\nimport { ButtonPrimary } from '../Button'\nimport { AutoColumn, ColumnCenter } from '../Column'\nimport Loading from '../Loading'\nimport Button from '../UI/Button';\n\nimport { getEtherscanLink } from '../../utils'\nimport { useActiveWeb3React } from '../../hooks'\nimport useTheme from \"../../hooks/useTheme\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\nconst Section = styled(AutoColumn)`\n  padding: 30px;\n`\n\nconst BottomSection = styled(Section)`\n  background-color: ${({ theme }) => theme.bg2};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  flex: 1;\n  \n  @media (max-width: 1199px) {\n    border-radius: 0;\n  }\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 60px 0;\n`\n\n\nexport function ConfirmationPendingContent({ onDismiss, pendingText }: { onDismiss: () => void; pendingText: string }) {\n  const theme = useTheme()\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <div />\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <ConfirmedIcon>\n          <Loading width={90} height={90} id={'confirmation_pending'} active/>\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify={'center'}>\n          <Text fontWeight={500} fontSize={20}>\n            {t('waitingForConfirmation')}\n          </Text>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <Text fontWeight={600} fontSize={14} color=\"\" textAlign=\"center\">\n              {pendingText}\n            </Text>\n          </AutoColumn>\n          <Text fontSize={12} color={theme.text2} textAlign=\"center\">\n            {t('confirmMessage')}\n          </Text>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId | undefined\n}) {\n  const theme = useContext(ThemeContext)\n  const { t } = useTranslation();\n\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <div />\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <ConfirmedIcon>\n          <ArrowUpCircle strokeWidth={0.5} size={90} color={theme.primary1} />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify={'center'}>\n          <Text fontWeight={500} fontSize={20}>\n            {t('txnSubmitted')}\n          </Text>\n          {chainId && hash && (\n            <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>\n              <Text fontWeight={500} fontSize={14} color={theme.primary1}>\n                {t('viewOnEtherscan')}\n              </Text>\n            </ExternalLink>\n          )}\n          <Button onClick={onDismiss} style={{ margin: '20px 0 0 0' }} className={'btn-block'}>\n            {t('close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  title,\n  bottomContent,\n  onDismiss,\n  topContent\n}: {\n  title: string\n  onDismiss: () => void\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <Text fontWeight={500} fontSize={20}>\n            {title}\n          </Text>\n          <CloseIcon onClick={onDismiss} className={'d-none d-xl-flex'} />\n        </RowBetween>\n        {topContent()}\n      </Section>\n      <BottomSection gap=\"12px\">{bottomContent()}</BottomSection>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const theme = useContext(ThemeContext)\n  const { t } = useTranslation();\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <Text fontWeight={500} fontSize={20}>\n            {t('error')}\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <AutoColumn style={{ marginTop: 20, padding: '2rem 0' }} gap=\"24px\" justify=\"center\">\n          <AlertTriangle color={theme.red1} style={{ strokeWidth: 1.5 }} size={64} />\n          <Text fontWeight={500} fontSize={16} color={theme.red1} style={{ textAlign: 'center', width: '85%' }}>\n            {message}\n          </Text>\n        </AutoColumn>\n      </Section>\n      <BottomSection gap=\"12px\">\n        <ButtonPrimary onClick={onDismiss}>{t('dismiss')}</ButtonPrimary>\n      </BottomSection>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n}\n\nexport default function TransactionConfirmationModal({\n  isOpen,\n  onDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content\n}: ConfirmationModalProps) {\n  const { chainId } = useActiveWeb3React()\n\n  if (!chainId) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent chainId={chainId} hash={hash} onDismiss={onDismiss} />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { darken, lighten } from 'polished'\n\nimport { RowBetween } from '../Row'\nimport { ChevronDown } from 'react-feather'\nimport { Button as RebassButton, ButtonProps } from 'rebass/styled-components'\n\nconst Base = styled(RebassButton)<{\n  padding?: string\n  width?: string\n  borderRadius?: string\n  altDisabledStyle?: boolean\n}>`\n  padding: ${({ padding }) => (padding ? padding : '18px')};\n  width: ${({ width }) => (width ? width : '100%')};\n  font-weight: 500;\n  text-align: center;\n  border-radius: 12px;\n  border-radius: ${({ borderRadius }) => borderRadius && borderRadius};\n  outline: none;\n  border: 1px solid transparent;\n  color: ${({ theme }) => theme.text1};\n  text-decoration: none;\n  display: flex;\n  justify-content: center;\n  flex-wrap: nowrap;\n  align-items: center;\n  cursor: pointer;\n  position: relative;\n  z-index: 1;\n  &:disabled {\n    cursor: auto;\n  }\n\n  > * {\n    user-select: none;\n  }\n`\n\nexport const ButtonPrimary = styled(Base)`\n  background-color: ${({ theme }) => theme.primary1};\n  color: ${({ theme }) => theme.text1};\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.05, theme.primary1)};\n    background-color: ${({ theme }) => darken(0.05, theme.primary1)};\n  }\n  &:hover {\n    background-color: ${({ theme }) => darken(0.05, theme.primary1)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.1, theme.primary1)};\n    background-color: ${({ theme }) => darken(0.1, theme.primary1)};\n  }\n  &:disabled {\n    background-color: ${({ theme, altDisabledStyle }) => (altDisabledStyle ? theme.primary1 : theme.bg2)};\n    color: ${({ theme, altDisabledStyle }) => (altDisabledStyle ? theme.text2 : theme.text1)};\n    cursor: auto;\n    box-shadow: none;\n    border: 1px solid transparent;\n    outline: none;\n    opacity: ${({ altDisabledStyle }) => (altDisabledStyle ? '0.7' : '1')};\n  }\n`\n\nexport const ButtonLight = styled(Base)`\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.primaryText1};\n  font-size: 16px;\n  font-weight: 500;\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary)};\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary)};\n  }\n  &:hover {\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme, disabled }) => !disabled && darken(0.05, theme.primary)};\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.primary)};\n  }\n  :disabled {\n    opacity: 0.4;\n    :hover {\n      cursor: auto;\n      background-color: ${({ theme }) => theme.primary};\n      box-shadow: none;\n      border: 1px solid transparent;\n      outline: none;\n    }\n  }\n`\n\nexport const ButtonGray = styled(Base)`\n  background-color: ${({ theme }) => theme.bg2};\n  color: ${({ theme }) => theme.text2};\n  font-size: 16px;\n  font-weight: 500;\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme, disabled }) => !disabled && darken(0.05, theme.bg2)};\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.bg2)};\n  }\n  &:hover {\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.bg2)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme, disabled }) => !disabled && darken(0.1, theme.bg2)};\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.1, theme.bg2)};\n  }\n`\n\nexport const ButtonSecondary = styled(Base)`\n  border: 1px solid ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.primary1};\n  background-color: transparent;\n  font-size: 16px;\n  border-radius: 12px;\n  padding: ${({ padding }) => (padding ? padding : '10px')};\n\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme }) => theme.primary};\n    border: 1px solid ${({ theme }) => theme.primary};\n  }\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.primary};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme }) => theme.primary};\n    border: 1px solid ${({ theme }) => theme.primary};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n  a:hover {\n    text-decoration: none;\n  }\n`\n\nexport const ButtonPink = styled(Base)`\n  background-color: ${({ theme }) => theme.primary1};\n  color: ${({ theme }) => theme.text1};\n\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.05, theme.primary1)};\n    background-color: ${({ theme }) => darken(0.05, theme.primary1)};\n  }\n  &:hover {\n    background-color: ${({ theme }) => darken(0.05, theme.primary1)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.1, theme.primary1)};\n    background-color: ${({ theme }) => darken(0.1, theme.primary1)};\n  }\n  &:disabled {\n    background-color: ${({ theme }) => theme.primary1};\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nexport const ButtonOutlined = styled(Base)`\n  border: 1px solid ${({ theme }) => theme.bg2};\n  background-color: transparent;\n  color: ${({ theme }) => theme.text1};\n\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.modalBG};\n  }\n  &:hover {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.modalBG};\n  }\n  &:active {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.modalBG};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nexport const ButtonEmpty = styled(Base)`\n  background-color: transparent;\n  color: ${({ theme }) => theme.primary1};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:focus {\n    text-decoration: underline;\n  }\n  &:hover {\n    text-decoration: underline;\n  }\n  &:active {\n    text-decoration: underline;\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nexport const ButtonWhite = styled(Base)`\n  border: 1px solid #edeef2;\n  background-color: ${({ theme }) => theme.bg1};\n  color: black;\n\n  &:focus {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    box-shadow: 0 0 0 1pt ${darken(0.05, '#edeef2')};\n  }\n  &:hover {\n    box-shadow: 0 0 0 1pt ${darken(0.1, '#edeef2')};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${darken(0.1, '#edeef2')};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nconst ButtonConfirmedStyle = styled(Base)`\n  background-color: ${({ theme }) => lighten(0.5, theme.green1)};\n  color: ${({ theme }) => theme.green1};\n  border: 1px solid ${({ theme }) => theme.green1};\n\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n  }\n`\n\nconst ButtonErrorStyle = styled(Base)`\n  background-color: ${({ theme }) => theme.red1};\n  border: 1px solid ${({ theme }) => theme.red1};\n\n  &:focus {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.05, theme.red1)};\n    background-color: ${({ theme }) => darken(0.05, theme.red1)};\n  }\n  &:hover {\n    background-color: ${({ theme }) => darken(0.05, theme.red1)};\n  }\n  &:active {\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.1, theme.red1)};\n    background-color: ${({ theme }) => darken(0.1, theme.red1)};\n  }\n  &:disabled {\n    opacity: 50%;\n    cursor: auto;\n    box-shadow: none;\n    background-color: ${({ theme }) => theme.red1};\n    border: 1px solid ${({ theme }) => theme.red1};\n  }\n`\n\nexport function ButtonConfirmed({\n  confirmed,\n  altDisabledStyle,\n  ...rest\n}: { confirmed?: boolean; altDisabledStyle?: boolean } & ButtonProps) {\n  if (confirmed) {\n    return <ButtonConfirmedStyle {...rest} />\n  } else {\n    return <ButtonPrimary {...rest} altDisabledStyle={altDisabledStyle} />\n  }\n}\n\nexport function ButtonError({ error, ...rest }: { error?: boolean } & ButtonProps) {\n  if (error) {\n    return <ButtonErrorStyle {...rest} />\n  } else {\n    return <ButtonPrimary {...rest} />\n  }\n}\n\nexport function ButtonDropdown({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\n  return (\n    <ButtonPrimary {...rest} disabled={disabled}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        <ChevronDown size={24} />\n      </RowBetween>\n    </ButtonPrimary>\n  )\n}\n\nexport function ButtonDropdownLight({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\n  return (\n    <ButtonOutlined {...rest} disabled={disabled}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        <ChevronDown size={24} />\n      </RowBetween>\n    </ButtonOutlined>\n  )\n}\n\nexport function ButtonRadio({ active, ...rest }: { active?: boolean } & ButtonProps) {\n  if (!active) {\n    return <ButtonWhite {...rest} />\n  } else {\n    return <ButtonPrimary {...rest} />\n  }\n}\n","import React, {useEffect} from 'react'\nimport styled, { css } from 'styled-components'\nimport { animated, useTransition, useSpring } from 'react-spring'\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\nimport { isMobile } from 'react-device-detect'\nimport '@reach/dialog/styles.css'\nimport { transparentize } from 'polished'\nimport { useGesture } from 'react-use-gesture'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 1100;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: ${({ theme }) => theme.backdrop};\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, maxWidth, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog'\n})`\n  overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    background-color: ${({ theme }) => theme.modalBG};\n    box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadow1)};\n    padding: 0;\n    width: 50vw;\n    overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n    overflow-x: hidden;\n\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    ${({ maxWidth }) =>\n    maxWidth &&\n    css`\n        max-width: ${maxWidth}px;\n      `}\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 18px\n    ;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      margin: 0;\n    `}\n    ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      ${mobile &&\n        css`\n          width: 100vw;\n          border-radius: 20px;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        `}\n    `}\n  }\n`\n\ninterface ModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  maxWidth?: number\n  initialFocusRef?: React.RefObject<any>\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 90,\n  maxWidth = 420,\n  initialFocusRef,\n  children\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 }\n  })\n\n  const _getScrollbarWidth = () => {\n    const scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    document.body.appendChild(scrollDiv)\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth\n    document.body.removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n  useEffect(() => {\n      if(isOpen){\n        const PaddingWidth = _getScrollbarWidth();\n        document.body.style.paddingRight = `${PaddingWidth}px`\n      }\n  }, [isOpen])\n\n  const [, set] = useSpring(() => ({ y: 0, config: { mass: 1, tension: 210, friction: 20 } }))\n  const bind = useGesture({\n    onDrag: state => {\n      set({\n        y: state.down ? state.movement[1] : 0\n      })\n      if (state.movement[1] > 300 || (state.velocity > 3 && state.direction[1] > 0)) {\n        onDismiss()\n      }\n    }\n  })\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogOverlay key={key} style={props} onDismiss={() => {\n              onDismiss()\n              setTimeout(() => {\n                document.body.style.paddingRight = `0`\n              }, 200)\n            }} initialFocusRef={initialFocusRef}>\n              <StyledDialogContent\n                {...(isMobile\n                  ? {\n                      ...bind(),\n                    }\n                  : {})}\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                maxWidth={maxWidth}\n                mobile={isMobile}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {children}\n              </StyledDialogContent>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n"],"sourceRoot":""}