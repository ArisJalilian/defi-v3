{"version":3,"sources":["components/Card/index.js","components/Row/index.tsx","components/Column/index.tsx","components/hoc/withWeb3Account.tsx","components/NumericalInput/index.tsx","components/Modal/index.tsx","assets/images/dropdown.svg","http/instantSwap/OneInch.js","http/instantSwap/Godex.js","http/instantSwap/dexAg.js","http/instantSwap/SimpleSwap.js","http/instantSwap/Stealthex.js","http/instantSwap/index.js","components/SwapSelectModal/CurrencyList.js","components/SwapSelectModal/index.js","components/SwapInputPanel/index.js","pages/InstantSwap/index.js"],"names":["Header","Card","Body","CustomCard","styled","theme","modalBG","text1","margin","marginBottom","marginTop","text4","RCard","CustomHeader","text3","isTable","CustomBody","CustomTitle","h4","ResponsiveCard","props","header","title","children","body","Comp","Row","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Column","ColumnCenter","AutoColumn","withWeb3Account","Component","context","useActiveWeb3React","toggleWalletModal","useWalletModalToggle","web3","StyledInput","input","error","red1","bg3","size","reverse","noBorder","inputRegex","RegExp","Input","React","memo","value","onUserInput","placeholder","rest","onChange","event","nextUserInput","target","replace","test","escapeRegExp","inputMode","autoComplete","autoCorrect","type","pattern","minLength","maxLength","spellCheck","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","backdrop","AnimatedDialogContent","DialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","maxWidth","attrs","transparentize","shadow1","css","mediaWidth","upToMedium","upToSmall","Modal","onDismiss","initialFocusRef","fadeTransition","useTransition","config","duration","from","opacity","enter","leave","useEffect","PaddingWidth","scrollDiv","document","createElement","className","appendChild","scrollbarWidth","getBoundingClientRect","clientWidth","removeChild","_getScrollbarWidth","style","paddingRight","useSpring","y","mass","tension","friction","set","bind","useGesture","onDrag","state","down","movement","velocity","direction","map","item","key","setTimeout","isMobile","aria-label","tabIndex","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","stroke","SvgDropdown","_ref","svgRef","titleId","height","viewBox","fill","xmlns","ref","id","ForwardRef","OneInchApi","instance","axios","create","baseURL","payload","getTokens","getProtocols","getHealthcheck","getQuote","getSwap","getSpender","getApprove","get","query","encodeQuery","referrerAddress","ONE_INCH_REFERRER_ACCOUNT","fee","ONE_INCH_FEE_PERCENTAGE","GodexApi","getRate","createTransaction","getTransaction","getTransactionStatus","post","DexAgApi","SimpleSwapApi","apiKey","process","interceptors","response","use","data","fetchAllCurrencies","fetchAllPairs","fetchCurrencyInfo","getExchange","getRange","getMarkets","Promise","resolve","reject","postNewExchange","obj","stringify","result","queryString","injectApiKey","amount","rate","range","min","max","JSON","headers","StealthexApi","symbol","currency_from","currency_to","estimated_amount","min_amount","max_amount","paraswap","ParaSwap","oneInch","godex","dexag","api","sdk","DEXAG","fromProvider","window","ethereum","simpleSwap","stealthex","MenuItem","disabled","bg2","selected","Logo","img","StyledBalanceText","Text","StyledText","Symbol","CurrencyRow","currency","onSelect","isSelected","onClick","src","logoURI","alt","name","fontWeight","justifySelf","CurrencyList","currencies","selectedCurrency","onCurrencySelect","fixedListRef","useCallback","index","address","itemKey","itemData","itemCount","itemSize","StyledColumn","HeaderContainer","SwapSelectModal","useContext","ThemeContext","useState","searchQuery","setSearchQuery","fixedList","useRef","inputRef","filteredTokens","useMemo","filter","token","toLowerCase","includes","handleInput","current","scrollTo","handleCurrencySelect","flex","bg","SearchIcon","Form","disableWidth","InputRow","flexRowNoWrap","Label","span","Balance","InputContainer","LabelRow","StyledDropDown","DropDown","Aligner","InputPanel","flexColumnNoWrap","StyledTokenName","active","CurrencySelect","button","bg4","SwapInputPanel","label","disable","hideInput","disableCurrencySelect","onChangeBalance","balance","undefined","t","useTranslation","Token","chainId","decimals","modalOpen","setModalOpen","account","selectedCurrencyBalance","useCurrencyBalance","ETHER","handleDismissSearch","balanceInput","toSignificant","Boolean","slice","NumericalInput","val","HEX_REGEX","SwapButton","Button","StyledRow","RateText","ProgressContainer","PlatformCard","primary","InstantSwap","getBuyStates","setState","promiseHandler","callback","then","catch","getParaswapSortedRates","rates","_","orderBy","others","getDexagSortedRates","getSortedRates","transformRates","apiRates","toTokenAmount","push","pair","destination","platform","forEach","supportedDEXes","exchange","unit","dex","Number","price","getSortedResult","sortedParts","transformedRates","sortBy","o","fetchPrices","a","deposit","loading","loadingState","all","loaded","fromAmount","dexagParams","to","fromTokenAddress","toTokenAddress","getPrice","fixed","SIMPLE_SWAP_FIXED","toFixed","toast","showMore","hasEnoughBalance","onSwapTokens","prevState","onUserInputHandler","selectRate","setBuyState","buyState","setDefaultBuyState","oneInchBuyHandler","canExchange","allowance","ZERO","spenderRes","spender","BigNumber","times","toUpperCase","contract","getContract","ERC20_ABI","library","functions","isGreaterThan","maxAllowance","pow","minus","approve","awaitTransactionSuccessAsync","hash","txn","fromAddress","slippage","res","tx","eth","sendTransaction","err","transactionHash","code","isExchangeInProgress","success","open","status","paraSwapBuyHandler","setWeb3Provider","toAmount","getAllowance","allowanceRes","approveToken","selectedRoute","find","txRoute","bestRoute","buildTx","PARASWAP_REFERRER_ACCOUNT","txParams","message","dexagBuyHandler","valid","registerStatusHandler","getTrade","validate","trade","simpleSwapBuyHandler","address_to","showQrModal","orderType","order","stealthexBuyHandler","amount_from","console","log","buyHandler","godexBuyHandler","toggleShowMore","Web3","givenProvider","InstantSwapApi","typeTimeout","abiDecoder","AbiDecoder","tokens","str","Error","txHash","pollingIntervalMs","timeoutMs","isHexString","assert","isNumber","getTransactionReceipt","transactionReceipt","logsWithDecodedArgs","logs","tryToDecodeLogOrNoop","transactionReceiptWithDecodedLogArgs","wasTimeoutExceeded","txReceiptPromise","intervalId","intervalUtils","setAsyncExcludingInterval","clearAsyncExcludingInterval","txReceipt","awaitTransactionMinedAsync","receipt","Page","Col","xs","md","offset","fontSize","ProgressBar","now","variant","toAbsoluteUrl","DEXesImages","DEXesName","display","flexBasis","minWidth","show","centered","onHide","paddingTop","paddingBottom","address_from","fgColor","darkMode","bgColor","crypto","contextType","connect","user","userSlippageTolerance","userDarkMode","withTranslation"],"mappings":"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","file":"static/js/27.1bea7d0e.chunk.js","sourcesContent":["import { Card } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst { Header, Body } = Card;\n\nexport const CustomCard = styled(Card)`\n  background-color: ${({ theme }) => theme.modalBG };\n  color: ${({ theme }) => theme.text1};\n  margin-bottom: ${({margin, marginBottom}) => marginBottom ? `${marginBottom}px` : margin ? `${margin}px` : '20px'};\n  margin-top:  ${({margin, marginTop}) => marginTop ? `${marginTop}px` : margin ? `${margin}px` : '0'};;\n  border-radius: 18px;\n  border: 1px solid ${({ theme }) => theme.text4};\n`\n\nexport const RCard = styled(CustomCard)`\n  @media (max-width: 767px) {\n      margin-left: -30px;\n      margin-right: -30px;\n      border-radius: 0;\n      \n      .card-body {\n        padding-left: 30px;\n        padding-right: 30px;\n      }\n  }\n \n`\n\nexport const CustomHeader = styled(Header)`\n  border-bottom-color: ${({ theme }) => theme.text3};\n  background-color: transparent;\n  padding: 20px;\n  \n  \n  @media (min-width: 768px) {\n  padding: ${({ isTable }) => isTable ? '30px 60px' : '30px'};\n  }\n`\n\nexport const CustomBody = styled(Body)`\n  padding: 20px;\n  background-color: transparent;\n  \n  \n  @media (min-width: 768px) {\n  padding: ${({ isTable }) => isTable ? '18px 48px' : '30px'};\n  }\n`\n\nexport const CustomTitle = styled.h4`\n    margin: 0;\n    font-weight: bold;\n    color: ${({ theme }) => theme.text1};\n    font-size: 1.25rem;\n`\n\nconst Comp = props => {\n    return (\n        <CustomCard {...props}>\n            {props.header && (\n                <CustomHeader isTable={props.isTable}>\n                    {props.title && (\n                        <CustomTitle>{props.title}</CustomTitle>\n                    )}\n                    {props.header}\n                </CustomHeader>\n            )}\n            <CustomBody isTable={props.isTable}>\n                {props.children || props.body}\n            </CustomBody>\n        </CustomCard>\n    )\n}\nexport const ResponsiveCard = props => {\n    return (\n        <RCard {...props}>\n            {props.header && (\n                <CustomHeader isTable={props.isTable}>\n                    {props.title && (\n                        <CustomTitle>{props.title}</CustomTitle>\n                    )}\n                    {props.header}\n                </CustomHeader>\n            )}\n            <CustomBody isTable={props.isTable}>\n                {props.children || props.body}\n            </CustomBody>\n        </RCard>\n    )\n}\n\nexport default Comp;\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{\n    width?: string\n    align?: string\n    justify?: string\n    padding?: string\n    border?: string\n    borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import {useActiveWeb3React} from \"../../hooks\";\nimport {useWalletModalToggle} from \"../../state/application/hooks\";\n\nconst withWeb3Account = (Component: any) => {\n    return (props: any) => {\n        const context = useActiveWeb3React();\n        const toggleWalletModal = useWalletModalToggle()\n        return <Component\n            web3={context}\n            toggleWalletModal={toggleWalletModal}\n            { ...props }/>\n    }\n}\n\nexport default withWeb3Account;","import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string, noBorder?: boolean, reverse?: boolean, size?: string }>`\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  font-family: inherit;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.bg3};\n  font-size: 1rem;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  height: ${({ size}) => size === 'sm' ? '48px' : '56px'};\n  border-bottom-right-radius: ${({ reverse }) => reverse ? '0' :  `1.125rem`};\n  border-top-right-radius: ${({ reverse }) => reverse ? '0' :  `1.125rem`};\n  border-bottom-left-radius: ${({ reverse }) => reverse ? '1.125rem' :  `0`};\n  border-top-left-radius: ${({ reverse }) => reverse ? '1.125rem' :  `0`};\n  padding-right: 0.625rem;\n  padding-left: ${({ noBorder, reverse }) => reverse ? '1.375rem' : noBorder ? '0.625rem' : `1.5rem`};\n  -webkit-appearance: textfield;\n  border-left: ${({ theme, noBorder }) => noBorder ? 'none' :  `3px solid ${theme.modalBG}`};\n  \n  @media (min-width: 768px) {\n    \n    padding-right: 4.5625rem;\n  }\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  size,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  size?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={event => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      size={size}\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import React, {useEffect} from 'react'\nimport styled, { css } from 'styled-components'\nimport { animated, useTransition, useSpring } from 'react-spring'\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\nimport { isMobile } from 'react-device-detect'\nimport '@reach/dialog/styles.css'\nimport { transparentize } from 'polished'\nimport { useGesture } from 'react-use-gesture'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 1100;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: ${({ theme }) => theme.backdrop};\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, maxWidth, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog'\n})`\n  overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    background-color: ${({ theme }) => theme.modalBG};\n    box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadow1)};\n    padding: 0;\n    width: 50vw;\n    overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n    overflow-x: hidden;\n\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    ${({ maxWidth }) =>\n    maxWidth &&\n    css`\n        max-width: ${maxWidth}px;\n      `}\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 18px\n    ;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      margin: 0;\n    `}\n    ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      ${mobile &&\n        css`\n          width: 100vw;\n          border-radius: 20px;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        `}\n    `}\n  }\n`\n\ninterface ModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  maxWidth?: number\n  initialFocusRef?: React.RefObject<any>\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 90,\n  maxWidth = 420,\n  initialFocusRef,\n  children\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 }\n  })\n\n  const _getScrollbarWidth = () => {\n    const scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    document.body.appendChild(scrollDiv)\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth\n    document.body.removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n  useEffect(() => {\n      if(isOpen){\n        const PaddingWidth = _getScrollbarWidth();\n        document.body.style.paddingRight = `${PaddingWidth}px`\n      }\n  }, [isOpen])\n\n  const [, set] = useSpring(() => ({ y: 0, config: { mass: 1, tension: 210, friction: 20 } }))\n  const bind = useGesture({\n    onDrag: state => {\n      set({\n        y: state.down ? state.movement[1] : 0\n      })\n      if (state.movement[1] > 300 || (state.velocity > 3 && state.direction[1] > 0)) {\n        onDismiss()\n      }\n    }\n  })\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogOverlay key={key} style={props} onDismiss={() => {\n              onDismiss()\n              setTimeout(() => {\n                document.body.style.paddingRight = `0`\n              }, 200)\n            }} initialFocusRef={initialFocusRef}>\n              <StyledDialogContent\n                {...(isMobile\n                  ? {\n                      ...bind(),\n                    }\n                  : {})}\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                maxWidth={maxWidth}\n                mobile={isMobile}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {children}\n              </StyledDialogContent>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.97168 1L6.20532 6L11.439 1\",\n  stroke: \"#AEAEAE\"\n});\n\nfunction SvgDropdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdown);\nexport default __webpack_public_path__ + \"static/media/dropdown.fef18eeb.svg\";\nexport { ForwardRef as ReactComponent };","import axios from 'axios';\nimport {encodeQuery} from \"../../lib/helper\";\nimport {ONE_INCH_FEE_PERCENTAGE, ONE_INCH_REFERRER_ACCOUNT} from \"../../constants\";\n\nexport default class OneInchApi {\n    constructor() {\n        this.instance = axios.create({\n            baseURL: 'https://api.1inch.exchange/v2.0/'\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'tokens': {\n                return this.getTokens();\n            }\n            case 'protocols': {\n                return this.getProtocols();\n            }\n            case 'healthcheck': {\n                return this.getHealthcheck();\n            }\n            case 'quote': {\n                return this.getQuote(payload);\n            }\n            case 'swap': {\n                return this.getSwap(payload);\n            }\n            case 'spender': {\n                return this.getSpender();\n            }\n            case 'approve': {\n                return this.getApprove(payload);\n            }\n        }\n    }\n\n    getTokens() {\n        return this.instance.get('tokens');\n    }\n\n    getProtocols() {\n        return this.instance.get('protocols');\n    }\n    getHealthcheck() {\n        return this.instance.get('healthcheck');\n    }\n    getQuote(payload) {\n        let query = encodeQuery(payload);\n        return this.instance.get(`quote?${query}`);\n    }\n\n    getSwap(payload) {\n        let query = encodeQuery({\n            ...payload,\n            referrerAddress: ONE_INCH_REFERRER_ACCOUNT,\n            fee: ONE_INCH_FEE_PERCENTAGE\n        });\n        return this.instance.get(`swap?${query}`);\n    }\n\n    getSpender() {\n        return this.instance.get('approve/spender')\n    }\n\n    getApprove(payload) {\n        let query = encodeQuery(payload);\n        return this.instance.get(`approve/calldata?${query}`);\n    }\n}\n","import axios from 'axios';\nimport {encodeQuery} from \"../../lib/helper\";\n\nexport default class GodexApi {\n    constructor() {\n        this.instance = axios.create({\n            baseURL: 'https://api.godex.io/api/v1/'\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'tokens': {\n                return this.getTokens();\n            }\n            case 'rate': {\n                return this.getRate(payload);\n            }\n            case 'transaction': {\n                return this.createTransaction(payload);\n            }\n            case 'getTransaction': {\n                return this.getTransaction(payload);\n            }\n            case 'getTransactionStatus': {\n                return this.getTransactionStatus(payload);\n            }\n        }\n    }\n\n    getTokens() {\n        return this.instance.get('coins');\n    }\n\n    getRate(payload) {\n        return this.instance.post('info', payload);\n    }\n    createTransaction(payload) {\n        return this.instance.post('transaction', payload);\n    }\n    getTransaction({ id }) {\n        return this.instance.get(`transaction/${id}`);\n    }\n    getTransactionStatus({ id }) {\n        return this.instance.get(`transaction/${id}/status`);\n    }\n}","import axios from 'axios';\nimport {encodeQuery} from \"../../lib/helper\";\n\nexport default class DexAgApi {\n    constructor() {\n        this.instance = axios.create({\n            baseURL: 'https://api-v2.dex.ag/'\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'tokens': {\n                return this.getTokens();\n            }\n        }\n    }\n\n    getTokens() {\n        return this.instance.get('token-list-full');\n    }\n\n}","import axios from 'axios';\nimport queryString from \"query-string\";\n\nexport default class SimpleSwapApi {\n    constructor(apiKey = process.env.REACT_APP_SIMPLESWAP_API_KEY) {\n        this.baseURL = 'https://api.simpleswap.io/v1/'\n        this.instance = axios.create({\n            baseURL: this.baseURL,\n        })\n        this.apiKey = apiKey;\n\n        this.instance.interceptors.response.use(response => {\n            if(response.hasOwnProperty('data')) {\n                return response.data;\n            }\n            return response;\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'currencies': {\n                return this.fetchAllCurrencies();\n            }\n            case 'pairs': {\n                return this.fetchAllPairs(payload);\n            }\n            case 'currencyInfo': {\n                return this.fetchCurrencyInfo(payload);\n            }\n            case 'rate': {\n                return this.getRate(payload);\n            }\n            case 'exchange': {\n                return this.getExchange(payload);\n            }\n            case 'range': {\n                return this.getRange(payload);\n            }\n            case 'markets': {\n                return this.getMarkets();\n            }\n            default: {\n                return new Promise((resolve, reject) => {\n                    reject('Unresolvable method called');\n                })\n            }\n        }\n    }\n\n    set(type, payload = {}) {\n        switch(type) {\n            case 'exchange': {\n                return this.postNewExchange(payload);\n            }\n            default: {\n                return new Promise((resolve, reject) => {\n                    reject('Unresolvable method called');\n                })\n            }\n        }\n    }\n\n    injectApiKey(obj, stringify = false) {\n        let result = {\n            ...obj,\n            'api_key': this.apiKey,\n        }\n\n        if(stringify) {\n            return queryString.stringify(result);\n        }\n\n        return result;\n    }\n\n    fetchAllCurrencies() {\n        let query = this.injectApiKey({}, true);\n\n        return this.instance.get(`get_all_currencies?${query}`)\n    }\n\n    fetchAllPairs(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`get_all_pairs?${query}`)\n    }\n\n    fetchCurrencyInfo(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`get_currency?${query}`)\n    }\n\n    getRate(payload) {\n        let query = this.injectApiKey(\n            payload.query ? {\n                ...payload.query,\n                amount: 1,\n            } : {},\n            true\n        );\n\n        return this.instance.get(`get_estimated?${query}`)\n    }\n\n    async getExchange(payload) {\n        try {\n            const rate = await this.getRate(payload);\n            const range = await this.getRange(payload);\n\n            return {\n                rate,\n                ...range,\n            }\n        } catch(e) {\n\n            return {\n                rate: null,\n                min: null,\n                max: null\n            }\n        }\n    }\n\n    getRange(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`get_ranges?${query}`)\n    }\n\n    getMarkets() {\n        let query = this.injectApiKey({}, true);\n\n        return this.instance.get(`get_market_info?${query}`)\n    }\n\n    postNewExchange(payload) {\n        let query = this.injectApiKey({}, true);\n        return this.instance.post(`create_exchange?${query}`, JSON.stringify(payload.data), {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'accept': 'application/json',\n            }\n        })\n    }\n}\n","import axios from 'axios';\nimport queryString from \"query-string\";\n\nexport default class StealthexApi {\n    constructor(apiKey = process.env.REACT_APP_STEALTHEX_API_KEY) {\n        this.baseURL = '/v2'\n        this.instance = axios.create({\n            baseURL: this.baseURL,\n        })\n        this.apiKey = apiKey;\n\n        this.instance.interceptors.response.use(response => {\n            if(response.hasOwnProperty('data')) {\n                return response.data;\n            }\n            return response;\n        })\n    }\n\n    get(type, payload = {}) {\n        switch(type) {\n            case 'currencies': {\n                return this.fetchAllCurrencies();\n            }\n            case 'pairs': {\n                return this.fetchAllPairs(payload);\n            }\n            case 'currencyInfo': {\n                return this.fetchCurrencyInfo(payload);\n            }\n            case 'rate': {\n                return this.getRate(payload);\n            }\n            case 'exchange': {\n                return this.getExchange(payload);\n            }\n            case 'range': {\n                return this.getRange(payload);\n            }\n            default: {\n                return new Promise((resolve, reject) => {\n                    reject('Unresolvable method called');\n                })\n            }\n        }\n    }\n\n    set(type, payload = {}) {\n        switch(type) {\n            case 'exchange': {\n                return this.postNewExchange(payload);\n            }\n            default: {\n                return new Promise((resolve, reject) => {\n                    reject('Unresolvable method called');\n                })\n            }\n        }\n    }\n\n    injectApiKey(obj, stringify = false) {\n        let result = {\n            ...obj,\n            'api_key': this.apiKey,\n            'fixed': process.env.REACT_APP_STEALTHEX_FIXED_RATE\n        }\n\n        if(stringify) {\n            return queryString.stringify(result);\n        }\n\n        return result;\n    }\n\n    fetchAllCurrencies() {\n        let query = this.injectApiKey({}, true);\n\n        return this.instance.get(`currency?${query}`)\n    }\n\n    fetchAllPairs(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`pairs?${query}`)\n    }\n\n    fetchCurrencyInfo(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`currency/${payload.symbol}?${query}`)\n    }\n\n    getRate(payload) {\n        let query = this.injectApiKey(\n            payload.query ? {\n                ...payload.query,\n                amount: 1,\n            } : {},\n            true\n        );\n\n        return this.instance.get(`estimate/${payload.currency_from}/${payload.currency_to}?${query}`, {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'accept': 'application/json',\n            }\n        })\n    }\n\n    async getExchange(payload) {\n        try {\n            const rate = await this.getRate(payload);\n            const range = await this.getRange(payload);\n            return {\n                ...rate,\n                ...range,\n            }\n        } catch(e) {\n\n            return {\n                estimated_amount: null,\n                min_amount: null,\n                max_amount: null\n            }\n        }\n    }\n\n    getRange(payload) {\n        let query = this.injectApiKey(payload.query || {}, true);\n\n        return this.instance.get(`range/${payload.currency_from}/${payload.currency_to}?${query}`, {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'accept': 'application/json',\n            }\n        })\n    }\n\n\n    postNewExchange(payload) {\n        let query = this.injectApiKey({}, true);\n        return this.instance.post(`exchange?${query}`, JSON.stringify(payload.data), {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'accept': 'application/json',\n            }\n        })\n    }\n}\n","import {ParaSwap} from \"paraswap\";\nimport DEXAG from 'dexag-sdk'\n\nimport OneInchApi from \"./OneInch\";\nimport GodexApi from './Godex';\nimport DexAgApi from \"./dexAg\";\nimport SimpleSwapApi from \"./SimpleSwap\";\nimport StealthexApi from \"./Stealthex\";\n\nexport default {\n    paraswap: new ParaSwap(),\n    oneInch: new OneInchApi(),\n    godex: new GodexApi(),\n    dexag: {\n        api: new DexAgApi(),\n        sdk: DEXAG.fromProvider(window.ethereum),\n    },\n    simpleSwap: new SimpleSwapApi(),\n    stealthex: new StealthexApi()\n}","import React, {useCallback} from 'react'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport Column from '../Column'\nimport {RowBetween} from '../Row'\n\nexport const MenuItem = styled(RowBetween)`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto ;\n  grid-gap: 16px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.bg2};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\n\nconst Logo = styled.img`\n  width: ${({size}) => size ? `${size}px` : '24px'};\n  height: ${({size}) => size ? `${size}px` : '24px'};\n  border-radius: ${({size}) => size ? `${size}px` : '24px'};\n  border: 2px solid ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.text1};\n  margin-right: ${({ margin }) => margin ? '8px' : 0};\n  \n  @media (max-width: 1199px) {\n  \n      width: 24px;\n      height: 24px;\n  }\n`\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n  \n  \n  @media (max-width: 1199px) {\n    font-size: .875rem;\n    font-weight: 400;\n  }\n`\n\nconst StyledText = styled(Text)`\n  @media (max-width: 1199px) {\n    font-size: .875rem;\n    font-weight: 400;\n  }\n`\n\nfunction Symbol({ symbol }) {\n    return <StyledBalanceText>{symbol}</StyledBalanceText>\n}\n\n\nfunction CurrencyRow({\n    currency,\n    onSelect,\n    isSelected,\n    style,\n}) {\n    return (\n        <MenuItem\n            style={style}\n            className={`token-item-${currency.symbol}`}\n            onClick={() => (isSelected ? null : onSelect())}\n            disabled={isSelected}\n        >\n            <Logo src={currency.logoURI} size={24} alt={currency.symbol}/>\n            <Column>\n                <StyledText title={currency.name} fontWeight={500}>\n                    {currency.symbol}\n                </StyledText>\n            </Column>\n\n            <Column style={{ justifySelf: 'flex-end' }}>\n                <Symbol symbol={currency.name} />\n            </Column>\n        </MenuItem>\n    )\n\n}\n\nexport default function CurrencyList({\n    height,\n    currencies,\n    selectedCurrency,\n    onCurrencySelect,\n    fixedListRef,\n}) {\n\n    const Row = useCallback(\n        ({ data, index, style }) => {\n            const currency = data[index]\n            const handleSelect = () => onCurrencySelect(data[index])\n            const isSelected =  selectedCurrency ? (selectedCurrency.address === currency.address && selectedCurrency.symbol === currency.symbol) : false;\n            return (\n                <CurrencyRow\n                    style={style}\n                    currency={currency}\n                    onSelect={handleSelect}\n                    isSelected={isSelected}\n                />\n            )\n        },\n        [onCurrencySelect, selectedCurrency]\n    )\n\n    const itemKey = useCallback((index, data) => {\n        return data[index].address\n    }, [])\n\n    return (\n        <FixedSizeList\n            height={height}\n            ref={fixedListRef}\n            width=\"100%\"\n            itemData={currencies}\n            itemCount={currencies.length}\n            itemSize={56}\n            itemKey={itemKey}\n        >\n            {Row}\n        </FixedSizeList>\n    )\n}\n","import React, {useCallback, useContext, useEffect, useMemo, useRef, useState} from 'react'\nimport Modal from '../Modal'\nimport Column from \"../Column\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport CurrencyList from \"./CurrencyList\";\nimport styled, {ThemeContext} from \"styled-components\";\nimport SearchIcon from \"../../assets/images/search.svg\";\nimport { InputGroupFormControl as FormControl, InputGroup, InputGroupPrepend, InputGroupText } from \"../Form\";\nimport SVG from \"react-inlinesvg\";\n\nconst StyledColumn = styled(Column)`\n  padding: 15px;\n  @media (min-width: 991px) {\n  padding: 67px 90px 10px;\n  }\n`\n\nconst HeaderContainer = styled.div`\n  margin-bottom: 51px;\n  \n  @media (max-width: 1199px) {\n  margin-bottom: 14px;\n  }\n`\n\nexport default function SwapSelectModal({\n    isOpen,\n    onDismiss,\n    onCurrencySelect,\n    selectedCurrency,\n    currencies,\n    type\n}) {\n    const theme = useContext(ThemeContext);\n    const [searchQuery, setSearchQuery] = useState('')\n    const fixedList = useRef()\n    const inputRef = useRef();\n\n    const filteredTokens = useMemo(() => {\n        return currencies.filter(token => JSON.stringify(token).toLowerCase().includes(searchQuery) || !searchQuery);\n    }, [currencies, searchQuery])\n\n    const titles = useMemo(() => {\n        return currencies.map((token, index) => {\n            return {\n                ...token, index\n            }\n        }).filter(token => token.type === 'title');\n    }, [currencies])\n\n    useEffect(() => {\n        if (isOpen) {\n            setSearchQuery('')\n        }\n    }, [isOpen])\n\n    const handleInput = useCallback(event => {\n        const input = event.target.value\n        setSearchQuery(input.toLowerCase())\n        fixedList.current.scrollTo(0)\n    }, [])\n\n    const handleCurrencySelect = useCallback(\n        (currency) => {\n            onCurrencySelect(currency, type)\n            onDismiss()\n        },\n        [onDismiss, onCurrencySelect]\n    )\n\n\n    return (\n        <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={80} minHeight={80} maxWidth={530}>\n\n\n            <StyledColumn style={{ width: '100%', flex: '1 1', minHeight: '100px' }}>\n                <HeaderContainer>\n                    <InputGroup className={'w-auto'} bg={'darker'}>\n                        <InputGroupPrepend>\n                            <InputGroupText>\n                                <SVG src={SearchIcon}/>\n                            </InputGroupText>\n                        </InputGroupPrepend>\n                        <FormControl\n                             id=\"token-search-input\"\n                             placeholder={'Search'}\n                             value={searchQuery}\n                             ref={inputRef}\n                             onChange={handleInput}/>\n                    </InputGroup>\n\n                </HeaderContainer>\n\n\n                <div style={{ flex: '1' }}>\n                    <AutoSizer disableWidth>\n                        {({ height }) => (\n                            <CurrencyList\n                                height={height}\n                                currencies={filteredTokens}\n                                onCurrencySelect={handleCurrencySelect}\n                                selectedCurrency={selectedCurrency}\n                                fixedListRef={fixedList}\n                            />\n                        )}\n                    </AutoSizer>\n                </div>\n\n            </StyledColumn>\n        </Modal>\n    )\n}\n","import React, {useCallback, useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\n\nimport { RowBetween } from '../Row'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport {ReactComponent as DropDown} from \"../../assets/images/dropdown.svg\";\nimport SwapSelectModal from \"../SwapSelectModal\";\nimport {ETHER, Token} from \"@uniswap/sdk\";\nimport {useActiveWeb3React} from \"../../hooks\";\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\nimport {useTranslation} from \"react-i18next\";\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  \n  padding: 1rem 0 1.25rem;\n  \n  \n  @media (min-width: 768px) {\n    padding-top: 0.75rem;\n  }\n`\n\nconst Label = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-weight: 400;\n  font-size: .875rem;\n  padding: 0 ;\n  \n  @media (min-width: 768px) {\n    padding: 0 1.5rem;\n  }\n`\n\nconst Balance = styled.span`\n  color: ${({ theme }) => theme.text1};\n  font-weight: 400;\n  font-size: .75rem;\n  padding: 0 ;\n  margin-bottom: -6px;\n  \n  \n  @media (min-width: 768px) {\n  font-size: .875rem;\n  font-weight: 500;\n  margin-bottom: 0;\n  }\n  \n`\n\n\nconst InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  flex: 1;\n  \n`\n\nconst Logo = styled.img`\n  width: ${({ size }) => size || '100%'};\n  height: ${({ size }) => size || '100%'};\n  border-radius: ${({ size }) => size || '100%'};\n  border: 2px solid ${({ theme }) => theme.text1};\n  color: ${({ theme }) => theme.text1};\n  margin-right: ${({ margin }) => margin ? '8px' : 0};\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0;\n`\n\nconst StyledDropDown = styled(DropDown)`\n  margin: 0 0.25rem 0 0.5rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => theme.text1};\n    stroke-width: 1.5px;\n  }\n`\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  position: relative;\n  border-radius: 0.42rem;\n`\n\n\nconst StyledTokenName = styled.span`\n  margin-right: auto;\n  padding-left: ${({ active }) => active ? '0.625rem' : '0'};\n  font-size:  1rem;\n  \n  \n  @media (min-width: 768px) {\n  padding-left: ${({ active }) => active ? '0.75rem' : '0'};\n  }\n\n`\n\n\nconst CurrencySelect = styled.button`\n  align-items: center;\n  height: 56px;\n  font-size: 0.875rem;\n  font-weight: 500;\n  background-color: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.text1};\n  border-bottom-left-radius: 18px;\n  border-top-left-radius: 18px;\n  box-shadow: none;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0.875rem 0.625rem;\n  min-width: 116px;\n  width: 116px;\n  \n  \n  @media (min-width: 768px) {\n  min-width: 178px;\n  width: 178px;\n  padding: .625rem 1.5rem;\n  font-size: 1rem;\n  font-weight: 700;\n  }\n\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => theme.bg4};\n    outline: none;\n  }\n`\n\nexport default function SwapInputPanel({\n    value,\n    onUserInput,\n    label = 'Input',\n    onSelect,\n    disable = false,\n    selected,\n    hideInput = false,\n    id,\n    currencies,\n    type,\n    disableCurrencySelect = false,\n    onChangeBalance = (balance) => balance\n}) {\n    let currency = undefined;\n    const { t } = useTranslation();\n    if(selected) {\n        currency = new Token(selected.chainId, selected.address, selected.decimals, selected.symbol, selected.name);\n    }\n    const [modalOpen, setModalOpen] = useState(false)\n    const { account } = useActiveWeb3React()\n    const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, selected && selected.symbol === 'ETH' ? ETHER : currency)\n\n    useEffect(() => {\n        onChangeBalance(selectedCurrencyBalance)\n    }, [selected])\n\n    const handleDismissSearch = useCallback(() => {\n        setModalOpen(false)\n    }, [setModalOpen])\n\n    return (\n        <InputPanel id={id}>\n            <div>\n                {!hideInput && (\n                    <LabelRow>\n                        <RowBetween>\n                            <Label>\n                                {label}\n                            </Label>\n\n                            {account && (\n                                <Balance\n                                >\n                                  {!!currency && selectedCurrencyBalance\n                                      ? t('balance', { balanceInput: selectedCurrencyBalance?.toSignificant(6) })\n                                      : ' -'}\n                                </Balance>\n                            )}\n                        </RowBetween>\n                    </LabelRow>\n                )}\n                <InputRow style={hideInput ? { padding: '0', borderRadius: '0.42rem' } : {}} selected={disable}>\n\n                    <CurrencySelect\n                        selected={!!selected}\n                        className=\"open-currency-select-button\"\n                        onClick={() => {\n                            if (!disableCurrencySelect) {\n                                setModalOpen(true)\n                            }\n                        }}\n                    >\n                        <Aligner>\n                            {selected ? (\n                                <Logo src={selected.logoURI} size={`24px`} alt={selected.symbol}/>\n                            ) : null}\n                            <StyledTokenName className=\"token-symbol-container\" active={Boolean(selected && selected?.symbol)}>\n                                {(selected && selected?.symbol && selected?.symbol.length > 20\n                                    ? selected?.symbol.slice(0, 4) +\n                                    '...' +\n                                    selected?.symbol.slice(selected?.symbol.length - 5, selected?.symbol.length)\n                                    : selected?.symbol) || t('selectToken')}\n                            </StyledTokenName>\n                            {!disableCurrencySelect && <StyledDropDown selected={!!selected} />}\n                        </Aligner>\n                    </CurrencySelect>\n\n                    {!hideInput && (\n                        <InputContainer>\n                            <NumericalInput\n                                className=\"token-amount-input\"\n                                value={value}\n                                onUserInput={val => {\n                                    onUserInput(val, type, selectedCurrencyBalance)\n                                }}\n                            />\n                        </InputContainer>\n                    )}\n                </InputRow>\n            </div>\n\n\n            {!disableCurrencySelect && onSelect && (\n                <SwapSelectModal\n                    isOpen={modalOpen}\n                    onDismiss={handleDismissSearch}\n                    onCurrencySelect={onSelect}\n                    selectedCurrency={selected}\n                    currencies={currencies}\n                    type={type}\n                />\n            )}\n        </InputPanel>\n    )\n}\n","import React from 'react';\nimport {Row, Col, Button, ProgressBar} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport styled, {ThemeContext} from \"styled-components\";\nimport _ from 'lodash';\nimport { Text } from 'rebass'\nimport { isMobile } from 'react-device-detect';\nimport QRCode from \"react-qr-code\";\n\nimport { Modal } from '../../components/Modal/bootstrap';\nimport {ResponsiveCard} from \"../../components/Card\";\nimport withWeb3Account from \"../../components/hoc/withWeb3Account\";\nimport {\n    DEXesImages,\n    DEXesName,\n    PARASWAP_REFERRER_ACCOUNT,\n    SIMPLE_SWAP_FIXED,\n    supportedDEXes,\n    ZERO\n} from \"../../constants\";\nimport InstantSwapApi from '../../http/instantSwap';\nimport SwapInputPanel from \"../../components/SwapInputPanel\";\nimport {walletTokens as tokens} from '../../constants/spot-config/mainnet/config.json';\nimport {toAbsoluteUrl} from \"../../lib/helper\";\nimport ERC20_ABI from '../../constants/abis/erc20.json';\nimport {getContract} from \"../../utils\";\nimport Page from \"../../components/Page\";\nimport Web3 from \"web3\";\nimport {RowBetween} from \"../../components/Row\";\nimport {CloseIcon} from \"../../theme\";\nimport {toast} from \"react-hot-toast\";\nimport BigNumber from \"bignumber.js\";\nimport {assert} from \"@0x/assert\";\nimport {AbiDecoder, intervalUtils} from \"@0x/utils\";\nimport {withTranslation} from \"react-i18next\";\n\nconst HEX_REGEX = /^0x[0-9A-F]*$/i;\n\nconst SwapButton = styled(Button)`\n  height: 56px;\n  min-width: 250px;\n  align-self: center;\n  \n  \n  @media (max-width: 767px) {\n    width: 100%;\n  }\n`\n\n\nconst StyledRow = styled(Row)`\n  margin-top: 86px;\n  \n  @media (max-width: 767px) {\n    margin-top: 20px;\n  }\n`\n\n\nconst CustomCard = styled(ResponsiveCard)`\n  margin-top: 70px;\n  \n  & .card-body {\n  \n    @media (min-width: 768px) {\n    \n      padding: 42px 50px 32px;\n    }\n  }\n`\n\nconst RateText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  \n  @media (max-width: 767px) {\n    font-size: 12px;\n  }\n`\n\nconst Logo = styled.img`\n  width: ${({size}) => size ? `${size}px` : '24px'};\n  height: ${({size}) => size ? `${size}px` : '24px'};\n  border-radius: ${({size}) => size ? `${size}px` : '24px'};\n  background-color: ${({ theme }) => theme.text1};\n  border: 2px solid ${({ theme }) => theme.text1};\n  margin-right: 15px;\n`\n\nconst ProgressContainer = styled.div`\n  background: rgba(135, 220, 225, 0.15);\n  border-radius: 18px;\n  padding: 26px 20px;\n  margin-top: 10px;\n  \n  .progress {\n    height: 5px;\n    background-color: rgba(135, 220, 225, 0.15);\n    border-radius: 15px;\n    \n    &-bar {\n      border-radius: 15px;\n    }\n  }\n`\n\nconst PlatformCard = styled.div`\n  padding: 8px 8px 8px 20px;\n  border-radius: 18px;\n  background-color: ${({ selected, theme }) => selected ? theme.bg2 : 'rgba(135, 220, 225, 0.15)'};\n  margin-bottom: 10px;\n  min-height: 56px;\n  border: 1px solid ${({theme, selected}) => selected ? theme.primary : 'transparent'};\n  transition: all ease 0.4s;\n  cursor: pointer;\n  \n  \n  &:hover {\n    background-color: ${({theme}) => theme.bg2};\n    border-color: ${({theme}) => theme.primary};\n  }\n  \n  @media (max-width: 767px) {\n    padding: 8px 8px 8px 10px;\n  }\n`\n\n\nclass InstantSwap extends React.Component {\n    static contextType = ThemeContext\n\n    constructor(props) {\n        super(props);\n        this.web3 = new Web3(Web3.givenProvider || process.env.REACT_APP_WSS_URL)\n        this.api = InstantSwapApi;\n        this.typeTimeout = undefined;\n        this.isExchangeInProgress = false;\n        this.abiDecoder = new AbiDecoder([]);\n\n        this.state = {\n            loading: false,\n            loadingState: {\n                all: 36,\n                loaded: 0,\n            },\n            tokens: [],\n            pair: {\n                deposit: {\n                    token: null,\n                    value: '',\n                },\n                destination: {\n                    token: null,\n                    value: '',\n                },\n            },\n            hasEnoughBalance: true,\n            rates: [],\n            rate: undefined,\n            showMore: false,\n            buyState: 'not_started',\n            max: 0,\n            showQrModal: false,\n            orderType: null,\n            order: {}\n        }\n    }\n\n    getBuyStates = () => {\n        const { t } = this.props;\n        return {\n            'not_started': t('instantSwap.not_started'),\n            'initializing': t('instantSwap.initializing'),\n            'allowance': t('instantSwap.allowance'),\n            'approving': t('instantSwap.approving'),\n            'validation': t('instantSwap.validation'),\n            'create_tx': t('instantSwap.create_tx'),\n            'send_tx': t('instantSwap.send_tx'),\n            'submitted': t('instantSwap.submitted'),\n            'pending': t('instantSwap.pending'),\n            'failed': t('instantSwap.failed'),\n        }\n    }\n\n    isHexString(str) {\n        if(HEX_REGEX.test(str)) {\n            return true;\n        } else {\n            throw new Error('Entered value isn\\'t hex string');\n        }\n    }\n\n    async awaitTransactionMinedAsync(\n        txHash,\n        pollingIntervalMs = 1000,\n        timeoutMs = 30000,\n    ) {\n        this.isHexString(txHash);\n        assert.isNumber('pollingIntervalMs', pollingIntervalMs);\n        if (timeoutMs !== undefined) {\n            assert.isNumber('timeoutMs', timeoutMs);\n        }\n        // Immediately check if the transaction has already been mined.\n        let transactionReceipt = await this.props.web3.library.getTransactionReceipt(txHash);\n        if (transactionReceipt !== undefined) {\n            const logsWithDecodedArgs = _.map(\n                transactionReceipt.logs,\n                this.abiDecoder.tryToDecodeLogOrNoop.bind(this.abiDecoder),\n            );\n            const transactionReceiptWithDecodedLogArgs = {\n                ...transactionReceipt,\n                logs: logsWithDecodedArgs,\n            };\n            return transactionReceiptWithDecodedLogArgs;\n        }\n\n        // Otherwise, check again every pollingIntervalMs.\n        let wasTimeoutExceeded = false;\n        if (timeoutMs) {\n            setTimeout(() => (wasTimeoutExceeded = true), timeoutMs);\n        }\n\n        const txReceiptPromise = new Promise(\n            (resolve, reject) => {\n                const intervalId = intervalUtils.setAsyncExcludingInterval(\n                    async () => {\n                        if (wasTimeoutExceeded) {\n                            intervalUtils.clearAsyncExcludingInterval(intervalId);\n                            return reject({\n                                code: 'timeout',\n                                message: 'Timeout'\n                            });\n                        }\n\n                        transactionReceipt = await this.props.web3.library.getTransactionReceipt(txHash);\n                        if (transactionReceipt !== undefined) {\n                            intervalUtils.clearAsyncExcludingInterval(intervalId);\n                            const logsWithDecodedArgs = _.map(\n                                transactionReceipt.logs,\n                                this.abiDecoder.tryToDecodeLogOrNoop.bind(this.abiDecoder),\n                            );\n                            const transactionReceiptWithDecodedLogArgs = {\n                                ...transactionReceipt,\n                                logs: logsWithDecodedArgs,\n                            };\n                            resolve(transactionReceiptWithDecodedLogArgs);\n                        }\n                    },\n                    pollingIntervalMs,\n                    (err) => {\n                        intervalUtils.clearAsyncExcludingInterval(intervalId);\n                        reject(err);\n                    },\n                );\n            },\n        );\n        const txReceipt = await txReceiptPromise;\n        return txReceipt;\n    }\n\n    async awaitTransactionSuccessAsync(\n        txHash,\n        pollingIntervalMs = 1000,\n        timeoutMs,\n    ) {\n        const receipt = await this.awaitTransactionMinedAsync(txHash, pollingIntervalMs, timeoutMs);\n        if (receipt.status !== 1) {\n            throw new Error(this.props.t('errors.invalidHexString'));\n        }\n        return receipt;\n    }\n\n    onChangeBalance = (balance) => {\n        this.setState({\n            max: balance,\n        })\n    }\n\n    promiseHandler = (callback) => {\n        return new Promise((resolve) => {\n            callback()\n                .then(response => resolve(response))\n                .catch(error => resolve(undefined));\n        })\n    }\n\n    getParaswapSortedRates = rates => {\n        return _.orderBy(rates.others, ['rate'], ['desc'])\n    }\n\n    getDexagSortedRates = rates => {\n        return _.orderBy(rates, ['price'], ['desc'])\n    }\n\n    getSortedRates = (response, type) => {\n        if(!response) return [];\n        switch(type) {\n            case 'paraswap': {\n                return this.getParaswapSortedRates(response);\n            }\n            case 'dexag': {\n                return this.getDexagSortedRates(response);\n            }\n            default: {\n                return response.hasOwnProperty('data') ? response.data : response;\n            }\n        }\n    }\n\n    transformRates = (rates) => {\n        let result = [];\n        for(let i in rates) {\n            const key = rates[i][0];\n            const apiRates = rates[i][1];\n            switch(key) {\n                case '1inch': {\n                    if(apiRates && typeof apiRates.toTokenAmount === 'string') {\n                        result.push({\n                            rate: apiRates.toTokenAmount / (10 ** this.state.pair.destination.token.decimals),\n                            platform: 'oneInch',\n                            source: '1inch',\n                        })\n                    }\n                    break;\n                }\n                case 'paraswap': {\n                    if(apiRates) {\n\n                        apiRates.forEach(rate => {\n                            if(supportedDEXes['paraswap'].includes(rate.exchange)) {\n                                result.push({\n                                    rate: rate.unit / (10 ** this.state.pair.destination.token.decimals),\n                                    platform: rate.exchange,\n                                    source: 'paraswap',\n                                })\n                            }\n                        })\n                    }\n                    break;\n                }\n                case 'dexag': {\n                    if(apiRates) {\n\n                        apiRates.forEach(rate => {\n                            if(supportedDEXes['dexag'].includes(rate.dex)) {\n                                result.push({\n                                    rate: Number(rate.price),\n                                    platform: rate.dex,\n                                    source: 'dexag',\n                                })\n                            }\n                        })\n                    }\n                    break;\n                }\n                case 'simpleSwap': {\n                    if(apiRates.rate !== null) {\n                        result.push({\n                            rate: Number(apiRates.rate),\n                            min: Number(apiRates.min || 0),\n                            max: Number(apiRates.max || 0),\n                            platform: 'simpleSwap',\n                            source: 'simpleSwap',\n                        })\n                    }\n                    break;\n                }\n                case 'stealthex': {\n                    if(apiRates.estimated_amount !== null) {\n                        result.push({\n                            rate: Number(apiRates.estimated_amount),\n                            min: Number(apiRates.min_amount || 0),\n                            max: Number(apiRates.max_amount || 0),\n                            platform: 'stealthex',\n                            source: 'stealthex',\n                        })\n                    }\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    getSortedResult = (response) => {\n        let sortedParts = Object.keys(response).map(key => [key, this.getSortedRates(response[key], key)]);\n        let transformedRates = this.transformRates(sortedParts);\n        return _.sortBy(transformedRates, (o) => -o.rate);\n    }\n\n    fetchPrices = async (pair) => {\n        const { t } = this.props;\n        let { deposit, destination } = pair;\n\n        if(deposit.token !== null && destination.token !== null) {\n            this.setState({\n                loading: true,\n                loadingState: {\n                    all: 36,\n                    loaded: 0,\n                }\n            })\n            let fromAmount = (10 ** deposit.token.decimals);\n\n            let dexagParams = {\n                to: destination.token.symbol,\n                from: deposit.token.symbol,\n                dex: 'all',\n                fromAmount: 1\n            }\n\n            let oneInch = await this.promiseHandler(() => this.api.oneInch.get('quote', {\n                fromTokenAddress: deposit.token.address,\n                toTokenAddress: destination.token.address,\n                amount: fromAmount,\n            }))\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 14,\n                }\n            })\n\n            let paraswap = await this.promiseHandler(() => this.api.paraswap.getRate(deposit.token.address, destination.token.address, fromAmount));\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 20,\n                }\n            })\n\n            let dexag = await this.promiseHandler(() => this.api.dexag.sdk.getPrice(dexagParams))\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 28,\n                }\n            })\n            let godex = await this.promiseHandler(() => this.api.godex.get('rate', {\n                to: destination.token.symbol,\n                from: deposit.token.symbol,\n                amount: 1,\n            }))\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 30,\n                }\n            })\n\n            let simpleSwap = await this.promiseHandler(() => this.api.simpleSwap.get('exchange', {\n                query: {\n                    fixed: SIMPLE_SWAP_FIXED,\n                    currency_from: deposit.token.symbol.toLowerCase(),\n                    currency_to: destination.token.symbol.toLowerCase()\n                }\n            }))\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 32,\n                }\n            })\n\n            let stealthex = await this.promiseHandler(() => this.api.stealthex.get('exchange', {\n                query: {},\n                currency_from: deposit.token.symbol.toLowerCase(),\n                currency_to: destination.token.symbol.toLowerCase()\n            }))\n\n            this.setState({\n                loadingState: {\n                    all: 36,\n                    loaded: 36,\n                }\n            })\n\n\n            let response = {\n                '1inch': oneInch,\n                'paraswap': paraswap,\n                'dexag': dexag,\n                'godex': godex,\n                'simpleSwap': simpleSwap,\n                'stealthex': stealthex\n            }\n\n            let result = this.getSortedResult(response);\n\n            if(result.length > 0) {\n                if(deposit.value) {\n                    pair.destination.value = (deposit.value * result[0].rate).toFixed(6);\n                } else if(destination.value) {\n                    pair.deposit.value = (destination.value / result[0].rate).toFixed(6);\n                }\n            } else {\n                toast.error(t('errors.unavailablePair'))\n            }\n\n\n            this.setState({\n                pair,\n                rates: result,\n                rate: result.length > 0 ? result[0] : undefined,\n                loading: false,\n                showMore: false,\n                hasEnoughBalance: !this.state.max || Number(pair.deposit.value) <= Number(this.state.max.toSignificant(6))\n            })\n\n        } else {\n            this.setState({\n                pair,\n                showMore: false\n            })\n        }\n    }\n\n    onSelect = async (token, type) => {\n        let pair = this.state.pair;\n\n        pair[type].token = token;\n        this.setState({\n            pair\n        }, this.fetchPrices.bind(this, this.state.pair))\n    }\n\n    onSwapTokens = () => {\n        let pair;\n        this.setState(prevState => {\n            pair = {\n                deposit: {\n                    ...prevState.pair.destination,\n                },\n                destination: {\n                    ...prevState.pair.deposit,\n                }\n            }\n            return {\n                pair\n            }\n        }, () => this.fetchPrices(pair));\n    }\n\n    onUserInputHandler = (value, type, max) => {\n        this.setState(prevState => {\n            const pair = prevState.pair;\n            pair[type].value = value;\n            if(prevState.rate) {\n                if(type === 'deposit') {\n                    pair.destination.value = (value * prevState.rate.rate).toFixed(6);\n                } else if(type === 'destination') {\n                    pair.deposit.value = (value / prevState.rate.rate).toFixed(6);\n                }\n            }\n            return {\n                pair,\n                hasEnoughBalance: !max || Number(value) <= Number(max.toSignificant(6))\n            }\n        })\n    }\n\n    selectRate = (rate) => {\n        this.setState(prevState => {\n            let pair = {\n                ...prevState.pair\n            };\n            if(pair.deposit.value) {\n                pair.destination.value = (pair.deposit.value * rate.rate).toFixed(6);\n            } else if(pair.destination.value) {\n                pair.deposit.value = (pair.destination.value / rate.rate).toFixed(6);\n            }\n\n            return {\n                pair,\n                rate\n            }\n        })\n    }\n\n    setBuyState = (state = 'not_started') => {\n        this.setState({\n            buyState: state,\n        })\n    }\n\n    setDefaultBuyState = () => {\n        setTimeout(this.setBuyState, 4000)\n    }\n\n    oneInchBuyHandler = async (pair, rate) => {\n        const { t } = this.props;\n        try {\n            let canExchange = false;\n            this.setBuyState('initializing')\n            let { deposit, destination } = pair;\n            let allowance = ZERO;\n\n            const spenderRes = await this.api.oneInch.get('spender');\n            const spender = spenderRes.data.address;\n\n            let fromAmount = new BigNumber(deposit.value).times(10 ** deposit.token.decimals);\n\n            if(deposit.token.symbol.toUpperCase() !== 'ETH') {\n                this.setBuyState('allowance')\n\n                let contract = getContract(deposit.token.address, ERC20_ABI, this.props.web3.library, this.props.web3.account);\n\n                allowance = await contract.functions.allowance(this.props.web3.account, spender);\n                allowance = new BigNumber(allowance);\n\n                if(fromAmount.isGreaterThan(allowance)) {\n                    this.setBuyState('approving')\n\n                    const maxAllowance = new BigNumber(2).pow(256).minus(1);\n                    let approve = await contract.functions.approve(spender, maxAllowance.toFixed(0));\n\n                    if(approve) {\n                        let txn;\n                        try {\n                            txn = await this.awaitTransactionSuccessAsync(approve.hash);\n                        } catch(e) {\n                            canExchange = true;\n                        }\n\n                        if(txn) {\n                            canExchange = true;\n                        }\n                    }\n                } else {\n                    canExchange = true;\n                }\n            } else {\n                canExchange = true;\n            }\n\n            if(canExchange) {\n                this.setBuyState('create_tx')\n\n                const res = await this.api.oneInch.get('swap', {\n                    fromTokenAddress: deposit.token.address,\n                    toTokenAddress: destination.token.address,\n                    amount: fromAmount.toFixed(0),\n                    fromAddress: this.props.web3.account,\n                    slippage: this.props.slippage / 100,\n                })\n                const tx = res.data.tx;\n\n                this.setBuyState('send_tx')\n\n                this.web3.eth.sendTransaction(tx, async (err, transactionHash) => {\n                    if (err) {\n                        this.setBuyState('failed')\n\n                        this.setDefaultBuyState()\n\n                        if(err.code === 4001){\n                            toast.error(t('errors.canceled'))\n                        } else {\n                            toast.error(t('errors.default'))\n                        }\n                        this.isExchangeInProgress = false;\n                        return false;\n                    }\n\n                    this.setBuyState('submitted')\n\n                    this.setDefaultBuyState()\n                    this.isExchangeInProgress = false;\n                    toast.success(t('instantSwap.orderSubmitted'));\n                    window.open(`https://etherscan.io/tx/${transactionHash}`, '_blank');\n                });\n            } else {\n                toast.error(t('errors.approvalPending'));\n            }\n            this.isExchangeInProgress = false;\n\n        } catch(e) {\n            this.setBuyState('failed')\n\n            this.setDefaultBuyState()\n\n            this.isExchangeInProgress = false;\n\n            if(e.hasOwnProperty('code')) {\n                if(e.code === 4001) {\n                    toast.error(t('errors.canceled'))\n                } else {\n                    toast.error(t('errors.default'))\n                }\n            } else {\n                if(e.hasOwnProperty('response')) {\n                    if(e.response.status === 500) {\n                        toast.error(t('errors.unavailablePair'))\n                    } else {\n                        toast.error(t('errors.default'))\n                    }\n                } else {\n                    toast.error(t('errors.default'))\n                }\n            }\n        }\n    }\n\n    paraSwapBuyHandler = async (pair, rate) => {\n        const { t } = this.props;\n        try {\n            this.setBuyState('initializing')\n\n            let { deposit, destination } = pair;\n            let canExchange = false;\n            const paraswap = this.api.paraswap.setWeb3Provider(window.ethereum);\n\n            let fromAmount = new BigNumber(deposit.value).times(10 ** deposit.token.decimals);\n            let toAmount = new BigNumber(destination.value).times(10 ** destination.token.decimals);\n\n            this.setBuyState('allowance')\n            const allowanceRes = await paraswap.getAllowance(this.props.web3.account, deposit.token.address);\n            let allowance = new BigNumber(allowanceRes.allowance);\n            if(deposit.token.symbol !== 'ETH' && fromAmount.isGreaterThan(allowance)) {\n                this.setBuyState('approving')\n                const approve = await paraswap.approveToken(fromAmount.toFixed(), this.props.web3.account, deposit.token.address);\n                let txn;\n\n                try {\n                    txn = await this.awaitTransactionSuccessAsync(approve);\n                } catch(e) {\n                    canExchange = true;\n                }\n\n                if(txn) {\n                    window.open(`https://etherscan.io/tx/${approve}`, '_blank')\n                    canExchange = true;\n                }\n            } else {\n                canExchange = true;\n            }\n\n            if(canExchange) {\n                this.setBuyState('create_tx')\n                const rates = await paraswap.getRate(deposit.token.address, destination.token.address, fromAmount.toFixed(0));\n                const selectedRoute = rates.others.find(item => item.exchange === rate.platform);\n                const txRoute = [\n                    {\n                        ...rates.bestRoute[0],\n                        ...selectedRoute\n                    }\n                ]\n                rates.bestRoute = txRoute;\n                const txParams = await paraswap.buildTx(\n                    deposit.token.address,\n                    destination.token.address,\n                    fromAmount.toFixed(0),\n                    toAmount.toFixed(0),\n                    rates,\n                    this.props.web3.account,\n                    PARASWAP_REFERRER_ACCOUNT,\n                    ''\n                );\n\n\n                this.setBuyState('send_tx')\n\n                if(txParams?.message) {\n                    toast.error(txParams.message);\n\n                    this.setBuyState('failed');\n                    this.setDefaultBuyState();\n\n                    return false;\n                }\n\n                this.web3.eth.sendTransaction(txParams, async (err, transactionHash) => {\n                    if (err) {\n                        this.setBuyState('failed')\n\n                        this.setDefaultBuyState()\n\n                        if(err.code === 4001){\n                            toast.error(t('errors.canceled'))\n                        } else {\n                            toast.error(t('errors.default'))\n                        }\n\n                        this.isExchangeInProgress = false;\n                        return false;\n                    }\n                    this.setBuyState('submitted')\n\n                    this.setDefaultBuyState()\n                    this.isExchangeInProgress = false;\n                    toast.success(t('instantSwap.orderSubmitted'));\n                    window.open(`https://etherscan.io/tx/${transactionHash}`, '_blank');\n                });\n            } else {\n                this.setBuyState('pending')\n\n                this.setDefaultBuyState()\n            }\n        } catch(e) {\n            this.setBuyState('failed')\n\n            this.setDefaultBuyState()\n\n            if(e.hasOwnProperty('code')) {\n                if(e.code === 4001) {\n                    toast.error(t('errors.canceled'))\n                } else {\n                    toast.error(t('errors.default'))\n                }\n            } else {\n                toast.error(t('errors.default'))\n            }\n            this.isExchangeInProgress = false;\n        }\n    }\n\n    dexagBuyHandler = async (pair, rate) => {\n        let valid = false;\n        const { t } = this.props;\n        try {\n            this.setBuyState('initializing')\n\n            let { deposit, destination } = pair;\n\n            const sdk = this.api.dexag.sdk;\n            sdk.registerStatusHandler((status, data) => {\n                switch(status) {\n                    case 'rejected': {\n                        this.setBuyState('failed')\n                        this.setDefaultBuyState()\n                        toast.error(t('errors.failedTxn'));\n                        break;\n                    }\n                    case 'network': {\n                        toast.error(t('errors.wrongNetwork'))\n                        break;\n                    }\n                    case 'send_trade': {\n                        this.setBuyState('submitted')\n                        this.setDefaultBuyState()\n                        window.open(`https://etherscan.io/tx/${data}`, '_blank');\n                        break;\n                    }\n                    case 'failed': {\n                        this.setBuyState('failed')\n                        this.setDefaultBuyState()\n                        toast.error(t('errors.failedTxn'));\n                        window.open(`https://etherscan.io/tx/${data}`, '_blank');\n                        break;\n                    }\n                    case 'bad_tx': {\n                        this.setBuyState('failed')\n                        this.setDefaultBuyState()\n                        toast.error(t('errors.insufficientGas'));\n                        break;\n                    }\n                }\n            });\n\n            this.setBuyState('create_tx')\n            const tx = await sdk.getTrade({to: destination.token.symbol, from: deposit.token.symbol, fromAmount: deposit.value, dex: rate.platform});\n\n\n            this.setBuyState('validation')\n            valid = await sdk.validate(tx);\n\n            if (valid) {\n                sdk.trade(tx);\n            }\n\n        } catch(e) {\n            this.setBuyState('failed')\n            this.setDefaultBuyState()\n\n            if(e.hasOwnProperty('code')) {\n                if(e.code !== 4001) {\n                    toast.error(t('errors.default'))\n                }\n\n                if(!valid) {\n                    toast.error(t('errors.instantSwapInvalidTxn'))\n                }\n            } else {\n\n                if(!valid) {\n                    toast.error(t('errors.instantSwapInvalidTxn'))\n                }\n                toast.error(t('errors.default'))\n            }\n\n            this.isExchangeInProgress = false;\n        }\n\n    }\n\n    simpleSwapBuyHandler = async (pair, rate) => {\n        try {\n            this.setBuyState('initializing')\n            let { deposit, destination } = pair;\n\n\n            this.setBuyState('validation')\n            if(deposit.value < rate.min || (rate.max > 0 && deposit.value >= rate.max)) {\n                toast.error(deposit.value < rate.min ? `The minimum value for this transaction is ${rate.min}` : `The maximum value for this transaction is ${rate.max}`)\n                this.setBuyState('failed')\n                this.setDefaultBuyState()\n                return;\n            }\n\n            this.setBuyState('create_tx')\n            const res = await this.api.simpleSwap.set('exchange', {\n                data: {\n                    fixed: SIMPLE_SWAP_FIXED,\n                    currency_from: deposit.token.symbol.toLowerCase(),\n                    currency_to: destination.token.symbol.toLowerCase(),\n                    amount: deposit.value,\n                    address_to: this.props.web3.account,\n                }\n            })\n\n            if(res) {\n                if(res.code && res.code !== 200) {\n                    toast.error(res.message);\n                } else {\n                    toast.success('Your order submitted successfully!')\n                    this.setBuyState('submitted')\n                    this.setState({\n                        showQrModal: true,\n                        orderType: 'simpleSwap',\n                        order: res,\n                    })\n                    this.setDefaultBuyState()\n                }\n            }\n\n        } catch(e) {\n            toast.error('An Error was occurred')\n            this.setBuyState('failed')\n            this.setDefaultBuyState()\n        }\n    }\n\n    stealthexBuyHandler = async (pair, rate) => {\n        const { t } = this.props;\n        try {\n            this.setBuyState('initializing')\n            let { deposit, destination } = pair;\n\n\n            this.setBuyState('validation')\n            if(deposit.value < rate.min || (rate.max > 0 && deposit.value >= rate.max)) {\n                toast.error(deposit.value < rate.min ? `${t('errors.min')} ${rate.min}` : `${t('errors.max')} ${rate.max}`)\n                this.setBuyState('failed')\n                this.setDefaultBuyState()\n                return;\n            }\n\n            this.setBuyState('create_tx')\n            const res = await this.api.stealthex.set('exchange', {\n                data: {\n                    currency_from: deposit.token.symbol.toLowerCase(),\n                    currency_to: destination.token.symbol.toLowerCase(),\n                    amount_from: deposit.value,\n                    address_to: this.props.web3.account,\n                }\n            })\n\n            if(res) {\n                if(res?.code && res?.code !== 200) {\n                    toast.error(res?.message || t('errors.default'));\n                } else {\n                    toast.success(t('instantSwap.orderSubmitted'))\n                    this.setBuyState('submitted')\n                    this.setState({\n                        showQrModal: true,\n                        orderType: 'stealthex',\n                        order: res,\n                    })\n                    this.setDefaultBuyState()\n                }\n            }\n\n        } catch(e) {\n            console.log(e);\n            toast.error('An Error was occurred')\n            this.setBuyState('failed')\n            this.setDefaultBuyState()\n        }\n    }\n\n    buyHandler = async () => {\n        if(!this.props.web3.account) {\n            this.props.toggleWalletModal();\n        } else {\n            if(!this.isExchangeInProgress) {\n                this.isExchangeInProgress = true;\n\n                const { pair, rate } = this.state;\n                let result;\n\n                switch(rate.source) {\n                    case '1inch': {\n                        result = await this.oneInchBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'paraswap': {\n                        result = await this.paraSwapBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'dexag': {\n                        result = await this.dexagBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'simpleSwap': {\n                        result = await this.simpleSwapBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'stealthex': {\n                        result = await this.stealthexBuyHandler(pair, rate);\n                        break;\n                    }\n                    case 'godex': {\n                        result = await this.godexBuyHandler(pair, rate);\n                        break;\n                    }\n                }\n\n                this.isExchangeInProgress = false;\n            }\n        }\n\n    }\n    toggleShowMore = () => {\n        this.setState(prevState => {\n            return {\n                showMore: !prevState.showMore,\n            }\n        })\n    }\n\n    render() {\n        const {pair, rate, hasEnoughBalance, rates, loading, loadingState, buyState} = this.state;\n        const { t } = this.props;\n\n        return (\n            <Page>\n                <StyledRow>\n                    <Col xs={12} md={{ offset: 3, span: 6}}>\n                        <CustomCard>\n                            <Row>\n                                <Col xs={12} style={{ marginBottom: 20 }}>\n                                    <SwapInputPanel\n                                        value={pair.deposit.value}\n                                        onUserInput={this.onUserInputHandler}\n                                        label={t('instantSwap.fromLabel')}\n                                        onSelect={this.onSelect}\n                                        selected={pair.deposit.token}\n                                        currencies={tokens}\n                                        type={'deposit'}\n                                        id={'deposit'}\n                                        onChangeBalance={this.onChangeBalance}\n                                    />\n                                </Col>\n                                <Col xs={12} className={'gutter-b'} style={{ marginBottom: !rate ? '40px' : '0'}}>\n                                    <SwapInputPanel\n                                        value={pair.destination.value}\n                                        onUserInput={this.onUserInputHandler}\n                                        label={t('instantSwap.toLabel') + \" \" + t('estimated')}\n                                        onSelect={this.onSelect}\n                                        selected={pair.destination.token}\n                                        currencies={tokens}\n                                        type={'destination'}\n                                        id={'destination'}\n                                    />\n                                </Col>\n                                {!!rate ? (\n                                    <Col xs={12} className={'d-flex justify-content-between align-items-center gutter-b'} style={{ marginBottom: 60 }}>\n                                        <RateText fontWeight={400} fontSize={isMobile ? 12 : 14}>\n                                            Exchange Rate\n                                        </RateText>\n                                        <RateText fontWeight={isMobile ? 400 : 500} fontSize={isMobile ? 12 : 16}>\n                                            {pair.deposit.token && pair.destination.token ? `1 ${pair.deposit.token.symbol || pair.deposit.token.code} = ${rate.rate.toFixed(4)} ${pair.destination.token.symbol || pair.destination.token.code}` : null}\n                                        </RateText>\n                                    </Col>\n                                ) : ''}\n\n                                <Col xs={12} className={'d-flex flex-column align-items-stretch align-items-md-center justify-content-center'}>\n                                    {loading  ? (\n                                        <div className={`d-flex flex-column align-items-stretch justify-content-center align-self-stretch`}>\n                                            <RateText\n                                                fontWeight={400}\n                                                fontSize={isMobile ? 12 : 16}\n                                            >\n                                                {t('instantSwap.exchangeSearch', {\n                                                    loaded: loadingState.loaded,\n                                                    all: loadingState.all\n                                                })}\n                                            </RateText>\n                                            <ProgressContainer>\n                                                <ProgressBar\n                                                    now={(loadingState.loaded / loadingState.all * 100).toFixed(0)}\n                                                    variant={loadingState.loaded === loadingState.all ? 'success' : 'primary'}\n                                                    className={'align-self-stretch w-100 progress-xs'} />\n                                            </ProgressContainer>\n\n                                        </div>\n                                    ) : (\n                                        <SwapButton\n                                                onClick={this.buyHandler}\n                                                className={'py-3'}\n                                                disabled={this.props.web3.account && (!(pair.deposit.token && pair.destination.token && pair.deposit.value && pair.destination.value && hasEnoughBalance && Number(pair.deposit.value) > 0 && rate) || rate.platform === 'godex')}\n                                                variant={\n                                                    pair.deposit.token && pair.destination.token && pair.deposit.value && pair.destination.value && hasEnoughBalance && Number(pair.deposit.value) > 0 && rate ? 'primary' : 'outline-primary'\n                                                }\n                                        >\n                                            {\n                                                !this.props.web3.account ? t('wallet.connect') :\n                                                !pair.deposit.token || !pair.destination.token ? t('exchange.selectPair') :\n                                                    !hasEnoughBalance ? t('insufficientBalance') :\n                                                        !pair.deposit.value || !pair.destination.value ? t('exchange.enterAmount') :\n                                                            !rate && !loading ? t('errors.unavailablePair') :\n                                                                rate.platform === 'godex' ? t('errors.unavailablePair') :\n                                                                    Number(pair.deposit.value) > 0 ? this.getBuyStates()[buyState] : t('exchange.enterAmount')\n                                            }\n                                        </SwapButton>\n                                    )}\n\n                                </Col>\n                                {rates.length > 0 && !loading && (\n                                    <Col xs={12} className={'d-flex flex-column'} style={{ marginTop: 36 }}>\n                                        {rates.map((item, index) => {\n                                            return (\n                                                <PlatformCard selected={item?.platform === rate?.platform} key={`show-all-${item.platform}`} onClick={this.selectRate.bind(this, item)} className={`d-flex align-items-center justify-content-between`}>\n                                                    <div className={'d-flex align-items-center'} style={{ flex: 1}}>\n                                                        <Logo src={toAbsoluteUrl(`/media/dex/${DEXesImages[item.platform]}`)} size={30} alt={item.platform}/>\n                                                        <RateText fontSize={isMobile ? 12 : 16} fontWeight={isMobile ? 400 : 500} style={{ flex: 1}}>\n                                                            {DEXesName[item.platform]}\n                                                        </RateText>\n                                                    </div>\n\n                                                    <div className={'d-flex flex-row align-items-center justify-content-center'} style={{ flex: 1}}>\n                                                        <RateText fontWeight={500} fontSize={isMobile ? 12 : 16} className={isMobile ? 'mr-2' : 'mr-3'}>\n                                                            {item.rate.toFixed(6)} {pair.destination.token.symbol}/{pair.deposit.token.symbol}\n                                                        </RateText>\n                                                        {index === 0 ? (\n                                                            <span className=\"label label-inline label-lg label-light-primary\">{t('best')}</span>\n                                                        ) : (\n                                                            <span style={{ display: 'block', flexBasis: 55, minWidth: 55}}/>\n                                                        )}\n                                                    </div>\n                                                </PlatformCard>\n                                            )\n                                        })}\n                                    </Col>\n                                )}\n                            </Row>\n                        </CustomCard>\n                    </Col>\n                </StyledRow>\n                <Modal\n                    show={this.state.showQrModal}\n                    centered\n                    onHide={() => {\n                        this.setState({\n                            showQrModal: false,\n                        })\n                    }}\n                    size={'lg'}\n                >\n                    <Modal.Body className={'d-flex flex-column'} style={{ minHeight: 480, padding: '30px 60px' }}>\n                        <RowBetween style={{ padding: '8px 0 24px' }}>\n                            <div />\n                            <CloseIcon onClick={() => {\n                                this.setState({\n                                    showQrModal: false,\n                                })\n                            }} />\n                        </RowBetween>\n                        {this.state.orderType !== null && (\n                            <div className=\"d-flex flex-column flex-grow-1 justify-content-start align-items-center\">\n                                <h4 className=\"font-weight-bold mt-0 mb-0\" style={{ paddingTop: 30 }}>{t('instantSwap.submitted')}</h4>\n                                <div style={{ paddingTop: 40, paddingBottom: 45, marginBottom: 'auto' }}>\n                                    <QRCode value={this.state.order?.address_from || ''} fgColor={this.props.darkMode ? '#fff' : '#202020'} bgColor={'transparent'}/>\n                                </div>\n                                <div className=\"d-flex flex-column align-items-stretch align-self-stretch mb-4\">\n                                    <span className=\"font-size-large mb-2 d-block\">{t('instantSwap.sendCrypto', {\n                                        amount: this.state.order?.amount_from,\n                                        crypto: this.state.order?.currency_from?.toUpperCase()\n                                    })}</span>\n                                    <span className=\"opacity-50 font-size-sm\">{t('instantSwap.exchangeDescription')}</span>\n                                </div>\n\n                                <div className={'align-self-stretch d-flex flex-column mb-3'}>\n                                    <span className=\"opacity-50 mb-2\">ADDRESS</span>\n                                    <span className=\" font-weight-bold\">{this.state.order?.address_from}</span>\n                                </div>\n                                <div className={'align-self-stretch d-flex flex-column'}>\n                                    <span className=\"opacity-50 mb-2\">Order ID</span>\n                                    <span>{this.state.order?.id}</span>\n                                </div>\n                            </div>\n                        )}\n                    </Modal.Body>\n                </Modal>\n            </Page>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        slippage: state.user.userSlippageTolerance,\n        darkMode: state.user.userDarkMode\n    }\n}\n\nexport default connect(mapStateToProps)(\n    withTranslation()(\n        withWeb3Account(\n            InstantSwap\n        )\n    )\n);\n"],"sourceRoot":""}